OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
PYSCF_TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 64
USE_NUMPY     : 0
USE_SCIPY     : 0
USE_TORCH     : 1
USE_TORCH_GPU : 0
arg.atm = [[ 4 20  1 23  0  0]
 [ 4 24  1 27  0  0]
 [ 4 28  1 31  0  0]
 [ 4 32  1 35  0  0]
 [ 4 36  1 39  0  0]
 [ 4 40  1 43  0  0]
 [ 4 44  1 47  0  0]
 [ 4 48  1 51  0  0]]
arg.bas = [[ 0  0  5  2  0 52 57  0]
 [ 0  1  5  2  0 67 72  0]
 [ 0  2  5  1  0 82 87  0]
 [ 1  0  5  2  0 52 57  0]
 [ 1  1  5  2  0 67 72  0]
 [ 1  2  5  1  0 82 87  0]
 [ 2  0  5  2  0 52 57  0]
 [ 2  1  5  2  0 67 72  0]
 [ 2  2  5  1  0 82 87  0]
 [ 3  0  5  2  0 52 57  0]
 [ 3  1  5  2  0 67 72  0]
 [ 3  2  5  1  0 82 87  0]
 [ 4  0  5  2  0 52 57  0]
 [ 4  1  5  2  0 67 72  0]
 [ 4  2  5  1  0 82 87  0]
 [ 5  0  5  2  0 52 57  0]
 [ 5  1  5  2  0 67 72  0]
 [ 5  2  5  1  0 82 87  0]
 [ 6  0  5  2  0 52 57  0]
 [ 6  1  5  2  0 67 72  0]
 [ 6  2  5  1  0 82 87  0]
 [ 7  0  5  2  0 52 57  0]
 [ 7  1  5  2  0 67 72  0]
 [ 7  2  5  1  0 82 87  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.14328643  0.75521952 -0.74331592
 -0.77915081 -0.08078366  1.95761895  0.29093741  0.02780209  0.48527241
  0.26332695  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225
 -1.44059548 -1.3150188  -0.76719096 -0.28600475 -0.05699711 -0.98316391
 -1.13158177 -0.64703904  0.43083118  0.15573998  5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.01465273  0.43485666  0.70818476
  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 14:57:15 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 8
[INPUT] num. electrons = 32
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 11.6062017390159, -63.0574091279915, 0.401589778745918
nuclear repulsion = -51.0496176102297
number of shells = 24
number of NR pGTOs = 360
number of NR cGTOs = 104
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:         9.40
lattice vectors  a1 [6.753333149, 0.000000000, 0.000000000]
                 a2 [0.000000000, 6.753333149, 0.000000000]
                 a3 [0.000000000, 0.000000000, 6.753333149]
dimension = 3
low_dim_ft_type = None
Cell volume = 308.003
rcut = 22.25045319935835 (nimgs = [4 4 4])
lattice sum = 899 cells
precision = 1e-08
pseudo = gth-pade
ke_cutoff = 200
    = [45 45 45] mesh (91125 PWs)
kmesh: [1, 1, 1] mesh: [45, 45, 45]
arg.atm = [[ 4 20  1 23  0  0]
 [ 4 24  1 27  0  0]
 [ 4 28  1 31  0  0]
 [ 4 32  1 35  0  0]
 [ 4 36  1 39  0  0]
 [ 4 40  1 43  0  0]
 [ 4 44  1 47  0  0]
 [ 4 48  1 51  0  0]]
arg.bas = [[ 0  0  5  2  0 52 57  0]
 [ 0  1  5  2  0 67 72  0]
 [ 0  2  5  1  0 82 87  0]
 [ 1  0  5  2  0 52 57  0]
 [ 1  1  5  2  0 67 72  0]
 [ 1  2  5  1  0 82 87  0]
 [ 2  0  5  2  0 52 57  0]
 [ 2  1  5  2  0 67 72  0]
 [ 2  2  5  1  0 82 87  0]
 [ 3  0  5  2  0 52 57  0]
 [ 3  1  5  2  0 67 72  0]
 [ 3  2  5  1  0 82 87  0]
 [ 4  0  5  2  0 52 57  0]
 [ 4  1  5  2  0 67 72  0]
 [ 4  2  5  1  0 82 87  0]
 [ 5  0  5  2  0 52 57  0]
 [ 5  1  5  2  0 67 72  0]
 [ 5  2  5  1  0 82 87  0]
 [ 6  0  5  2  0 52 57  0]
 [ 6  1  5  2  0 67 72  0]
 [ 6  2  5  1  0 82 87  0]
 [ 7  0  5  2  0 52 57  0]
 [ 7  1  5  2  0 67 72  0]
 [ 7  2  5  1  0 82 87  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.14328643  0.75521952 -0.74331592
 -0.77915081 -0.08078366  1.95761895  0.29093741  0.02780209  0.48527241
  0.26332695  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225
 -1.44059548 -1.3150188  -0.76719096 -0.28600475 -0.05699711 -0.98316391
 -1.13158177 -0.64703904  0.43083118  0.15573998  5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.01465273  0.43485666  0.70818476
  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 14:57:15 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 8
[INPUT] num. electrons = 32
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 11.6062017390159, -63.0574091279915, 0.401589778745918
nuclear repulsion = -51.0496176102297
number of shells = 24
number of NR pGTOs = 360
number of NR cGTOs = 104
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:         9.42
lattice vectors  a1 [6.753333149, 0.000000000, 0.000000000]
                 a2 [0.000000000, 6.753333149, 0.000000000]
                 a3 [0.000000000, 0.000000000, 6.753333149]
dimension = 3
low_dim_ft_type = None
Cell volume = 308.003
rcut = 22.25045319935835 (nimgs = [4 4 4])
lattice sum = 899 cells
precision = 1e-08
pseudo = gth-pade
mesh = [45, 45, 45] (91125 PWs)
    = ke_cutoff [209.4781616 209.4781616 209.4781616]
cell: 491520
group: [[0, 1], [2, 3], [4, 5], [6, 7]]
ISDF: mol.ke_cutoff = 200.000000
ISDF: mol.natm      = 8
ISDF: mol.nao       = 104
************* get_partition *************
************* end get_partition *************
       get_partition wall time:     0.377418 CPU time:     0.375654
len of partition[   0] =  10841
len of partition[   1] =  11991
len of partition[   2] =  10860
len of partition[   3] =  12012
len of partition[   4] =  10819
len of partition[   5] =  11954
len of partition[   6] =  10765
len of partition[   7] =  11883
************* get_aoR *************
************* end get_aoR *************
             get_aoR wall time:     8.831322 CPU time:     8.805021
In _build_buffer: ISDF Local size of buffer = 355.957 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  305
select_IP_local_atm: npt_found =  317
select_IP_local_atm: npt_found =  326
select_IP_local_atm: npt_found =  331
select_IP_local_atm: npt_found =  301
select_IP_local_atm: npt_found =  330
select_IP_local_atm: npt_found =  307
select_IP_local_atm: npt_found =  331
select_IP_local_step1 wall time:    13.688081 CPU time:   852.377214
 build_aoRg_possible wall time:     0.009817 CPU time:     0.618133
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  622
select_IP_local_group: npt_found =  524
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  657
select_IP_local_group: npt_found =  532
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  631
select_IP_local_group: npt_found =  526
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  638
select_IP_local_group: npt_found =  505
select_IP_local_step2 wall time:     2.621353 CPU time:   162.017626
select_IP_local_step3 wall time:     0.017251 CPU time:     1.148091
Memory usage for aoR  :     72.310 MB
Memory usage for aoRg :      1.662 MB
            build_IP wall time:    16.336502 CPU time:  1016.161065
build_aux_basis_local wall time:     0.342087 CPU time:    21.816076
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
Memory usage for V:      0.000 MB
Memory usage for W:     33.230 MB
     build_V_W_local wall time:     6.772811 CPU time:    39.086383
Initial guess from minao.
Big error detected in the electron number of initial guess density matrix (Ne/cell = 31.4598)!
  This can cause huge error in Fock matrix and lead to instability in SCF for low-dimensional systems.
  DM is normalized wrt the number of electrons 32
Building PBC AO integrals incore
      isdf_local_eri wall time:     0.784600 CPU time:    47.590730
    CPU time for vj and vk     52.33 sec, wall time      0.94 sec
Ewald components = 0.000105727067579829, -0.251544692466148, 0.0413725125048105
    CPU time for vj and vk      0.19 sec, wall time      0.19 sec
kmesh: [1, 1, 2] mesh: [45, 45, 90]
arg.atm = [[ 4 20  1 23  0  0]
 [ 4 24  1 27  0  0]
 [ 4 28  1 31  0  0]
 [ 4 32  1 35  0  0]
 [ 4 36  1 39  0  0]
 [ 4 40  1 43  0  0]
 [ 4 44  1 47  0  0]
 [ 4 48  1 51  0  0]
 [ 4 52  1 55  0  0]
 [ 4 56  1 59  0  0]
 [ 4 60  1 63  0  0]
 [ 4 64  1 67  0  0]
 [ 4 68  1 71  0  0]
 [ 4 72  1 75  0  0]
 [ 4 76  1 79  0  0]
 [ 4 80  1 83  0  0]]
arg.bas = [[  0   0   5   2   0  84  89   0]
 [  0   1   5   2   0  99 104   0]
 [  0   2   5   1   0 114 119   0]
 [  1   0   5   2   0  84  89   0]
 [  1   1   5   2   0  99 104   0]
 [  1   2   5   1   0 114 119   0]
 [  2   0   5   2   0  84  89   0]
 [  2   1   5   2   0  99 104   0]
 [  2   2   5   1   0 114 119   0]
 [  3   0   5   2   0  84  89   0]
 [  3   1   5   2   0  99 104   0]
 [  3   2   5   1   0 114 119   0]
 [  4   0   5   2   0  84  89   0]
 [  4   1   5   2   0  99 104   0]
 [  4   2   5   1   0 114 119   0]
 [  5   0   5   2   0  84  89   0]
 [  5   1   5   2   0  99 104   0]
 [  5   2   5   1   0 114 119   0]
 [  6   0   5   2   0  84  89   0]
 [  6   1   5   2   0  99 104   0]
 [  6   2   5   1   0 114 119   0]
 [  7   0   5   2   0  84  89   0]
 [  7   1   5   2   0  99 104   0]
 [  7   2   5   1   0 114 119   0]
 [  8   0   5   2   0  84  89   0]
 [  8   1   5   2   0  99 104   0]
 [  8   2   5   1   0 114 119   0]
 [  9   0   5   2   0  84  89   0]
 [  9   1   5   2   0  99 104   0]
 [  9   2   5   1   0 114 119   0]
 [ 10   0   5   2   0  84  89   0]
 [ 10   1   5   2   0  99 104   0]
 [ 10   2   5   1   0 114 119   0]
 [ 11   0   5   2   0  84  89   0]
 [ 11   1   5   2   0  99 104   0]
 [ 11   2   5   1   0 114 119   0]
 [ 12   0   5   2   0  84  89   0]
 [ 12   1   5   2   0  99 104   0]
 [ 12   2   5   1   0 114 119   0]
 [ 13   0   5   2   0  84  89   0]
 [ 13   1   5   2   0  99 104   0]
 [ 13   2   5   1   0 114 119   0]
 [ 14   0   5   2   0  84  89   0]
 [ 14   1   5   2   0  99 104   0]
 [ 14   2   5   1   0 114 119   0]
 [ 15   0   5   2   0  84  89   0]
 [ 15   1   5   2   0  99 104   0]
 [ 15   2   5   1   0 114 119   0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          0.          0.
  6.75333315  0.          1.68833329  1.68833329  8.44166644  0.
  3.37666657  3.37666657  6.75333315  0.          5.06499986  5.06499986
  8.44166644  0.          3.37666657  0.         10.12999972  0.
  5.06499986  1.68833329 11.81833301  0.          0.          3.37666657
 10.12999972  0.          1.68833329  5.06499986 11.81833301  0.
  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225  1.14328643
  0.75521952 -0.74331592 -0.77915081 -0.08078366  1.95761895  0.29093741
  0.02780209  0.48527241  0.26332695  5.60533075  2.11301639  0.76991145
  0.34815709  0.12821225 -1.44059548 -1.3150188  -0.76719096 -0.28600475
 -0.05699711 -0.98316391 -1.13158177 -0.64703904  0.43083118  0.15573998
  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225  1.01465273
  0.43485666  0.70818476  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 14:57:49 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 16
[INPUT] num. electrons = 64
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT]  9 C      0.000000000000   0.000000000000   3.573710000000 AA    0.000000000000   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 10 C      0.893427500000   0.893427500000   4.467137500000 AA    1.688333287155   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 11 C      1.786855000000   1.786855000000   3.573710000000 AA    3.376666574310   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 12 C      2.680282500000   2.680282500000   4.467137500000 AA    5.064999861465   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 13 C      1.786855000000   0.000000000000   5.360565000000 AA    3.376666574310   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 14 C      2.680282500000   0.893427500000   6.253992500000 AA    5.064999861465   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 15 C      0.000000000000   1.786855000000   5.360565000000 AA    0.000000000000   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 16 C      0.893427500000   2.680282500000   6.253992500000 AA    1.688333287155   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 36.0289989359732, -138.385048104828, 0.256813947419847
nuclear repulsion = -102.099235221435
number of shells = 48
number of NR pGTOs = 720
number of NR cGTOs = 208
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 24, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 25, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 26, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 27, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 28, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 29, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 30, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 31, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 32, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 33, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 34, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 35, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 36, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 37, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 38, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 39, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 40, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 41, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 42, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 43, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 44, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 45, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 46, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 47, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:      1157.43
lattice vectors  a1 [6.753333149, 0.000000000, 0.000000000]
                 a2 [0.000000000, 6.753333149, 0.000000000]
                 a3 [0.000000000, 0.000000000, 13.506666297]
dimension = 3
low_dim_ft_type = None
Cell volume = 616.005
rcut = 22.25045319935835 (nimgs = [4 4 2])
lattice sum = 623 cells
precision = 1e-08
pseudo = gth-pade
mesh = [45, 45, 90] (182250 PWs)
    = ke_cutoff [209.4781616 209.4781616 209.4781616]
cell: 491520
group: [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15]]
ISDF: mol.ke_cutoff = 200.000000
ISDF: mol.natm      = 16
ISDF: mol.nao       = 208
************* get_partition *************
************* end get_partition *************
       get_partition wall time:     0.520548 CPU time:     1.065622
len of partition[   0] =  10841
len of partition[   1] =  11949
len of partition[   2] =  10839
len of partition[   3] =  11956
len of partition[   4] =  10817
len of partition[   5] =  11985
len of partition[   6] =  10763
len of partition[   7] =  11914
len of partition[   8] =  10841
len of partition[   9] =  11997
len of partition[  10] =  10876
len of partition[  11] =  11969
len of partition[  12] =  10825
len of partition[  13] =  11990
len of partition[  14] =  10768
len of partition[  15] =  11920
************* get_aoR *************
************* end get_aoR *************
             get_aoR wall time:    17.369310 CPU time:    17.331704
In _build_buffer: ISDF Local size of buffer = 711.914 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  312
select_IP_local_atm: npt_found =  328
select_IP_local_atm: npt_found =  310
select_IP_local_atm: npt_found =  321
select_IP_local_atm: npt_found =  297
select_IP_local_atm: npt_found =  348
select_IP_local_atm: npt_found =  307
select_IP_local_atm: npt_found =  323
select_IP_local_atm: npt_found =  310
select_IP_local_atm: npt_found =  338
select_IP_local_atm: npt_found =  334
select_IP_local_atm: npt_found =  331
select_IP_local_atm: npt_found =  296
select_IP_local_atm: npt_found =  327
select_IP_local_atm: npt_found =  309
select_IP_local_atm: npt_found =  329
select_IP_local_step1 wall time:    15.660304 CPU time:   990.670207
 build_aoRg_possible wall time:     0.023660 CPU time:     1.524878
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  640
select_IP_local_group: npt_found =  528
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  631
select_IP_local_group: npt_found =  515
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  645
select_IP_local_group: npt_found =  530
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  630
select_IP_local_group: npt_found =  527
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  648
select_IP_local_group: npt_found =  526
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  665
select_IP_local_group: npt_found =  500
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  623
select_IP_local_group: npt_found =  513
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  638
select_IP_local_group: npt_found =  522
select_IP_local_step2 wall time:     0.488062 CPU time:    31.113524
select_IP_local_step3 wall time:     0.040060 CPU time:     2.552799
Memory usage for aoR  :    289.240 MB
Memory usage for aoRg :      6.629 MB
            build_IP wall time:    16.212086 CPU time:  1025.861407
build_aux_basis_local wall time:     0.985764 CPU time:    62.491038
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
Memory usage for V:      0.000 MB
Memory usage for W:    132.095 MB
     build_V_W_local wall time:    24.755645 CPU time:   107.127529
Initial guess from minao.
Big error detected in the electron number of initial guess density matrix (Ne/cell = 63.3632)!
  This can cause huge error in Fock matrix and lead to instability in SCF for low-dimensional systems.
  DM is normalized wrt the number of electrons 64
Building PBC AO integrals incore
      isdf_local_eri wall time:    16.052733 CPU time:   687.638250
    CPU time for vj and vk    689.87 sec, wall time     18.29 sec
Ewald components = 0.000314592933934792, -0.215113710861397, 0.081099078945861
    CPU time for vj and vk      1.52 sec, wall time      1.52 sec
kmesh: [1, 2, 2] mesh: [45, 90, 90]
arg.atm = [[  4  20   1  23   0   0]
 [  4  24   1  27   0   0]
 [  4  28   1  31   0   0]
 [  4  32   1  35   0   0]
 [  4  36   1  39   0   0]
 [  4  40   1  43   0   0]
 [  4  44   1  47   0   0]
 [  4  48   1  51   0   0]
 [  4  52   1  55   0   0]
 [  4  56   1  59   0   0]
 [  4  60   1  63   0   0]
 [  4  64   1  67   0   0]
 [  4  68   1  71   0   0]
 [  4  72   1  75   0   0]
 [  4  76   1  79   0   0]
 [  4  80   1  83   0   0]
 [  4  84   1  87   0   0]
 [  4  88   1  91   0   0]
 [  4  92   1  95   0   0]
 [  4  96   1  99   0   0]
 [  4 100   1 103   0   0]
 [  4 104   1 107   0   0]
 [  4 108   1 111   0   0]
 [  4 112   1 115   0   0]
 [  4 116   1 119   0   0]
 [  4 120   1 123   0   0]
 [  4 124   1 127   0   0]
 [  4 128   1 131   0   0]
 [  4 132   1 135   0   0]
 [  4 136   1 139   0   0]
 [  4 140   1 143   0   0]
 [  4 144   1 147   0   0]]
arg.bas = [[  0   0   5   2   0 148 153   0]
 [  0   1   5   2   0 163 168   0]
 [  0   2   5   1   0 178 183   0]
 [  1   0   5   2   0 148 153   0]
 [  1   1   5   2   0 163 168   0]
 [  1   2   5   1   0 178 183   0]
 [  2   0   5   2   0 148 153   0]
 [  2   1   5   2   0 163 168   0]
 [  2   2   5   1   0 178 183   0]
 [  3   0   5   2   0 148 153   0]
 [  3   1   5   2   0 163 168   0]
 [  3   2   5   1   0 178 183   0]
 [  4   0   5   2   0 148 153   0]
 [  4   1   5   2   0 163 168   0]
 [  4   2   5   1   0 178 183   0]
 [  5   0   5   2   0 148 153   0]
 [  5   1   5   2   0 163 168   0]
 [  5   2   5   1   0 178 183   0]
 [  6   0   5   2   0 148 153   0]
 [  6   1   5   2   0 163 168   0]
 [  6   2   5   1   0 178 183   0]
 [  7   0   5   2   0 148 153   0]
 [  7   1   5   2   0 163 168   0]
 [  7   2   5   1   0 178 183   0]
 [  8   0   5   2   0 148 153   0]
 [  8   1   5   2   0 163 168   0]
 [  8   2   5   1   0 178 183   0]
 [  9   0   5   2   0 148 153   0]
 [  9   1   5   2   0 163 168   0]
 [  9   2   5   1   0 178 183   0]
 [ 10   0   5   2   0 148 153   0]
 [ 10   1   5   2   0 163 168   0]
 [ 10   2   5   1   0 178 183   0]
 [ 11   0   5   2   0 148 153   0]
 [ 11   1   5   2   0 163 168   0]
 [ 11   2   5   1   0 178 183   0]
 [ 12   0   5   2   0 148 153   0]
 [ 12   1   5   2   0 163 168   0]
 [ 12   2   5   1   0 178 183   0]
 [ 13   0   5   2   0 148 153   0]
 [ 13   1   5   2   0 163 168   0]
 [ 13   2   5   1   0 178 183   0]
 [ 14   0   5   2   0 148 153   0]
 [ 14   1   5   2   0 163 168   0]
 [ 14   2   5   1   0 178 183   0]
 [ 15   0   5   2   0 148 153   0]
 [ 15   1   5   2   0 163 168   0]
 [ 15   2   5   1   0 178 183   0]
 [ 16   0   5   2   0 148 153   0]
 [ 16   1   5   2   0 163 168   0]
 [ 16   2   5   1   0 178 183   0]
 [ 17   0   5   2   0 148 153   0]
 [ 17   1   5   2   0 163 168   0]
 [ 17   2   5   1   0 178 183   0]
 [ 18   0   5   2   0 148 153   0]
 [ 18   1   5   2   0 163 168   0]
 [ 18   2   5   1   0 178 183   0]
 [ 19   0   5   2   0 148 153   0]
 [ 19   1   5   2   0 163 168   0]
 [ 19   2   5   1   0 178 183   0]
 [ 20   0   5   2   0 148 153   0]
 [ 20   1   5   2   0 163 168   0]
 [ 20   2   5   1   0 178 183   0]
 [ 21   0   5   2   0 148 153   0]
 [ 21   1   5   2   0 163 168   0]
 [ 21   2   5   1   0 178 183   0]
 [ 22   0   5   2   0 148 153   0]
 [ 22   1   5   2   0 163 168   0]
 [ 22   2   5   1   0 178 183   0]
 [ 23   0   5   2   0 148 153   0]
 [ 23   1   5   2   0 163 168   0]
 [ 23   2   5   1   0 178 183   0]
 [ 24   0   5   2   0 148 153   0]
 [ 24   1   5   2   0 163 168   0]
 [ 24   2   5   1   0 178 183   0]
 [ 25   0   5   2   0 148 153   0]
 [ 25   1   5   2   0 163 168   0]
 [ 25   2   5   1   0 178 183   0]
 [ 26   0   5   2   0 148 153   0]
 [ 26   1   5   2   0 163 168   0]
 [ 26   2   5   1   0 178 183   0]
 [ 27   0   5   2   0 148 153   0]
 [ 27   1   5   2   0 163 168   0]
 [ 27   2   5   1   0 178 183   0]
 [ 28   0   5   2   0 148 153   0]
 [ 28   1   5   2   0 163 168   0]
 [ 28   2   5   1   0 178 183   0]
 [ 29   0   5   2   0 148 153   0]
 [ 29   1   5   2   0 163 168   0]
 [ 29   2   5   1   0 178 183   0]
 [ 30   0   5   2   0 148 153   0]
 [ 30   1   5   2   0 163 168   0]
 [ 30   2   5   1   0 178 183   0]
 [ 31   0   5   2   0 148 153   0]
 [ 31   1   5   2   0 163 168   0]
 [ 31   2   5   1   0 178 183   0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          0.          0.
  6.75333315  0.          1.68833329  1.68833329  8.44166644  0.
  3.37666657  3.37666657  6.75333315  0.          5.06499986  5.06499986
  8.44166644  0.          3.37666657  0.         10.12999972  0.
  5.06499986  1.68833329 11.81833301  0.          0.          3.37666657
 10.12999972  0.          1.68833329  5.06499986 11.81833301  0.
  0.          6.75333315  0.          0.          1.68833329  8.44166644
  1.68833329  0.          3.37666657 10.12999972  0.          0.
  5.06499986 11.81833301  1.68833329  0.          3.37666657  6.75333315
  3.37666657  0.          5.06499986  8.44166644  5.06499986  0.
  0.         10.12999972  3.37666657  0.          1.68833329 11.81833301
  5.06499986  0.          0.          6.75333315  6.75333315  0.
  1.68833329  8.44166644  8.44166644  0.          3.37666657 10.12999972
  6.75333315  0.          5.06499986 11.81833301  8.44166644  0.
  3.37666657  6.75333315 10.12999972  0.          5.06499986  8.44166644
 11.81833301  0.          0.         10.12999972 10.12999972  0.
  1.68833329 11.81833301 11.81833301  0.          5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.14328643  0.75521952 -0.74331592
 -0.77915081 -0.08078366  1.95761895  0.29093741  0.02780209  0.48527241
  0.26332695  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225
 -1.44059548 -1.3150188  -0.76719096 -0.28600475 -0.05699711 -0.98316391
 -1.13158177 -0.64703904  0.43083118  0.15573998  5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.01465273  0.43485666  0.70818476
  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 14:59:11 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 32
[INPUT] num. electrons = 128
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT]  9 C      0.000000000000   0.000000000000   3.573710000000 AA    0.000000000000   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 10 C      0.893427500000   0.893427500000   4.467137500000 AA    1.688333287155   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 11 C      1.786855000000   1.786855000000   3.573710000000 AA    3.376666574310   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 12 C      2.680282500000   2.680282500000   4.467137500000 AA    5.064999861465   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 13 C      1.786855000000   0.000000000000   5.360565000000 AA    3.376666574310   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 14 C      2.680282500000   0.893427500000   6.253992500000 AA    5.064999861465   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 15 C      0.000000000000   1.786855000000   5.360565000000 AA    0.000000000000   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 16 C      0.893427500000   2.680282500000   6.253992500000 AA    1.688333287155   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] 17 C      0.000000000000   3.573710000000   0.000000000000 AA    0.000000000000   6.753333148619   0.000000000000 Bohr   0.0
[INPUT] 18 C      0.893427500000   4.467137500000   0.893427500000 AA    1.688333287155   8.441666435774   1.688333287155 Bohr   0.0
[INPUT] 19 C      1.786855000000   5.360565000000   0.000000000000 AA    3.376666574310  10.129999722929   0.000000000000 Bohr   0.0
[INPUT] 20 C      2.680282500000   6.253992500000   0.893427500000 AA    5.064999861465  11.818333010084   1.688333287155 Bohr   0.0
[INPUT] 21 C      1.786855000000   3.573710000000   1.786855000000 AA    3.376666574310   6.753333148619   3.376666574310 Bohr   0.0
[INPUT] 22 C      2.680282500000   4.467137500000   2.680282500000 AA    5.064999861465   8.441666435774   5.064999861465 Bohr   0.0
[INPUT] 23 C      0.000000000000   5.360565000000   1.786855000000 AA    0.000000000000  10.129999722929   3.376666574310 Bohr   0.0
[INPUT] 24 C      0.893427500000   6.253992500000   2.680282500000 AA    1.688333287155  11.818333010084   5.064999861465 Bohr   0.0
[INPUT] 25 C      0.000000000000   3.573710000000   3.573710000000 AA    0.000000000000   6.753333148619   6.753333148619 Bohr   0.0
[INPUT] 26 C      0.893427500000   4.467137500000   4.467137500000 AA    1.688333287155   8.441666435774   8.441666435774 Bohr   0.0
[INPUT] 27 C      1.786855000000   5.360565000000   3.573710000000 AA    3.376666574310  10.129999722929   6.753333148619 Bohr   0.0
[INPUT] 28 C      2.680282500000   6.253992500000   4.467137500000 AA    5.064999861465  11.818333010084   8.441666435774 Bohr   0.0
[INPUT] 29 C      1.786855000000   3.573710000000   5.360565000000 AA    3.376666574310   6.753333148619  10.129999722929 Bohr   0.0
[INPUT] 30 C      2.680282500000   4.467137500000   6.253992500000 AA    5.064999861465   8.441666435774  11.818333010084 Bohr   0.0
[INPUT] 31 C      0.000000000000   5.360565000000   5.360565000000 AA    0.000000000000  10.129999722929  10.129999722929 Bohr   0.0
[INPUT] 32 C      0.893427500000   6.253992500000   6.253992500000 AA    1.688333287155  11.818333010084  11.818333010084 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 107.843734373629, -312.164399685187, 0.122194870153274
nuclear repulsion = -204.198470441405
number of shells = 96
number of NR pGTOs = 1440
number of NR cGTOs = 416
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 24, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 25, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 26, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 27, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 28, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 29, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 30, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 31, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 32, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 33, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 34, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 35, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 36, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 37, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 38, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 39, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 40, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 41, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 42, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 43, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 44, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 45, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 46, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 47, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 48, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 49, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 50, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 51, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 52, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 53, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 54, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 55, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 56, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 57, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 58, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 59, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 60, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 61, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 62, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 63, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 64, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 65, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 66, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 67, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 68, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 69, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 70, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 71, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 72, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 73, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 74, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 75, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 76, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 77, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 78, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 79, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 80, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 81, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 82, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 83, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 84, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 85, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 86, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 87, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 88, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 89, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 90, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 91, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 92, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 93, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 94, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 95, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:      3073.88
lattice vectors  a1 [6.753333149, 0.000000000, 0.000000000]
                 a2 [0.000000000, 13.506666297, 0.000000000]
                 a3 [0.000000000, 0.000000000, 13.506666297]
dimension = 3
low_dim_ft_type = None
Cell volume = 1232.01
rcut = 22.25045319935835 (nimgs = [4 2 2])
lattice sum = 411 cells
precision = 1e-08
pseudo = gth-pade
mesh = [45, 90, 90] (364500 PWs)
    = ke_cutoff [209.4781616 209.4781616 209.4781616]
cell: 491520
group: [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31]]
ISDF: mol.ke_cutoff = 200.000000
ISDF: mol.natm      = 32
ISDF: mol.nao       = 416
************* get_partition *************
************* end get_partition *************
       get_partition wall time:     1.194107 CPU time:     2.194856
len of partition[   0] =  10841
len of partition[   1] =  11909
len of partition[   2] =  10822
len of partition[   3] =  11976
len of partition[   4] =  10805
len of partition[   5] =  11941
len of partition[   6] =  10760
len of partition[   7] =  11932
len of partition[   8] =  10841
len of partition[   9] =  11968
len of partition[  10] =  10859
len of partition[  11] =  11998
len of partition[  12] =  10828
len of partition[  13] =  11966
len of partition[  14] =  10770
len of partition[  15] =  11946
len of partition[  16] =  10841
len of partition[  17] =  11963
len of partition[  18] =  10806
len of partition[  19] =  11934
len of partition[  20] =  10830
len of partition[  21] =  11965
len of partition[  22] =  10772
len of partition[  23] =  11940
len of partition[  24] =  10841
len of partition[  25] =  12008
len of partition[  26] =  10885
len of partition[  27] =  11987
len of partition[  28] =  10856
len of partition[  29] =  11959
len of partition[  30] =  10783
len of partition[  31] =  11968
************* get_aoR *************
************* end get_aoR *************
             get_aoR wall time:    37.572294 CPU time:    37.490571
In _build_buffer: ISDF Local size of buffer = 1423.828 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   32
select_IP_local_atm: npt_found =  313
select_IP_local_atm: npt_found =  318
select_IP_local_atm: npt_found =  315
select_IP_local_atm: npt_found =  319
select_IP_local_atm: npt_found =  297
select_IP_local_atm: npt_found =  340
select_IP_local_atm: npt_found =  303
select_IP_local_atm: npt_found =  333
select_IP_local_atm: npt_found =  301
select_IP_local_atm: npt_found =  324
select_IP_local_atm: npt_found =  317
select_IP_local_atm: npt_found =  323
select_IP_local_atm: npt_found =  324
select_IP_local_atm: npt_found =  333
select_IP_local_atm: npt_found =  304
select_IP_local_atm: npt_found =  320
select_IP_local_atm: npt_found =  329
select_IP_local_atm: npt_found =  324
select_IP_local_atm: npt_found =  318
select_IP_local_atm: npt_found =  344
select_IP_local_atm: npt_found =  336
select_IP_local_atm: npt_found =  341
select_IP_local_atm: npt_found =  316
select_IP_local_atm: npt_found =  326
select_IP_local_atm: npt_found =  304
select_IP_local_atm: npt_found =  312
select_IP_local_atm: npt_found =  313
select_IP_local_atm: npt_found =  334
select_IP_local_atm: npt_found =  313
select_IP_local_atm: npt_found =  342
select_IP_local_atm: npt_found =  307
select_IP_local_atm: npt_found =  314
select_IP_local_step1 wall time:    72.459287 CPU time:  4562.455208
 build_aoRg_possible wall time:     0.078017 CPU time:     4.977127
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  631
select_IP_local_group: npt_found =  531
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  634
select_IP_local_group: npt_found =  536
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  637
select_IP_local_group: npt_found =  540
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  636
select_IP_local_group: npt_found =  513
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  625
select_IP_local_group: npt_found =  532
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  640
select_IP_local_group: npt_found =  516
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  657
select_IP_local_group: npt_found =  532
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  624
select_IP_local_group: npt_found =  534
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  653
select_IP_local_group: npt_found =  536
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  662
select_IP_local_group: npt_found =  512
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  677
select_IP_local_group: npt_found =  531
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  642
select_IP_local_group: npt_found =  523
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  616
select_IP_local_group: npt_found =  530
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  647
select_IP_local_group: npt_found =  531
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  655
select_IP_local_group: npt_found =  523
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  621
select_IP_local_group: npt_found =  519
select_IP_local_step2 wall time:     0.960572 CPU time:    61.237235
select_IP_local_step3 wall time:     0.101116 CPU time:     5.967942
Memory usage for aoR  :   1156.962 MB
Memory usage for aoRg :     26.885 MB
            build_IP wall time:    73.598992 CPU time:  4634.637511
build_aux_basis_local wall time:     2.260102 CPU time:   140.915593
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
Memory usage for V:      0.000 MB
Memory usage for W:    543.340 MB
     build_V_W_local wall time:    97.139223 CPU time:   355.918737
Initial guess from minao.
Big error detected in the electron number of initial guess density matrix (Ne/cell = 127.438)!
  This can cause huge error in Fock matrix and lead to instability in SCF for low-dimensional systems.
  DM is normalized wrt the number of electrons 128
Building PBC AO integrals incore
      isdf_local_eri wall time:   652.564525 CPU time: 16141.611963
    CPU time for vj and vk  16179.61 sec, wall time    690.61 sec
Ewald components = 0.00052338569450741, -0.185982990105016, 0.0768750832611235
    CPU time for vj and vk     21.28 sec, wall time     20.99 sec
kmesh: [2, 2, 2] mesh: [90, 90, 90]
arg.atm = [[  4  20   1  23   0   0]
 [  4  24   1  27   0   0]
 [  4  28   1  31   0   0]
 [  4  32   1  35   0   0]
 [  4  36   1  39   0   0]
 [  4  40   1  43   0   0]
 [  4  44   1  47   0   0]
 [  4  48   1  51   0   0]
 [  4  52   1  55   0   0]
 [  4  56   1  59   0   0]
 [  4  60   1  63   0   0]
 [  4  64   1  67   0   0]
 [  4  68   1  71   0   0]
 [  4  72   1  75   0   0]
 [  4  76   1  79   0   0]
 [  4  80   1  83   0   0]
 [  4  84   1  87   0   0]
 [  4  88   1  91   0   0]
 [  4  92   1  95   0   0]
 [  4  96   1  99   0   0]
 [  4 100   1 103   0   0]
 [  4 104   1 107   0   0]
 [  4 108   1 111   0   0]
 [  4 112   1 115   0   0]
 [  4 116   1 119   0   0]
 [  4 120   1 123   0   0]
 [  4 124   1 127   0   0]
 [  4 128   1 131   0   0]
 [  4 132   1 135   0   0]
 [  4 136   1 139   0   0]
 [  4 140   1 143   0   0]
 [  4 144   1 147   0   0]
 [  4 148   1 151   0   0]
 [  4 152   1 155   0   0]
 [  4 156   1 159   0   0]
 [  4 160   1 163   0   0]
 [  4 164   1 167   0   0]
 [  4 168   1 171   0   0]
 [  4 172   1 175   0   0]
 [  4 176   1 179   0   0]
 [  4 180   1 183   0   0]
 [  4 184   1 187   0   0]
 [  4 188   1 191   0   0]
 [  4 192   1 195   0   0]
 [  4 196   1 199   0   0]
 [  4 200   1 203   0   0]
 [  4 204   1 207   0   0]
 [  4 208   1 211   0   0]
 [  4 212   1 215   0   0]
 [  4 216   1 219   0   0]
 [  4 220   1 223   0   0]
 [  4 224   1 227   0   0]
 [  4 228   1 231   0   0]
 [  4 232   1 235   0   0]
 [  4 236   1 239   0   0]
 [  4 240   1 243   0   0]
 [  4 244   1 247   0   0]
 [  4 248   1 251   0   0]
 [  4 252   1 255   0   0]
 [  4 256   1 259   0   0]
 [  4 260   1 263   0   0]
 [  4 264   1 267   0   0]
 [  4 268   1 271   0   0]
 [  4 272   1 275   0   0]]
arg.bas = [[  0   0   5 ... 276 281   0]
 [  0   1   5 ... 291 296   0]
 [  0   2   5 ... 306 311   0]
 ...
 [ 63   0   5 ... 276 281   0]
 [ 63   1   5 ... 291 296   0]
 [ 63   2   5 ... 306 311   0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          0.          0.
  6.75333315  0.          1.68833329  1.68833329  8.44166644  0.
  3.37666657  3.37666657  6.75333315  0.          5.06499986  5.06499986
  8.44166644  0.          3.37666657  0.         10.12999972  0.
  5.06499986  1.68833329 11.81833301  0.          0.          3.37666657
 10.12999972  0.          1.68833329  5.06499986 11.81833301  0.
  0.          6.75333315  0.          0.          1.68833329  8.44166644
  1.68833329  0.          3.37666657 10.12999972  0.          0.
  5.06499986 11.81833301  1.68833329  0.          3.37666657  6.75333315
  3.37666657  0.          5.06499986  8.44166644  5.06499986  0.
  0.         10.12999972  3.37666657  0.          1.68833329 11.81833301
  5.06499986  0.          0.          6.75333315  6.75333315  0.
  1.68833329  8.44166644  8.44166644  0.          3.37666657 10.12999972
  6.75333315  0.          5.06499986 11.81833301  8.44166644  0.
  3.37666657  6.75333315 10.12999972  0.          5.06499986  8.44166644
 11.81833301  0.          0.         10.12999972 10.12999972  0.
  1.68833329 11.81833301 11.81833301  0.          6.75333315  0.
  0.          0.          8.44166644  1.68833329  1.68833329  0.
 10.12999972  3.37666657  0.          0.         11.81833301  5.06499986
  1.68833329  0.         10.12999972  0.          3.37666657  0.
 11.81833301  1.68833329  5.06499986  0.          6.75333315  3.37666657
  3.37666657  0.          8.44166644  5.06499986  5.06499986  0.
  6.75333315  0.          6.75333315  0.          8.44166644  1.68833329
  8.44166644  0.         10.12999972  3.37666657  6.75333315  0.
 11.81833301  5.06499986  8.44166644  0.         10.12999972  0.
 10.12999972  0.         11.81833301  1.68833329 11.81833301  0.
  6.75333315  3.37666657 10.12999972  0.          8.44166644  5.06499986
 11.81833301  0.          6.75333315  6.75333315  0.          0.
  8.44166644  8.44166644  1.68833329  0.         10.12999972 10.12999972
  0.          0.         11.81833301 11.81833301  1.68833329  0.
 10.12999972  6.75333315  3.37666657  0.         11.81833301  8.44166644
  5.06499986  0.          6.75333315 10.12999972  3.37666657  0.
  8.44166644 11.81833301  5.06499986  0.          6.75333315  6.75333315
  6.75333315  0.          8.44166644  8.44166644  8.44166644  0.
 10.12999972 10.12999972  6.75333315  0.         11.81833301 11.81833301
  8.44166644  0.         10.12999972  6.75333315 10.12999972  0.
 11.81833301  8.44166644 11.81833301  0.          6.75333315 10.12999972
 10.12999972  0.          8.44166644 11.81833301 11.81833301  0.
  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225  1.14328643
  0.75521952 -0.74331592 -0.77915081 -0.08078366  1.95761895  0.29093741
  0.02780209  0.48527241  0.26332695  5.60533075  2.11301639  0.76991145
  0.34815709  0.12821225 -1.44059548 -1.3150188  -0.76719096 -0.28600475
 -0.05699711 -0.98316391 -1.13158177 -0.64703904  0.43083118  0.15573998
  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225  1.01465273
  0.43485666  0.70818476  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 15:14:37 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 64
[INPUT] num. electrons = 256
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT]  9 C      0.000000000000   0.000000000000   3.573710000000 AA    0.000000000000   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 10 C      0.893427500000   0.893427500000   4.467137500000 AA    1.688333287155   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 11 C      1.786855000000   1.786855000000   3.573710000000 AA    3.376666574310   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 12 C      2.680282500000   2.680282500000   4.467137500000 AA    5.064999861465   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 13 C      1.786855000000   0.000000000000   5.360565000000 AA    3.376666574310   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 14 C      2.680282500000   0.893427500000   6.253992500000 AA    5.064999861465   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 15 C      0.000000000000   1.786855000000   5.360565000000 AA    0.000000000000   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 16 C      0.893427500000   2.680282500000   6.253992500000 AA    1.688333287155   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] 17 C      0.000000000000   3.573710000000   0.000000000000 AA    0.000000000000   6.753333148619   0.000000000000 Bohr   0.0
[INPUT] 18 C      0.893427500000   4.467137500000   0.893427500000 AA    1.688333287155   8.441666435774   1.688333287155 Bohr   0.0
[INPUT] 19 C      1.786855000000   5.360565000000   0.000000000000 AA    3.376666574310  10.129999722929   0.000000000000 Bohr   0.0
[INPUT] 20 C      2.680282500000   6.253992500000   0.893427500000 AA    5.064999861465  11.818333010084   1.688333287155 Bohr   0.0
[INPUT] 21 C      1.786855000000   3.573710000000   1.786855000000 AA    3.376666574310   6.753333148619   3.376666574310 Bohr   0.0
[INPUT] 22 C      2.680282500000   4.467137500000   2.680282500000 AA    5.064999861465   8.441666435774   5.064999861465 Bohr   0.0
[INPUT] 23 C      0.000000000000   5.360565000000   1.786855000000 AA    0.000000000000  10.129999722929   3.376666574310 Bohr   0.0
[INPUT] 24 C      0.893427500000   6.253992500000   2.680282500000 AA    1.688333287155  11.818333010084   5.064999861465 Bohr   0.0
[INPUT] 25 C      0.000000000000   3.573710000000   3.573710000000 AA    0.000000000000   6.753333148619   6.753333148619 Bohr   0.0
[INPUT] 26 C      0.893427500000   4.467137500000   4.467137500000 AA    1.688333287155   8.441666435774   8.441666435774 Bohr   0.0
[INPUT] 27 C      1.786855000000   5.360565000000   3.573710000000 AA    3.376666574310  10.129999722929   6.753333148619 Bohr   0.0
[INPUT] 28 C      2.680282500000   6.253992500000   4.467137500000 AA    5.064999861465  11.818333010084   8.441666435774 Bohr   0.0
[INPUT] 29 C      1.786855000000   3.573710000000   5.360565000000 AA    3.376666574310   6.753333148619  10.129999722929 Bohr   0.0
[INPUT] 30 C      2.680282500000   4.467137500000   6.253992500000 AA    5.064999861465   8.441666435774  11.818333010084 Bohr   0.0
[INPUT] 31 C      0.000000000000   5.360565000000   5.360565000000 AA    0.000000000000  10.129999722929  10.129999722929 Bohr   0.0
[INPUT] 32 C      0.893427500000   6.253992500000   6.253992500000 AA    1.688333287155  11.818333010084  11.818333010084 Bohr   0.0
[INPUT] 33 C      3.573710000000   0.000000000000   0.000000000000 AA    6.753333148619   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] 34 C      4.467137500000   0.893427500000   0.893427500000 AA    8.441666435774   1.688333287155   1.688333287155 Bohr   0.0
[INPUT] 35 C      5.360565000000   1.786855000000   0.000000000000 AA   10.129999722929   3.376666574310   0.000000000000 Bohr   0.0
[INPUT] 36 C      6.253992500000   2.680282500000   0.893427500000 AA   11.818333010084   5.064999861465   1.688333287155 Bohr   0.0
[INPUT] 37 C      5.360565000000   0.000000000000   1.786855000000 AA   10.129999722929   0.000000000000   3.376666574310 Bohr   0.0
[INPUT] 38 C      6.253992500000   0.893427500000   2.680282500000 AA   11.818333010084   1.688333287155   5.064999861465 Bohr   0.0
[INPUT] 39 C      3.573710000000   1.786855000000   1.786855000000 AA    6.753333148619   3.376666574310   3.376666574310 Bohr   0.0
[INPUT] 40 C      4.467137500000   2.680282500000   2.680282500000 AA    8.441666435774   5.064999861465   5.064999861465 Bohr   0.0
[INPUT] 41 C      3.573710000000   0.000000000000   3.573710000000 AA    6.753333148619   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 42 C      4.467137500000   0.893427500000   4.467137500000 AA    8.441666435774   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 43 C      5.360565000000   1.786855000000   3.573710000000 AA   10.129999722929   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 44 C      6.253992500000   2.680282500000   4.467137500000 AA   11.818333010084   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 45 C      5.360565000000   0.000000000000   5.360565000000 AA   10.129999722929   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 46 C      6.253992500000   0.893427500000   6.253992500000 AA   11.818333010084   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 47 C      3.573710000000   1.786855000000   5.360565000000 AA    6.753333148619   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 48 C      4.467137500000   2.680282500000   6.253992500000 AA    8.441666435774   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] 49 C      3.573710000000   3.573710000000   0.000000000000 AA    6.753333148619   6.753333148619   0.000000000000 Bohr   0.0
[INPUT] 50 C      4.467137500000   4.467137500000   0.893427500000 AA    8.441666435774   8.441666435774   1.688333287155 Bohr   0.0
[INPUT] 51 C      5.360565000000   5.360565000000   0.000000000000 AA   10.129999722929  10.129999722929   0.000000000000 Bohr   0.0
[INPUT] 52 C      6.253992500000   6.253992500000   0.893427500000 AA   11.818333010084  11.818333010084   1.688333287155 Bohr   0.0
[INPUT] 53 C      5.360565000000   3.573710000000   1.786855000000 AA   10.129999722929   6.753333148619   3.376666574310 Bohr   0.0
[INPUT] 54 C      6.253992500000   4.467137500000   2.680282500000 AA   11.818333010084   8.441666435774   5.064999861465 Bohr   0.0
[INPUT] 55 C      3.573710000000   5.360565000000   1.786855000000 AA    6.753333148619  10.129999722929   3.376666574310 Bohr   0.0
[INPUT] 56 C      4.467137500000   6.253992500000   2.680282500000 AA    8.441666435774  11.818333010084   5.064999861465 Bohr   0.0
[INPUT] 57 C      3.573710000000   3.573710000000   3.573710000000 AA    6.753333148619   6.753333148619   6.753333148619 Bohr   0.0
[INPUT] 58 C      4.467137500000   4.467137500000   4.467137500000 AA    8.441666435774   8.441666435774   8.441666435774 Bohr   0.0
[INPUT] 59 C      5.360565000000   5.360565000000   3.573710000000 AA   10.129999722929  10.129999722929   6.753333148619 Bohr   0.0
[INPUT] 60 C      6.253992500000   6.253992500000   4.467137500000 AA   11.818333010084  11.818333010084   8.441666435774 Bohr   0.0
[INPUT] 61 C      5.360565000000   3.573710000000   5.360565000000 AA   10.129999722929   6.753333148619  10.129999722929 Bohr   0.0
[INPUT] 62 C      6.253992500000   4.467137500000   6.253992500000 AA   11.818333010084   8.441666435774  11.818333010084 Bohr   0.0
[INPUT] 63 C      3.573710000000   5.360565000000   5.360565000000 AA    6.753333148619  10.129999722929  10.129999722929 Bohr   0.0
[INPUT] 64 C      4.467137500000   6.253992500000   6.253992500000 AA    8.441666435774  11.818333010084  11.818333010084 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 313.053888073512, -721.490865234945, 0.0400362853415543
nuclear repulsion = -408.396940876091
number of shells = 192
number of NR pGTOs = 2880
number of NR cGTOs = 832
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 24, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 25, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 26, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 27, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 28, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 29, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 30, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 31, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 32, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 33, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 34, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 35, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 36, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 37, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 38, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 39, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 40, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 41, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 42, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 43, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 44, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 45, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 46, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 47, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 48, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 49, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 50, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 51, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 52, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 53, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 54, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 55, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 56, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 57, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 58, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 59, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 60, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 61, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 62, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 63, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 64, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 65, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 66, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 67, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 68, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 69, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 70, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 71, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 72, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 73, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 74, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 75, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 76, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 77, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 78, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 79, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 80, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 81, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 82, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 83, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 84, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 85, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 86, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 87, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 88, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 89, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 90, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 91, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 92, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 93, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 94, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 95, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 96, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 97, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 98, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 99, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 100, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 101, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 102, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 103, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 104, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 105, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 106, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 107, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 108, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 109, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 110, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 111, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 112, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 113, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 114, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 115, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 116, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 117, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 118, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 119, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 120, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 121, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 122, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 123, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 124, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 125, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 126, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 127, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 128, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 129, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 130, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 131, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 132, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 133, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 134, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 135, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 136, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 137, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 138, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 139, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 140, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 141, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 142, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 143, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 144, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 145, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 146, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 147, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 148, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 149, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 150, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 151, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 152, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 153, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 154, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 155, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 156, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 157, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 158, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 159, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 160, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 161, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 162, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 163, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 164, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 165, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 166, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 167, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 168, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 169, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 170, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 171, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 172, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 173, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 174, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 175, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 176, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 177, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 178, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 179, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 180, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 181, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 182, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 183, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 184, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 185, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 186, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 187, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 188, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 189, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 190, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 191, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:     24467.10
lattice vectors  a1 [13.506666297, 0.000000000, 0.000000000]
                 a2 [0.000000000, 13.506666297, 0.000000000]
                 a3 [0.000000000, 0.000000000, 13.506666297]
dimension = 3
low_dim_ft_type = None
Cell volume = 2464.02
rcut = 22.25045319935835 (nimgs = [2 2 2])
lattice sum = 279 cells
precision = 1e-08
pseudo = gth-pade
mesh = [90, 90, 90] (729000 PWs)
    = ke_cutoff [209.4781616 209.4781616 209.4781616]
cell: 491520
group: [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63]]
ISDF: mol.ke_cutoff = 200.000000
ISDF: mol.natm      = 64
ISDF: mol.nao       = 832
************* get_partition *************
************* end get_partition *************
       get_partition wall time:     2.349694 CPU time:     2.344720
len of partition[   0] =  10844
len of partition[   1] =  11873
len of partition[   2] =  10818
len of partition[   3] =  11971
len of partition[   4] =  10795
len of partition[   5] =  11939
len of partition[   6] =  10774
len of partition[   7] =  11907
len of partition[   8] =  10814
len of partition[   9] =  11945
len of partition[  10] =  10850
len of partition[  11] =  12007
len of partition[  12] =  10812
len of partition[  13] =  11962
len of partition[  14] =  10616
len of partition[  15] =  11931
len of partition[  16] =  10843
len of partition[  17] =  11945
len of partition[  18] =  10771
len of partition[  19] =  11939
len of partition[  20] =  10823
len of partition[  21] =  11980
len of partition[  22] =  10792
len of partition[  23] =  11931
len of partition[  24] =  10841
len of partition[  25] =  12006
len of partition[  26] =  10869
len of partition[  27] =  12014
len of partition[  28] =  10846
len of partition[  29] =  11989
len of partition[  30] =  10855
len of partition[  31] =  11989
len of partition[  32] =  10841
len of partition[  33] =  11960
len of partition[  34] =  10797
len of partition[  35] =  11954
len of partition[  36] =  10722
len of partition[  37] =  11925
len of partition[  38] =  10795
len of partition[  39] =  11913
len of partition[  40] =  10844
len of partition[  41] =  11958
len of partition[  42] =  10944
len of partition[  43] =  12061
len of partition[  44] =  10880
len of partition[  45] =  11993
len of partition[  46] =  10838
len of partition[  47] =  11912
len of partition[  48] =  10843
len of partition[  49] =  11950
len of partition[  50] =  10661
len of partition[  51] =  11931
len of partition[  52] =  10872
len of partition[  53] =  11962
len of partition[  54] =  10826
len of partition[  55] =  11889
len of partition[  56] =  10843
len of partition[  57] =  12078
len of partition[  58] =  10850
len of partition[  59] =  11968
len of partition[  60] =  10882
len of partition[  61] =  11982
len of partition[  62] =  10822
len of partition[  63] =  12013
************* get_aoR *************
************* end get_aoR *************
             get_aoR wall time:    85.142405 CPU time:    84.992594
In _build_buffer: ISDF Local size of buffer = 2847.656 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   64
select_IP_local_atm: npt_found =  311
select_IP_local_atm: npt_found =  343
select_IP_local_atm: npt_found =  310
select_IP_local_atm: npt_found =  341
select_IP_local_atm: npt_found =  305
select_IP_local_atm: npt_found =  312
select_IP_local_atm: npt_found =  323
select_IP_local_atm: npt_found =  337
select_IP_local_atm: npt_found =  305
select_IP_local_atm: npt_found =  328
select_IP_local_atm: npt_found =  306
select_IP_local_atm: npt_found =  338
select_IP_local_atm: npt_found =  313
select_IP_local_atm: npt_found =  327
select_IP_local_atm: npt_found =  330
select_IP_local_atm: npt_found =  331
select_IP_local_atm: npt_found =  327
select_IP_local_atm: npt_found =  314
select_IP_local_atm: npt_found =  332
select_IP_local_atm: npt_found =  340
select_IP_local_atm: npt_found =  326
select_IP_local_atm: npt_found =  321
select_IP_local_atm: npt_found =  323
select_IP_local_atm: npt_found =  324
select_IP_local_atm: npt_found =  298
select_IP_local_atm: npt_found =  323
select_IP_local_atm: npt_found =  301
select_IP_local_atm: npt_found =  331
select_IP_local_atm: npt_found =  301
select_IP_local_atm: npt_found =  337
select_IP_local_atm: npt_found =  316
select_IP_local_atm: npt_found =  339
select_IP_local_atm: npt_found =  296
select_IP_local_atm: npt_found =  342
select_IP_local_atm: npt_found =  289
select_IP_local_atm: npt_found =  317
select_IP_local_atm: npt_found =  297
select_IP_local_atm: npt_found =  322
select_IP_local_atm: npt_found =  300
select_IP_local_atm: npt_found =  312
select_IP_local_atm: npt_found =  317
select_IP_local_atm: npt_found =  348
select_IP_local_atm: npt_found =  330
select_IP_local_atm: npt_found =  344
select_IP_local_atm: npt_found =  303
select_IP_local_atm: npt_found =  314
select_IP_local_atm: npt_found =  296
select_IP_local_atm: npt_found =  335
select_IP_local_atm: npt_found =  302
select_IP_local_atm: npt_found =  348
select_IP_local_atm: npt_found =  318
select_IP_local_atm: npt_found =  333
select_IP_local_atm: npt_found =  308
select_IP_local_atm: npt_found =  320
select_IP_local_atm: npt_found =  334
select_IP_local_atm: npt_found =  336
select_IP_local_atm: npt_found =  309
select_IP_local_atm: npt_found =  337
select_IP_local_atm: npt_found =  303
select_IP_local_atm: npt_found =  311
select_IP_local_atm: npt_found =  313
select_IP_local_atm: npt_found =  361
select_IP_local_atm: npt_found =  335
select_IP_local_atm: npt_found =  339
select_IP_local_step1 wall time:    79.357105 CPU time:  5011.154097
 build_aoRg_possible wall time:     0.291776 CPU time:     6.303914
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  654
select_IP_local_group: npt_found =  523
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  651
select_IP_local_group: npt_found =  553
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  617
select_IP_local_group: npt_found =  529
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  660
select_IP_local_group: npt_found =  517
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  633
select_IP_local_group: npt_found =  541
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  644
select_IP_local_group: npt_found =  542
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  640
select_IP_local_group: npt_found =  554
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  661
select_IP_local_group: npt_found =  561
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  641
select_IP_local_group: npt_found =  553
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  672
select_IP_local_group: npt_found =  547
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  647
select_IP_local_group: npt_found =  541
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  647
select_IP_local_group: npt_found =  549
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  621
select_IP_local_group: npt_found =  515
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  632
select_IP_local_group: npt_found =  543
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  638
select_IP_local_group: npt_found =  533
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  655
select_IP_local_group: npt_found =  544
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  638
select_IP_local_group: npt_found =  548
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  606
select_IP_local_group: npt_found =  534
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  619
select_IP_local_group: npt_found =  538
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  612
select_IP_local_group: npt_found =  538
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  665
select_IP_local_group: npt_found =  536
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  674
select_IP_local_group: npt_found =  542
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  617
select_IP_local_group: npt_found =  534
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  631
select_IP_local_group: npt_found =  542
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  650
select_IP_local_group: npt_found =  534
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  651
select_IP_local_group: npt_found =  531
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  628
select_IP_local_group: npt_found =  529
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  670
select_IP_local_group: npt_found =  558
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  646
select_IP_local_group: npt_found =  539
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  614
select_IP_local_group: npt_found =  530
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  674
select_IP_local_group: npt_found =  547
select_IP_local_group: nao_group =   26
select_IP_local_group: naux_now  =   32
select_IP_local_group: max_rank  =  674
select_IP_local_group: npt_found =  561
select_IP_local_step2 wall time:     2.051512 CPU time:   130.029950
select_IP_local_step3 wall time:     0.310792 CPU time:     6.655373
Memory usage for aoR  :   4627.848 MB
Memory usage for aoRg :    110.132 MB
            build_IP wall time:    82.011185 CPU time:  5154.143335
build_aux_basis_local wall time:     7.322743 CPU time:   449.733559
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
Memory usage for V:      0.000 MB
Memory usage for W:   2279.707 MB
     build_V_W_local wall time:   397.072837 CPU time:  1254.364254
Initial guess from minao.
max_memory = 470842 MB (20677 in use)
              J_half wall time:     2.569981 CPU time:   162.977856
    CPU time for get_jk_dm_local    271.85 sec, wall time      4.28 sec
    CPU time for vj and vk    271.85 sec, wall time      4.28 sec
max_memory = 470842 MB (20677 in use)
Ewald components = 4.48794444182639e-08, -0.162125461301858, 0.0570921899755349
    CPU time for get_jk_dm_local    231.53 sec, wall time      4.86 sec
    CPU time for vj and vk    231.59 sec, wall time      4.86 sec
kmesh: [2, 2, 4] mesh: [90, 90, 180]
arg.atm = [[  4  20   1  23   0   0]
 [  4  24   1  27   0   0]
 [  4  28   1  31   0   0]
 [  4  32   1  35   0   0]
 [  4  36   1  39   0   0]
 [  4  40   1  43   0   0]
 [  4  44   1  47   0   0]
 [  4  48   1  51   0   0]
 [  4  52   1  55   0   0]
 [  4  56   1  59   0   0]
 [  4  60   1  63   0   0]
 [  4  64   1  67   0   0]
 [  4  68   1  71   0   0]
 [  4  72   1  75   0   0]
 [  4  76   1  79   0   0]
 [  4  80   1  83   0   0]
 [  4  84   1  87   0   0]
 [  4  88   1  91   0   0]
 [  4  92   1  95   0   0]
 [  4  96   1  99   0   0]
 [  4 100   1 103   0   0]
 [  4 104   1 107   0   0]
 [  4 108   1 111   0   0]
 [  4 112   1 115   0   0]
 [  4 116   1 119   0   0]
 [  4 120   1 123   0   0]
 [  4 124   1 127   0   0]
 [  4 128   1 131   0   0]
 [  4 132   1 135   0   0]
 [  4 136   1 139   0   0]
 [  4 140   1 143   0   0]
 [  4 144   1 147   0   0]
 [  4 148   1 151   0   0]
 [  4 152   1 155   0   0]
 [  4 156   1 159   0   0]
 [  4 160   1 163   0   0]
 [  4 164   1 167   0   0]
 [  4 168   1 171   0   0]
 [  4 172   1 175   0   0]
 [  4 176   1 179   0   0]
 [  4 180   1 183   0   0]
 [  4 184   1 187   0   0]
 [  4 188   1 191   0   0]
 [  4 192   1 195   0   0]
 [  4 196   1 199   0   0]
 [  4 200   1 203   0   0]
 [  4 204   1 207   0   0]
 [  4 208   1 211   0   0]
 [  4 212   1 215   0   0]
 [  4 216   1 219   0   0]
 [  4 220   1 223   0   0]
 [  4 224   1 227   0   0]
 [  4 228   1 231   0   0]
 [  4 232   1 235   0   0]
 [  4 236   1 239   0   0]
 [  4 240   1 243   0   0]
 [  4 244   1 247   0   0]
 [  4 248   1 251   0   0]
 [  4 252   1 255   0   0]
 [  4 256   1 259   0   0]
 [  4 260   1 263   0   0]
 [  4 264   1 267   0   0]
 [  4 268   1 271   0   0]
 [  4 272   1 275   0   0]
 [  4 276   1 279   0   0]
 [  4 280   1 283   0   0]
 [  4 284   1 287   0   0]
 [  4 288   1 291   0   0]
 [  4 292   1 295   0   0]
 [  4 296   1 299   0   0]
 [  4 300   1 303   0   0]
 [  4 304   1 307   0   0]
 [  4 308   1 311   0   0]
 [  4 312   1 315   0   0]
 [  4 316   1 319   0   0]
 [  4 320   1 323   0   0]
 [  4 324   1 327   0   0]
 [  4 328   1 331   0   0]
 [  4 332   1 335   0   0]
 [  4 336   1 339   0   0]
 [  4 340   1 343   0   0]
 [  4 344   1 347   0   0]
 [  4 348   1 351   0   0]
 [  4 352   1 355   0   0]
 [  4 356   1 359   0   0]
 [  4 360   1 363   0   0]
 [  4 364   1 367   0   0]
 [  4 368   1 371   0   0]
 [  4 372   1 375   0   0]
 [  4 376   1 379   0   0]
 [  4 380   1 383   0   0]
 [  4 384   1 387   0   0]
 [  4 388   1 391   0   0]
 [  4 392   1 395   0   0]
 [  4 396   1 399   0   0]
 [  4 400   1 403   0   0]
 [  4 404   1 407   0   0]
 [  4 408   1 411   0   0]
 [  4 412   1 415   0   0]
 [  4 416   1 419   0   0]
 [  4 420   1 423   0   0]
 [  4 424   1 427   0   0]
 [  4 428   1 431   0   0]
 [  4 432   1 435   0   0]
 [  4 436   1 439   0   0]
 [  4 440   1 443   0   0]
 [  4 444   1 447   0   0]
 [  4 448   1 451   0   0]
 [  4 452   1 455   0   0]
 [  4 456   1 459   0   0]
 [  4 460   1 463   0   0]
 [  4 464   1 467   0   0]
 [  4 468   1 471   0   0]
 [  4 472   1 475   0   0]
 [  4 476   1 479   0   0]
 [  4 480   1 483   0   0]
 [  4 484   1 487   0   0]
 [  4 488   1 491   0   0]
 [  4 492   1 495   0   0]
 [  4 496   1 499   0   0]
 [  4 500   1 503   0   0]
 [  4 504   1 507   0   0]
 [  4 508   1 511   0   0]
 [  4 512   1 515   0   0]
 [  4 516   1 519   0   0]
 [  4 520   1 523   0   0]
 [  4 524   1 527   0   0]
 [  4 528   1 531   0   0]]
arg.bas = [[  0   0   5 ... 532 537   0]
 [  0   1   5 ... 547 552   0]
 [  0   2   5 ... 562 567   0]
 ...
 [127   0   5 ... 532 537   0]
 [127   1   5 ... 547 552   0]
 [127   2   5 ... 562 567   0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  1.68833329  1.68833329  1.68833329  0.          3.37666657  3.37666657
  0.          0.          5.06499986  5.06499986  1.68833329  0.
  3.37666657  0.          3.37666657  0.          5.06499986  1.68833329
  5.06499986  0.          0.          3.37666657  3.37666657  0.
  1.68833329  5.06499986  5.06499986  0.          0.          0.
  6.75333315  0.          1.68833329  1.68833329  8.44166644  0.
  3.37666657  3.37666657  6.75333315  0.          5.06499986  5.06499986
  8.44166644  0.          3.37666657  0.         10.12999972  0.
  5.06499986  1.68833329 11.81833301  0.          0.          3.37666657
 10.12999972  0.          1.68833329  5.06499986 11.81833301  0.
  0.          0.         13.5066663   0.          1.68833329  1.68833329
 15.19499958  0.          3.37666657  3.37666657 13.5066663   0.
  5.06499986  5.06499986 15.19499958  0.          3.37666657  0.
 16.88333287  0.          5.06499986  1.68833329 18.57166616  0.
  0.          3.37666657 16.88333287  0.          1.68833329  5.06499986
 18.57166616  0.          0.          0.         20.25999945  0.
  1.68833329  1.68833329 21.94833273  0.          3.37666657  3.37666657
 20.25999945  0.          5.06499986  5.06499986 21.94833273  0.
  3.37666657  0.         23.63666602  0.          5.06499986  1.68833329
 25.32499931  0.          0.          3.37666657 23.63666602  0.
  1.68833329  5.06499986 25.32499931  0.          0.          6.75333315
  0.          0.          1.68833329  8.44166644  1.68833329  0.
  3.37666657 10.12999972  0.          0.          5.06499986 11.81833301
  1.68833329  0.          3.37666657  6.75333315  3.37666657  0.
  5.06499986  8.44166644  5.06499986  0.          0.         10.12999972
  3.37666657  0.          1.68833329 11.81833301  5.06499986  0.
  0.          6.75333315  6.75333315  0.          1.68833329  8.44166644
  8.44166644  0.          3.37666657 10.12999972  6.75333315  0.
  5.06499986 11.81833301  8.44166644  0.          3.37666657  6.75333315
 10.12999972  0.          5.06499986  8.44166644 11.81833301  0.
  0.         10.12999972 10.12999972  0.          1.68833329 11.81833301
 11.81833301  0.          0.          6.75333315 13.5066663   0.
  1.68833329  8.44166644 15.19499958  0.          3.37666657 10.12999972
 13.5066663   0.          5.06499986 11.81833301 15.19499958  0.
  3.37666657  6.75333315 16.88333287  0.          5.06499986  8.44166644
 18.57166616  0.          0.         10.12999972 16.88333287  0.
  1.68833329 11.81833301 18.57166616  0.          0.          6.75333315
 20.25999945  0.          1.68833329  8.44166644 21.94833273  0.
  3.37666657 10.12999972 20.25999945  0.          5.06499986 11.81833301
 21.94833273  0.          3.37666657  6.75333315 23.63666602  0.
  5.06499986  8.44166644 25.32499931  0.          0.         10.12999972
 23.63666602  0.          1.68833329 11.81833301 25.32499931  0.
  6.75333315  0.          0.          0.          8.44166644  1.68833329
  1.68833329  0.         10.12999972  3.37666657  0.          0.
 11.81833301  5.06499986  1.68833329  0.         10.12999972  0.
  3.37666657  0.         11.81833301  1.68833329  5.06499986  0.
  6.75333315  3.37666657  3.37666657  0.          8.44166644  5.06499986
  5.06499986  0.          6.75333315  0.          6.75333315  0.
  8.44166644  1.68833329  8.44166644  0.         10.12999972  3.37666657
  6.75333315  0.         11.81833301  5.06499986  8.44166644  0.
 10.12999972  0.         10.12999972  0.         11.81833301  1.68833329
 11.81833301  0.          6.75333315  3.37666657 10.12999972  0.
  8.44166644  5.06499986 11.81833301  0.          6.75333315  0.
 13.5066663   0.          8.44166644  1.68833329 15.19499958  0.
 10.12999972  3.37666657 13.5066663   0.         11.81833301  5.06499986
 15.19499958  0.         10.12999972  0.         16.88333287  0.
 11.81833301  1.68833329 18.57166616  0.          6.75333315  3.37666657
 16.88333287  0.          8.44166644  5.06499986 18.57166616  0.
  6.75333315  0.         20.25999945  0.          8.44166644  1.68833329
 21.94833273  0.         10.12999972  3.37666657 20.25999945  0.
 11.81833301  5.06499986 21.94833273  0.         10.12999972  0.
 23.63666602  0.         11.81833301  1.68833329 25.32499931  0.
  6.75333315  3.37666657 23.63666602  0.          8.44166644  5.06499986
 25.32499931  0.          6.75333315  6.75333315  0.          0.
  8.44166644  8.44166644  1.68833329  0.         10.12999972 10.12999972
  0.          0.         11.81833301 11.81833301  1.68833329  0.
 10.12999972  6.75333315  3.37666657  0.         11.81833301  8.44166644
  5.06499986  0.          6.75333315 10.12999972  3.37666657  0.
  8.44166644 11.81833301  5.06499986  0.          6.75333315  6.75333315
  6.75333315  0.          8.44166644  8.44166644  8.44166644  0.
 10.12999972 10.12999972  6.75333315  0.         11.81833301 11.81833301
  8.44166644  0.         10.12999972  6.75333315 10.12999972  0.
 11.81833301  8.44166644 11.81833301  0.          6.75333315 10.12999972
 10.12999972  0.          8.44166644 11.81833301 11.81833301  0.
  6.75333315  6.75333315 13.5066663   0.          8.44166644  8.44166644
 15.19499958  0.         10.12999972 10.12999972 13.5066663   0.
 11.81833301 11.81833301 15.19499958  0.         10.12999972  6.75333315
 16.88333287  0.         11.81833301  8.44166644 18.57166616  0.
  6.75333315 10.12999972 16.88333287  0.          8.44166644 11.81833301
 18.57166616  0.          6.75333315  6.75333315 20.25999945  0.
  8.44166644  8.44166644 21.94833273  0.         10.12999972 10.12999972
 20.25999945  0.         11.81833301 11.81833301 21.94833273  0.
 10.12999972  6.75333315 23.63666602  0.         11.81833301  8.44166644
 25.32499931  0.          6.75333315 10.12999972 23.63666602  0.
  8.44166644 11.81833301 25.32499931  0.          5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.14328643  0.75521952 -0.74331592
 -0.77915081 -0.08078366  1.95761895  0.29093741  0.02780209  0.48527241
  0.26332695  5.60533075  2.11301639  0.76991145  0.34815709  0.12821225
 -1.44059548 -1.3150188  -0.76719096 -0.28600475 -0.05699711 -0.98316391
 -1.13158177 -0.64703904  0.43083118  0.15573998  5.60533075  2.11301639
  0.76991145  0.34815709  0.12821225  1.01465273  0.43485666  0.70818476
  0.04545847  0.04722778]
ecpbas  = []
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/test/diamond-test-build-2/main.py ****
import pyscf.isdf.BackEnd._config as config

config.disable_fftw()
# config.backend("numpy")
# config.backend("scipy")
config.backend("torch")
# config.backend("torch_gpu")
import pyscf.isdf.BackEnd.isdf_backend as BACKEND

# sys and pyscf #

import numpy as np
from pyscf import lib

from pyscf.lib.parameters import BOHR
from pyscf.pbc import df

# isdf util #

from pyscf.isdf.isdf_tools_Tsym import _kmesh_to_Kpoints, _1e_operator_gamma2k
from pyscf.isdf import isdf_tools_cell
from pyscf.isdf.isdf import ISDF
from pyscf.isdf.isdf_local import ISDF_Local

#############################

ke_cutoff = 200
basis = "gth-dzvp-molopt-sr"

boxlen = 3.57371000
prim_a = np.array([[boxlen, 0.0, 0.0], [0.0, boxlen, 0.0], [0.0, 0.0, boxlen]])
atm = [
    ["C", (0.0, 0.0, 0.0)],
    ["C", (0.8934275, 0.8934275, 0.8934275)],
    ["C", (1.786855, 1.786855, 0.0)],
    ["C", (2.6802825, 2.6802825, 0.8934275)],
    ["C", (1.786855, 0.0, 1.786855)],
    ["C", (2.6802825, 0.8934275, 2.6802825)],
    ["C", (0.0, 1.786855, 1.786855)],
    ["C", (0.8934275, 2.6802825, 2.6802825)],
]

kmeshes = [
    [1, 1, 1],
    [1, 1, 2],
    [1, 2, 2],
    [2, 2, 2],
    [2, 2, 4],
    [2, 4, 4],
    [4, 4, 4],
]  # -44.20339674 and -88.67568935
VERBOSE = 10

prim_cell = isdf_tools_cell.build_supercell(
    atm,
    prim_a,
    Ls=[1, 1, 1],
    ke_cutoff=ke_cutoff,
    basis=basis,
    pseudo="gth-pade",
    verbose=VERBOSE,
)

prim_group = [[0, 1], [2, 3], [4, 5], [6, 7]]

prim_mesh = prim_cell.mesh

for kmesh in kmeshes:

    mesh = [int(k * x) for k, x in zip(kmesh, prim_mesh)]
    print("kmesh:", kmesh, "mesh:", mesh)
    kpts = prim_cell.make_kpts(kmesh)

    direct = False
    c = 30
    rela_qr = 1e-3
    aoR_cutoff = 1e-8
    build_V_K_bunchsize = 512
    with_robust_fitting = False

    from pyscf.lib import logger
    from pyscf.lib.logger import perf_counter
    from pyscf.lib.logger import process_clock
    t0 = (process_clock(), perf_counter())

    stdout = open("out.log", "w")
    log = logger.Logger(stdout, 5)

    cell, group = isdf_tools_cell.build_supercell_with_partition(
        atm,
        prim_a,
        Ls=kmesh,
        ke_cutoff=ke_cutoff,
        partition=prim_group,
        mesh=mesh,
        basis=basis,
        pseudo="gth-pade",
        verbose=VERBOSE,
    )

    from pyscf import __config__
    MAX_MEMORY = getattr(__config__, 'MAX_MEMORY')
    cell.max_memory = MAX_MEMORY
    print("cell:", cell.max_memory)
    print("group:", group)

    t0 = (process_clock(), perf_counter())
    isdf = ISDF_Local(
        cell, limited_memory=True, direct=direct,
        with_robust_fitting=with_robust_fitting,
        build_V_K_bunchsize=build_V_K_bunchsize,
    )
    isdf.build(c=c, m=5, rela_cutoff=rela_qr, group=group)
    t1 = log.timer("build", *t0)

    from pyscf.pbc import scf

    mf = scf.RHF(cell)
    mf.with_df = isdf
    dm0 = mf.get_init_guess(key="minao")

    t0 = (process_clock(), perf_counter())
    vj1 = mf.get_jk(cell, dm0, with_j=True, with_k=False)[0]
    t1 = log.timer("get_j", *t0)

    t0 = (process_clock(), perf_counter())
    vk1 = mf.get_jk(cell, dm0, with_j=False, with_k=True)[1]
    t2 = log.timer("get_k", *t0)

    log.info("chk file size: %6.2e GB", 0.0)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-03.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 1
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Mon Jan 27 15:24:27 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[ENV] PYSCF_MAX_MEMORY 491520
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 491520
[CONFIG] TMPDIR = /central/scratch/yangjunjie//diamond-test-build-2/46997107/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 10
[INPUT] max_memory = 2000 
[INPUT] num. atoms = 128
[INPUT] num. electrons = 512
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 C      0.893427500000   0.893427500000   0.893427500000 AA    1.688333287155   1.688333287155   1.688333287155 Bohr   0.0
[INPUT]  3 C      1.786855000000   1.786855000000   0.000000000000 AA    3.376666574310   3.376666574310   0.000000000000 Bohr   0.0
[INPUT]  4 C      2.680282500000   2.680282500000   0.893427500000 AA    5.064999861465   5.064999861465   1.688333287155 Bohr   0.0
[INPUT]  5 C      1.786855000000   0.000000000000   1.786855000000 AA    3.376666574310   0.000000000000   3.376666574310 Bohr   0.0
[INPUT]  6 C      2.680282500000   0.893427500000   2.680282500000 AA    5.064999861465   1.688333287155   5.064999861465 Bohr   0.0
[INPUT]  7 C      0.000000000000   1.786855000000   1.786855000000 AA    0.000000000000   3.376666574310   3.376666574310 Bohr   0.0
[INPUT]  8 C      0.893427500000   2.680282500000   2.680282500000 AA    1.688333287155   5.064999861465   5.064999861465 Bohr   0.0
[INPUT]  9 C      0.000000000000   0.000000000000   3.573710000000 AA    0.000000000000   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 10 C      0.893427500000   0.893427500000   4.467137500000 AA    1.688333287155   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 11 C      1.786855000000   1.786855000000   3.573710000000 AA    3.376666574310   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 12 C      2.680282500000   2.680282500000   4.467137500000 AA    5.064999861465   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 13 C      1.786855000000   0.000000000000   5.360565000000 AA    3.376666574310   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 14 C      2.680282500000   0.893427500000   6.253992500000 AA    5.064999861465   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 15 C      0.000000000000   1.786855000000   5.360565000000 AA    0.000000000000   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 16 C      0.893427500000   2.680282500000   6.253992500000 AA    1.688333287155   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] 17 C      0.000000000000   0.000000000000   7.147420000000 AA    0.000000000000   0.000000000000  13.506666297239 Bohr   0.0
[INPUT] 18 C      0.893427500000   0.893427500000   8.040847500000 AA    1.688333287155   1.688333287155  15.194999584394 Bohr   0.0
[INPUT] 19 C      1.786855000000   1.786855000000   7.147420000000 AA    3.376666574310   3.376666574310  13.506666297239 Bohr   0.0
[INPUT] 20 C      2.680282500000   2.680282500000   8.040847500000 AA    5.064999861465   5.064999861465  15.194999584394 Bohr   0.0
[INPUT] 21 C      1.786855000000   0.000000000000   8.934275000000 AA    3.376666574310   0.000000000000  16.883332871549 Bohr   0.0
[INPUT] 22 C      2.680282500000   0.893427500000   9.827702500000 AA    5.064999861465   1.688333287155  18.571666158703 Bohr   0.0
[INPUT] 23 C      0.000000000000   1.786855000000   8.934275000000 AA    0.000000000000   3.376666574310  16.883332871549 Bohr   0.0
[INPUT] 24 C      0.893427500000   2.680282500000   9.827702500000 AA    1.688333287155   5.064999861465  18.571666158703 Bohr   0.0
[INPUT] 25 C      0.000000000000   0.000000000000  10.721130000000 AA    0.000000000000   0.000000000000  20.259999445858 Bohr   0.0
[INPUT] 26 C      0.893427500000   0.893427500000  11.614557500000 AA    1.688333287155   1.688333287155  21.948332733013 Bohr   0.0
[INPUT] 27 C      1.786855000000   1.786855000000  10.721130000000 AA    3.376666574310   3.376666574310  20.259999445858 Bohr   0.0
[INPUT] 28 C      2.680282500000   2.680282500000  11.614557500000 AA    5.064999861465   5.064999861465  21.948332733013 Bohr   0.0
[INPUT] 29 C      1.786855000000   0.000000000000  12.507985000000 AA    3.376666574310   0.000000000000  23.636666020168 Bohr   0.0
[INPUT] 30 C      2.680282500000   0.893427500000  13.401412500000 AA    5.064999861465   1.688333287155  25.324999307323 Bohr   0.0
[INPUT] 31 C      0.000000000000   1.786855000000  12.507985000000 AA    0.000000000000   3.376666574310  23.636666020168 Bohr   0.0
[INPUT] 32 C      0.893427500000   2.680282500000  13.401412500000 AA    1.688333287155   5.064999861465  25.324999307323 Bohr   0.0
[INPUT] 33 C      0.000000000000   3.573710000000   0.000000000000 AA    0.000000000000   6.753333148619   0.000000000000 Bohr   0.0
[INPUT] 34 C      0.893427500000   4.467137500000   0.893427500000 AA    1.688333287155   8.441666435774   1.688333287155 Bohr   0.0
[INPUT] 35 C      1.786855000000   5.360565000000   0.000000000000 AA    3.376666574310  10.129999722929   0.000000000000 Bohr   0.0
[INPUT] 36 C      2.680282500000   6.253992500000   0.893427500000 AA    5.064999861465  11.818333010084   1.688333287155 Bohr   0.0
[INPUT] 37 C      1.786855000000   3.573710000000   1.786855000000 AA    3.376666574310   6.753333148619   3.376666574310 Bohr   0.0
[INPUT] 38 C      2.680282500000   4.467137500000   2.680282500000 AA    5.064999861465   8.441666435774   5.064999861465 Bohr   0.0
[INPUT] 39 C      0.000000000000   5.360565000000   1.786855000000 AA    0.000000000000  10.129999722929   3.376666574310 Bohr   0.0
[INPUT] 40 C      0.893427500000   6.253992500000   2.680282500000 AA    1.688333287155  11.818333010084   5.064999861465 Bohr   0.0
[INPUT] 41 C      0.000000000000   3.573710000000   3.573710000000 AA    0.000000000000   6.753333148619   6.753333148619 Bohr   0.0
[INPUT] 42 C      0.893427500000   4.467137500000   4.467137500000 AA    1.688333287155   8.441666435774   8.441666435774 Bohr   0.0
[INPUT] 43 C      1.786855000000   5.360565000000   3.573710000000 AA    3.376666574310  10.129999722929   6.753333148619 Bohr   0.0
[INPUT] 44 C      2.680282500000   6.253992500000   4.467137500000 AA    5.064999861465  11.818333010084   8.441666435774 Bohr   0.0
[INPUT] 45 C      1.786855000000   3.573710000000   5.360565000000 AA    3.376666574310   6.753333148619  10.129999722929 Bohr   0.0
[INPUT] 46 C      2.680282500000   4.467137500000   6.253992500000 AA    5.064999861465   8.441666435774  11.818333010084 Bohr   0.0
[INPUT] 47 C      0.000000000000   5.360565000000   5.360565000000 AA    0.000000000000  10.129999722929  10.129999722929 Bohr   0.0
[INPUT] 48 C      0.893427500000   6.253992500000   6.253992500000 AA    1.688333287155  11.818333010084  11.818333010084 Bohr   0.0
[INPUT] 49 C      0.000000000000   3.573710000000   7.147420000000 AA    0.000000000000   6.753333148619  13.506666297239 Bohr   0.0
[INPUT] 50 C      0.893427500000   4.467137500000   8.040847500000 AA    1.688333287155   8.441666435774  15.194999584394 Bohr   0.0
[INPUT] 51 C      1.786855000000   5.360565000000   7.147420000000 AA    3.376666574310  10.129999722929  13.506666297239 Bohr   0.0
[INPUT] 52 C      2.680282500000   6.253992500000   8.040847500000 AA    5.064999861465  11.818333010084  15.194999584394 Bohr   0.0
[INPUT] 53 C      1.786855000000   3.573710000000   8.934275000000 AA    3.376666574310   6.753333148619  16.883332871549 Bohr   0.0
[INPUT] 54 C      2.680282500000   4.467137500000   9.827702500000 AA    5.064999861465   8.441666435774  18.571666158703 Bohr   0.0
[INPUT] 55 C      0.000000000000   5.360565000000   8.934275000000 AA    0.000000000000  10.129999722929  16.883332871549 Bohr   0.0
[INPUT] 56 C      0.893427500000   6.253992500000   9.827702500000 AA    1.688333287155  11.818333010084  18.571666158703 Bohr   0.0
[INPUT] 57 C      0.000000000000   3.573710000000  10.721130000000 AA    0.000000000000   6.753333148619  20.259999445858 Bohr   0.0
[INPUT] 58 C      0.893427500000   4.467137500000  11.614557500000 AA    1.688333287155   8.441666435774  21.948332733013 Bohr   0.0
[INPUT] 59 C      1.786855000000   5.360565000000  10.721130000000 AA    3.376666574310  10.129999722929  20.259999445858 Bohr   0.0
[INPUT] 60 C      2.680282500000   6.253992500000  11.614557500000 AA    5.064999861465  11.818333010084  21.948332733013 Bohr   0.0
[INPUT] 61 C      1.786855000000   3.573710000000  12.507985000000 AA    3.376666574310   6.753333148619  23.636666020168 Bohr   0.0
[INPUT] 62 C      2.680282500000   4.467137500000  13.401412500000 AA    5.064999861465   8.441666435774  25.324999307323 Bohr   0.0
[INPUT] 63 C      0.000000000000   5.360565000000  12.507985000000 AA    0.000000000000  10.129999722929  23.636666020168 Bohr   0.0
[INPUT] 64 C      0.893427500000   6.253992500000  13.401412500000 AA    1.688333287155  11.818333010084  25.324999307323 Bohr   0.0
[INPUT] 65 C      3.573710000000   0.000000000000   0.000000000000 AA    6.753333148619   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] 66 C      4.467137500000   0.893427500000   0.893427500000 AA    8.441666435774   1.688333287155   1.688333287155 Bohr   0.0
[INPUT] 67 C      5.360565000000   1.786855000000   0.000000000000 AA   10.129999722929   3.376666574310   0.000000000000 Bohr   0.0
[INPUT] 68 C      6.253992500000   2.680282500000   0.893427500000 AA   11.818333010084   5.064999861465   1.688333287155 Bohr   0.0
[INPUT] 69 C      5.360565000000   0.000000000000   1.786855000000 AA   10.129999722929   0.000000000000   3.376666574310 Bohr   0.0
[INPUT] 70 C      6.253992500000   0.893427500000   2.680282500000 AA   11.818333010084   1.688333287155   5.064999861465 Bohr   0.0
[INPUT] 71 C      3.573710000000   1.786855000000   1.786855000000 AA    6.753333148619   3.376666574310   3.376666574310 Bohr   0.0
[INPUT] 72 C      4.467137500000   2.680282500000   2.680282500000 AA    8.441666435774   5.064999861465   5.064999861465 Bohr   0.0
[INPUT] 73 C      3.573710000000   0.000000000000   3.573710000000 AA    6.753333148619   0.000000000000   6.753333148619 Bohr   0.0
[INPUT] 74 C      4.467137500000   0.893427500000   4.467137500000 AA    8.441666435774   1.688333287155   8.441666435774 Bohr   0.0
[INPUT] 75 C      5.360565000000   1.786855000000   3.573710000000 AA   10.129999722929   3.376666574310   6.753333148619 Bohr   0.0
[INPUT] 76 C      6.253992500000   2.680282500000   4.467137500000 AA   11.818333010084   5.064999861465   8.441666435774 Bohr   0.0
[INPUT] 77 C      5.360565000000   0.000000000000   5.360565000000 AA   10.129999722929   0.000000000000  10.129999722929 Bohr   0.0
[INPUT] 78 C      6.253992500000   0.893427500000   6.253992500000 AA   11.818333010084   1.688333287155  11.818333010084 Bohr   0.0
[INPUT] 79 C      3.573710000000   1.786855000000   5.360565000000 AA    6.753333148619   3.376666574310  10.129999722929 Bohr   0.0
[INPUT] 80 C      4.467137500000   2.680282500000   6.253992500000 AA    8.441666435774   5.064999861465  11.818333010084 Bohr   0.0
[INPUT] 81 C      3.573710000000   0.000000000000   7.147420000000 AA    6.753333148619   0.000000000000  13.506666297239 Bohr   0.0
[INPUT] 82 C      4.467137500000   0.893427500000   8.040847500000 AA    8.441666435774   1.688333287155  15.194999584394 Bohr   0.0
[INPUT] 83 C      5.360565000000   1.786855000000   7.147420000000 AA   10.129999722929   3.376666574310  13.506666297239 Bohr   0.0
[INPUT] 84 C      6.253992500000   2.680282500000   8.040847500000 AA   11.818333010084   5.064999861465  15.194999584394 Bohr   0.0
[INPUT] 85 C      5.360565000000   0.000000000000   8.934275000000 AA   10.129999722929   0.000000000000  16.883332871549 Bohr   0.0
[INPUT] 86 C      6.253992500000   0.893427500000   9.827702500000 AA   11.818333010084   1.688333287155  18.571666158703 Bohr   0.0
[INPUT] 87 C      3.573710000000   1.786855000000   8.934275000000 AA    6.753333148619   3.376666574310  16.883332871549 Bohr   0.0
[INPUT] 88 C      4.467137500000   2.680282500000   9.827702500000 AA    8.441666435774   5.064999861465  18.571666158703 Bohr   0.0
[INPUT] 89 C      3.573710000000   0.000000000000  10.721130000000 AA    6.753333148619   0.000000000000  20.259999445858 Bohr   0.0
[INPUT] 90 C      4.467137500000   0.893427500000  11.614557500000 AA    8.441666435774   1.688333287155  21.948332733013 Bohr   0.0
[INPUT] 91 C      5.360565000000   1.786855000000  10.721130000000 AA   10.129999722929   3.376666574310  20.259999445858 Bohr   0.0
[INPUT] 92 C      6.253992500000   2.680282500000  11.614557500000 AA   11.818333010084   5.064999861465  21.948332733013 Bohr   0.0
[INPUT] 93 C      5.360565000000   0.000000000000  12.507985000000 AA   10.129999722929   0.000000000000  23.636666020168 Bohr   0.0
[INPUT] 94 C      6.253992500000   0.893427500000  13.401412500000 AA   11.818333010084   1.688333287155  25.324999307323 Bohr   0.0
[INPUT] 95 C      3.573710000000   1.786855000000  12.507985000000 AA    6.753333148619   3.376666574310  23.636666020168 Bohr   0.0
[INPUT] 96 C      4.467137500000   2.680282500000  13.401412500000 AA    8.441666435774   5.064999861465  25.324999307323 Bohr   0.0
[INPUT] 97 C      3.573710000000   3.573710000000   0.000000000000 AA    6.753333148619   6.753333148619   0.000000000000 Bohr   0.0
[INPUT] 98 C      4.467137500000   4.467137500000   0.893427500000 AA    8.441666435774   8.441666435774   1.688333287155 Bohr   0.0
[INPUT] 99 C      5.360565000000   5.360565000000   0.000000000000 AA   10.129999722929  10.129999722929   0.000000000000 Bohr   0.0
[INPUT]100 C      6.253992500000   6.253992500000   0.893427500000 AA   11.818333010084  11.818333010084   1.688333287155 Bohr   0.0
[INPUT]101 C      5.360565000000   3.573710000000   1.786855000000 AA   10.129999722929   6.753333148619   3.376666574310 Bohr   0.0
[INPUT]102 C      6.253992500000   4.467137500000   2.680282500000 AA   11.818333010084   8.441666435774   5.064999861465 Bohr   0.0
[INPUT]103 C      3.573710000000   5.360565000000   1.786855000000 AA    6.753333148619  10.129999722929   3.376666574310 Bohr   0.0
[INPUT]104 C      4.467137500000   6.253992500000   2.680282500000 AA    8.441666435774  11.818333010084   5.064999861465 Bohr   0.0
[INPUT]105 C      3.573710000000   3.573710000000   3.573710000000 AA    6.753333148619   6.753333148619   6.753333148619 Bohr   0.0
[INPUT]106 C      4.467137500000   4.467137500000   4.467137500000 AA    8.441666435774   8.441666435774   8.441666435774 Bohr   0.0
[INPUT]107 C      5.360565000000   5.360565000000   3.573710000000 AA   10.129999722929  10.129999722929   6.753333148619 Bohr   0.0
[INPUT]108 C      6.253992500000   6.253992500000   4.467137500000 AA   11.818333010084  11.818333010084   8.441666435774 Bohr   0.0
[INPUT]109 C      5.360565000000   3.573710000000   5.360565000000 AA   10.129999722929   6.753333148619  10.129999722929 Bohr   0.0
[INPUT]110 C      6.253992500000   4.467137500000   6.253992500000 AA   11.818333010084   8.441666435774  11.818333010084 Bohr   0.0
[INPUT]111 C      3.573710000000   5.360565000000   5.360565000000 AA    6.753333148619  10.129999722929  10.129999722929 Bohr   0.0
[INPUT]112 C      4.467137500000   6.253992500000   6.253992500000 AA    8.441666435774  11.818333010084  11.818333010084 Bohr   0.0
[INPUT]113 C      3.573710000000   3.573710000000   7.147420000000 AA    6.753333148619   6.753333148619  13.506666297239 Bohr   0.0
[INPUT]114 C      4.467137500000   4.467137500000   8.040847500000 AA    8.441666435774   8.441666435774  15.194999584394 Bohr   0.0
[INPUT]115 C      5.360565000000   5.360565000000   7.147420000000 AA   10.129999722929  10.129999722929  13.506666297239 Bohr   0.0
[INPUT]116 C      6.253992500000   6.253992500000   8.040847500000 AA   11.818333010084  11.818333010084  15.194999584394 Bohr   0.0
[INPUT]117 C      5.360565000000   3.573710000000   8.934275000000 AA   10.129999722929   6.753333148619  16.883332871549 Bohr   0.0
[INPUT]118 C      6.253992500000   4.467137500000   9.827702500000 AA   11.818333010084   8.441666435774  18.571666158703 Bohr   0.0
[INPUT]119 C      3.573710000000   5.360565000000   8.934275000000 AA    6.753333148619  10.129999722929  16.883332871549 Bohr   0.0
[INPUT]120 C      4.467137500000   6.253992500000   9.827702500000 AA    8.441666435774  11.818333010084  18.571666158703 Bohr   0.0
[INPUT]121 C      3.573710000000   3.573710000000  10.721130000000 AA    6.753333148619   6.753333148619  20.259999445858 Bohr   0.0
[INPUT]122 C      4.467137500000   4.467137500000  11.614557500000 AA    8.441666435774   8.441666435774  21.948332733013 Bohr   0.0
[INPUT]123 C      5.360565000000   5.360565000000  10.721130000000 AA   10.129999722929  10.129999722929  20.259999445858 Bohr   0.0
[INPUT]124 C      6.253992500000   6.253992500000  11.614557500000 AA   11.818333010084  11.818333010084  21.948332733013 Bohr   0.0
[INPUT]125 C      5.360565000000   3.573710000000  12.507985000000 AA   10.129999722929   6.753333148619  23.636666020168 Bohr   0.0
[INPUT]126 C      6.253992500000   4.467137500000  13.401412500000 AA   11.818333010084   8.441666435774  25.324999307323 Bohr   0.0
[INPUT]127 C      3.573710000000   5.360565000000  12.507985000000 AA    6.753333148619  10.129999722929  23.636666020168 Bohr   0.0
[INPUT]128 C      4.467137500000   6.253992500000  13.401412500000 AA    8.441666435774  11.818333010084  25.324999307323 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [5    /2   ]  5.6053307517      0.1115328819 0.4665074832
                                2.11301639053     0.1531421941 0.1441132128
                                0.76991145481     -0.3213968794 0.0293648809
                                0.348157086385    -0.6109264216 0.9294703884
                                0.12821225471     -0.1339908628 1.0669143312
[INPUT] 1    0    [5    /2   ]  5.6053307517      -0.0648689785 -0.0554756934
                                2.11301639053     -0.2004702557 -0.2161651752
                                0.76991145481     -0.4131417301 -0.4366242723
                                0.348157086385    -0.4153371392 0.7840006984
                                0.12821225471     -0.2885276736 0.987908135
[INPUT] 2    0    [5    /1   ]  5.6053307517      0.0299527746
                                2.11301639053     0.0707844588
                                0.76991145481     0.6746010586
                                0.348157086385    0.1736520618
                                0.12821225471     1.0363170247

Ewald components = 885.220786078594, -1702.02286488869, 0.00819705916577113
nuclear repulsion = -816.793881750933
number of shells = 384
number of NR pGTOs = 5760
number of NR cGTOs = 1664
basis = gth-dzvp-molopt-sr
ecp = {}
bas 0, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 1, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 2, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 3, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 4, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 5, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 6, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 7, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 8, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 9, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 10, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 11, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 12, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 13, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 14, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 15, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 16, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 17, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 18, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 19, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 20, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 21, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 22, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 23, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 24, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 25, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 26, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 27, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 28, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 29, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 30, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 31, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 32, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 33, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 34, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 35, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 36, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 37, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 38, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 39, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 40, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 41, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 42, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 43, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 44, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 45, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 46, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 47, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 48, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 49, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 50, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 51, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 52, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 53, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 54, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 55, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 56, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 57, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 58, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 59, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 60, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 61, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 62, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 63, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 64, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 65, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 66, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 67, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 68, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 69, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 70, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 71, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 72, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 73, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 74, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 75, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 76, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 77, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 78, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 79, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 80, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 81, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 82, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 83, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 84, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 85, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 86, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 87, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 88, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 89, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 90, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 91, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 92, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 93, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 94, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 95, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 96, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 97, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 98, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 99, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 100, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 101, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 102, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 103, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 104, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 105, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 106, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 107, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 108, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 109, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 110, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 111, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 112, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 113, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 114, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 115, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 116, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 117, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 118, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 119, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 120, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 121, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 122, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 123, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 124, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 125, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 126, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 127, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 128, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 129, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 130, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 131, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 132, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 133, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 134, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 135, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 136, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 137, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 138, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 139, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 140, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 141, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 142, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 143, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 144, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 145, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 146, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 147, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 148, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 149, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 150, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 151, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 152, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 153, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 154, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 155, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 156, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 157, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 158, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 159, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 160, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 161, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 162, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 163, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 164, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 165, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 166, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 167, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 168, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 169, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 170, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 171, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 172, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 173, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 174, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 175, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 176, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 177, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 178, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 179, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 180, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 181, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 182, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 183, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 184, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 185, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 186, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 187, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 188, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 189, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 190, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 191, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 192, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 193, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 194, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 195, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 196, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 197, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 198, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 199, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 200, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 201, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 202, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 203, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 204, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 205, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 206, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 207, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 208, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 209, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 210, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 211, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 212, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 213, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 214, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 215, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 216, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 217, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 218, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 219, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 220, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 221, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 222, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 223, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 224, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 225, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 226, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 227, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 228, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 229, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 230, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 231, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 232, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 233, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 234, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 235, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 236, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 237, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 238, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 239, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 240, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 241, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 242, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 243, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 244, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 245, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 246, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 247, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 248, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 249, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 250, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 251, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 252, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 253, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 254, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 255, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 256, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 257, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 258, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 259, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 260, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 261, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 262, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 263, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 264, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 265, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 266, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 267, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 268, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 269, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 270, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 271, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 272, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 273, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 274, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 275, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 276, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 277, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 278, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 279, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 280, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 281, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 282, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 283, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 284, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 285, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 286, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 287, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 288, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 289, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 290, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 291, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 292, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 293, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 294, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 295, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 296, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 297, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 298, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 299, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 300, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 301, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 302, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 303, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 304, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 305, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 306, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 307, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 308, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 309, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 310, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 311, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 312, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 313, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 314, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 315, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 316, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 317, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 318, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 319, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 320, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 321, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 322, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 323, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 324, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 325, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 326, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 327, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 328, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 329, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 330, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 331, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 332, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 333, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 334, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 335, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 336, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 337, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 338, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 339, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 340, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 341, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 342, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 343, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 344, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 345, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 346, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 347, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 348, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 349, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 350, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 351, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 352, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 353, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 354, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 355, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 356, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 357, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 358, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 359, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 360, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 361, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 362, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 363, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 364, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 365, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 366, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 367, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 368, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 369, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 370, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 371, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 372, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 373, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 374, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 375, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 376, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 377, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 378, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 379, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 380, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 381, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 382, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
bas 383, expnt(s) = [5.60533075 2.11301639 0.76991145 0.34815709 0.12821225]
CPU time:     31964.25
lattice vectors  a1 [13.506666297, 0.000000000, 0.000000000]
                 a2 [0.000000000, 13.506666297, 0.000000000]
                 a3 [0.000000000, 0.000000000, 27.013332594]
dimension = 3
low_dim_ft_type = None
Cell volume = 4928.04
rcut = 22.25045319935835 (nimgs = [2 2 1])
lattice sum = 213 cells
precision = 1e-08
pseudo = gth-pade
mesh = [90, 90, 180] (1458000 PWs)
    = ke_cutoff [209.4781616 209.4781616 214.2660793]
cell: 491520
group: [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 23], [24, 25], [26, 27], [28, 29], [30, 31], [32, 33], [34, 35], [36, 37], [38, 39], [40, 41], [42, 43], [44, 45], [46, 47], [48, 49], [50, 51], [52, 53], [54, 55], [56, 57], [58, 59], [60, 61], [62, 63], [64, 65], [66, 67], [68, 69], [70, 71], [72, 73], [74, 75], [76, 77], [78, 79], [80, 81], [82, 83], [84, 85], [86, 87], [88, 89], [90, 91], [92, 93], [94, 95], [96, 97], [98, 99], [100, 101], [102, 103], [104, 105], [106, 107], [108, 109], [110, 111], [112, 113], [114, 115], [116, 117], [118, 119], [120, 121], [122, 123], [124, 125], [126, 127]]
ISDF: mol.ke_cutoff = 200.000000
ISDF: mol.natm      = 128
ISDF: mol.nao       = 1664
************* get_partition *************
************* end get_partition *************
       get_partition wall time:     4.685561 CPU time:     4.675590
len of partition[   0] =  10847
len of partition[   1] =  11947
len of partition[   2] =  11055
len of partition[   3] =  12165
len of partition[   4] =  10792
len of partition[   5] =  11915
len of partition[   6] =  10776
len of partition[   7] =  11881
len of partition[   8] =  10815
len of partition[   9] =  11950
len of partition[  10] =  10861
len of partition[  11] =  12075
len of partition[  12] =  10796
len of partition[  13] =  11964
len of partition[  14] =  10772
len of partition[  15] =  11925
len of partition[  16] =  10841
len of partition[  17] =  11959
len of partition[  18] =  10818
len of partition[  19] =  11936
len of partition[  20] =  10805
len of partition[  21] =  11988
len of partition[  22] =  10859
len of partition[  23] =  11936
len of partition[  24] =  10878
len of partition[  25] =  11869
len of partition[  26] =  10923
len of partition[  27] =  12028
len of partition[  28] =  10838
len of partition[  29] =  11903
len of partition[  30] =  10809
len of partition[  31] =  11491
len of partition[  32] =  10967
len of partition[  33] =  12122
len of partition[  34] =  10721
len of partition[  35] =  12127
len of partition[  36] =  10701
len of partition[  37] =  11890
len of partition[  38] =  10545
len of partition[  39] =  11915
len of partition[  40] =  10904
len of partition[  41] =  12181
len of partition[  42] =  10891
len of partition[  43] =  12025
len of partition[  44] =  10548
len of partition[  45] =  12007
len of partition[  46] =  10796
len of partition[  47] =  11953
len of partition[  48] =  10841
len of partition[  49] =  11973
len of partition[  50] =  10845
len of partition[  51] =  11968
len of partition[  52] =  10861
len of partition[  53] =  12284
len of partition[  54] =  10824
len of partition[  55] =  11998
len of partition[  56] =  11129
len of partition[  57] =  11875
len of partition[  58] =  10935
len of partition[  59] =  11918
len of partition[  60] =  10624
len of partition[  61] =  12023
len of partition[  62] =  10818
len of partition[  63] =  11970
len of partition[  64] =  10788
len of partition[  65] =  12136
len of partition[  66] =  10391
len of partition[  67] =  12178
len of partition[  68] =  10783
len of partition[  69] =  11888
len of partition[  70] =  10672
len of partition[  71] =  11944
len of partition[  72] =  10845
len of partition[  73] =  12030
len of partition[  74] =  10782
len of partition[  75] =  12061
len of partition[  76] =  10773
len of partition[  77] =  11919
len of partition[  78] =  10795
len of partition[  79] =  11889
len of partition[  80] =  10841
len of partition[  81] =  11978
len of partition[  82] =  10830
len of partition[  83] =  11969
len of partition[  84] =  10786
len of partition[  85] =  11787
len of partition[  86] =  10817
len of partition[  87] =  11806
len of partition[  88] =  10856
len of partition[  89] =  11802
len of partition[  90] =  10982
len of partition[  91] =  11923
len of partition[  92] =  10781
len of partition[  93] =  12042
len of partition[  94] =  10601
len of partition[  95] =  12048
len of partition[  96] =  10859
len of partition[  97] =  12135
len of partition[  98] =  10725
len of partition[  99] =  12053
len of partition[ 100] =  10873
len of partition[ 101] =  12009
len of partition[ 102] =  10688
len of partition[ 103] =  11811
len of partition[ 104] =  10810
len of partition[ 105] =  12238
len of partition[ 106] =  10892
len of partition[ 107] =  12025
len of partition[ 108] =  10813
len of partition[ 109] =  12018
len of partition[ 110] =  10600
len of partition[ 111] =  11996
len of partition[ 112] =  10771
len of partition[ 113] =  12031
len of partition[ 114] =  10929
len of partition[ 115] =  11971
len of partition[ 116] =  10958
len of partition[ 117] =  11628
len of partition[ 118] =  10846
len of partition[ 119] =  11953
len of partition[ 120] =  10529
len of partition[ 121] =  11883
len of partition[ 122] =  11042
len of partition[ 123] =  11923
len of partition[ 124] =  10905
len of partition[ 125] =  11999
len of partition[ 126] =  10833
len of partition[ 127] =  11935
************* get_aoR *************
