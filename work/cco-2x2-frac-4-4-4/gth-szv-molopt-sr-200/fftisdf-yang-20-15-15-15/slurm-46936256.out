OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-cco-2x2-frac-4-4-4-gth-szv-molopt-sr/46936256/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-cco-2x2-frac-4-4-4-gth-szv-molopt-sr/46936256/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [95 95 41] (370025 PWs)
len(kpts) = 64
    kpts = [[0.         0.         0.        ]
 [0.         0.         0.26135187]
 [0.         0.         0.52270374]
 [0.         0.         0.78405561]
 [0.         0.10779511 0.        ]
 [0.         0.10779511 0.26135187]
 [0.         0.10779511 0.52270374]
 [0.         0.10779511 0.78405561]
 [0.         0.21559021 0.        ]
 [0.         0.21559021 0.26135187]
 [0.         0.21559021 0.52270374]
 [0.         0.21559021 0.78405561]
 [0.         0.32338532 0.        ]
 [0.         0.32338532 0.26135187]
 [0.         0.32338532 0.52270374]
 [0.         0.32338532 0.78405561]
 [0.10779511 0.         0.        ]
 [0.10779511 0.         0.26135187]
 [0.10779511 0.         0.52270374]
 [0.10779511 0.         0.78405561]
 [0.10779511 0.10779511 0.        ]
 [0.10779511 0.10779511 0.26135187]
 [0.10779511 0.10779511 0.52270374]
 [0.10779511 0.10779511 0.78405561]
 [0.10779511 0.21559021 0.        ]
 [0.10779511 0.21559021 0.26135187]
 [0.10779511 0.21559021 0.52270374]
 [0.10779511 0.21559021 0.78405561]
 [0.10779511 0.32338532 0.        ]
 [0.10779511 0.32338532 0.26135187]
 [0.10779511 0.32338532 0.52270374]
 [0.10779511 0.32338532 0.78405561]
 [0.21559021 0.         0.        ]
 [0.21559021 0.         0.26135187]
 [0.21559021 0.         0.52270374]
 [0.21559021 0.         0.78405561]
 [0.21559021 0.10779511 0.        ]
 [0.21559021 0.10779511 0.26135187]
 [0.21559021 0.10779511 0.52270374]
 [0.21559021 0.10779511 0.78405561]
 [0.21559021 0.21559021 0.        ]
 [0.21559021 0.21559021 0.26135187]
 [0.21559021 0.21559021 0.52270374]
 [0.21559021 0.21559021 0.78405561]
 [0.21559021 0.32338532 0.        ]
 [0.21559021 0.32338532 0.26135187]
 [0.21559021 0.32338532 0.52270374]
 [0.21559021 0.32338532 0.78405561]
 [0.32338532 0.         0.        ]
 [0.32338532 0.         0.26135187]
 [0.32338532 0.         0.52270374]
 [0.32338532 0.         0.78405561]
 [0.32338532 0.10779511 0.        ]
 [0.32338532 0.10779511 0.26135187]
 [0.32338532 0.10779511 0.52270374]
 [0.32338532 0.10779511 0.78405561]
 [0.32338532 0.21559021 0.        ]
 [0.32338532 0.21559021 0.26135187]
 [0.32338532 0.21559021 0.52270374]
 [0.32338532 0.21559021 0.78405561]
 [0.32338532 0.32338532 0.        ]
 [0.32338532 0.32338532 0.26135187]
 [0.32338532 0.32338532 0.52270374]
 [0.32338532 0.32338532 0.78405561]]
Overwritten attributes  m0 tol c0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [95 95 41]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 10 Eh.
Recommended ke_cutoff/mesh are 995.52 / [209 209  87].

kmesh = [4 4 4]
Input parent grid mesh = [15, 15, 15], ke_cutoff =  95.62
Final parent grid size = [35 35 15]

Selecting interpolation points
nkpts = 64, nao = 88, c0 =  20.00
Parent grid mesh = [35 35 15], grid size = 18375
    CPU time for select interpolation points   2038.66 sec, wall time     74.63 sec
Pivoted Cholesky rank = 4774, nip = 1760, estimated error = 8.45e-03
Number of interpolation points = 1760, effective CISDF =  20.00
    CPU time for building left-hand side     83.32 sec, wall time      2.59 sec

kpt = 64, ngrid = 370025, nao = 88
ngrid = 370025, blksize = 27060, nip = 1760
required disk space = 666 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-15-15-15-cco-2x2-frac-4-4-4-gth-szv-molopt-sr/46936256/debt9y2z
blksize = 27060, memory for aoR_loop = 48768 MB
finished aoR_loop[       0:   27060]
finished aoR_loop[   27060:   54120]
finished aoR_loop[   54120:   81180]
finished aoR_loop[   81180:  108240]
finished aoR_loop[  108240:  135300]
finished aoR_loop[  135300:  162360]
finished aoR_loop[  162360:  189420]
finished aoR_loop[  189420:  216480]
finished aoR_loop[  216480:  243540]
finished aoR_loop[  243540:  270600]
finished aoR_loop[  270600:  297660]
finished aoR_loop[  297660:  324720]
finished aoR_loop[  324720:  351780]
finished aoR_loop[  351780:  370025]
    CPU time for building right-hand side   5921.83 sec, wall time    714.16 sec
w[  0], rank = 1760 / 1760
    CPU time for w[  0]   1701.94 sec, wall time     71.53 sec
w[  1], rank = 1760 / 1760
    CPU time for w[  1]   1739.56 sec, wall time     60.94 sec
w[  2], rank = 1760 / 1760
    CPU time for w[  2]   1660.12 sec, wall time     57.09 sec
w[  3], rank = 1760 / 1760
    CPU time for w[  3]   1864.06 sec, wall time     63.06 sec
w[  4], rank = 1760 / 1760
    CPU time for w[  4]   1802.81 sec, wall time     59.82 sec
w[  5], rank = 1760 / 1760
    CPU time for w[  5]   1691.26 sec, wall time     64.12 sec
w[  6], rank = 1760 / 1760
    CPU time for w[  6]   1803.69 sec, wall time     60.36 sec
w[  7], rank = 1760 / 1760
    CPU time for w[  7]   1803.63 sec, wall time     62.39 sec
w[  8], rank = 1760 / 1760
    CPU time for w[  8]   1801.36 sec, wall time     58.40 sec
w[  9], rank = 1760 / 1760
    CPU time for w[  9]   1789.99 sec, wall time     61.61 sec
w[ 10], rank = 1760 / 1760
    CPU time for w[ 10]   1760.77 sec, wall time     59.48 sec
w[ 11], rank = 1760 / 1760
    CPU time for w[ 11]   1775.71 sec, wall time     61.83 sec
w[ 12], rank = 1760 / 1760
    CPU time for w[ 12]   1770.20 sec, wall time     59.41 sec
w[ 13], rank = 1760 / 1760
    CPU time for w[ 13]   1819.76 sec, wall time     63.00 sec
w[ 14], rank = 1760 / 1760
    CPU time for w[ 14]   1810.23 sec, wall time     60.01 sec
w[ 15], rank = 1760 / 1760
    CPU time for w[ 15]   1811.01 sec, wall time     67.21 sec
w[ 16], rank = 1760 / 1760
    CPU time for w[ 16]   1834.36 sec, wall time     60.47 sec
w[ 17], rank = 1760 / 1760
    CPU time for w[ 17]   1782.33 sec, wall time     63.32 sec
w[ 18], rank = 1760 / 1760
    CPU time for w[ 18]   1928.99 sec, wall time     61.48 sec
w[ 19], rank = 1760 / 1760
    CPU time for w[ 19]   1710.74 sec, wall time     61.20 sec
w[ 20], rank = 1760 / 1760
    CPU time for w[ 20]   1706.88 sec, wall time     59.00 sec
w[ 21], rank = 1760 / 1760
    CPU time for w[ 21]   1732.59 sec, wall time     61.42 sec
w[ 22], rank = 1760 / 1760
    CPU time for w[ 22]   1775.61 sec, wall time     60.70 sec
w[ 23], rank = 1760 / 1760
    CPU time for w[ 23]   1693.52 sec, wall time     63.39 sec
w[ 24], rank = 1760 / 1760
    CPU time for w[ 24]   1798.20 sec, wall time     58.92 sec
w[ 25], rank = 1760 / 1760
    CPU time for w[ 25]   1802.59 sec, wall time     62.35 sec
w[ 26], rank = 1760 / 1760
    CPU time for w[ 26]   2016.57 sec, wall time     65.81 sec
w[ 27], rank = 1760 / 1760
    CPU time for w[ 27]   2010.26 sec, wall time     68.15 sec
w[ 28], rank = 1760 / 1760
    CPU time for w[ 28]   1797.59 sec, wall time     59.90 sec
w[ 29], rank = 1760 / 1760
    CPU time for w[ 29]   1801.03 sec, wall time     63.28 sec
w[ 30], rank = 1760 / 1760
    CPU time for w[ 30]   1794.12 sec, wall time     60.98 sec
w[ 31], rank = 1760 / 1760
    CPU time for w[ 31]   1798.14 sec, wall time     62.64 sec
w[ 32], rank = 1760 / 1760
    CPU time for w[ 32]   1806.28 sec, wall time     59.67 sec
w[ 33], rank = 1760 / 1760
    CPU time for w[ 33]   1817.31 sec, wall time     61.15 sec
w[ 34], rank = 1760 / 1760
    CPU time for w[ 34]   1805.53 sec, wall time     57.48 sec
w[ 35], rank = 1760 / 1760
    CPU time for w[ 35]   1812.43 sec, wall time     61.65 sec
w[ 36], rank = 1760 / 1760
    CPU time for w[ 36]   1896.25 sec, wall time     60.45 sec
w[ 37], rank = 1760 / 1760
    CPU time for w[ 37]   1880.48 sec, wall time     63.06 sec
w[ 38], rank = 1760 / 1760
    CPU time for w[ 38]   1840.07 sec, wall time     60.91 sec
w[ 39], rank = 1760 / 1760
    CPU time for w[ 39]   1849.23 sec, wall time     65.74 sec
w[ 40], rank = 1760 / 1760
    CPU time for w[ 40]   1806.32 sec, wall time     58.17 sec
w[ 41], rank = 1760 / 1760
    CPU time for w[ 41]   1819.21 sec, wall time     67.37 sec
w[ 42], rank = 1760 / 1760
    CPU time for w[ 42]   1869.31 sec, wall time     58.82 sec
w[ 43], rank = 1760 / 1760
    CPU time for w[ 43]   1828.06 sec, wall time     61.59 sec
w[ 44], rank = 1760 / 1760
    CPU time for w[ 44]   1801.68 sec, wall time     59.23 sec
w[ 45], rank = 1760 / 1760
    CPU time for w[ 45]   1807.42 sec, wall time     62.96 sec
w[ 46], rank = 1760 / 1760
    CPU time for w[ 46]   1823.11 sec, wall time     65.27 sec
w[ 47], rank = 1760 / 1760
    CPU time for w[ 47]   1871.78 sec, wall time     67.31 sec
w[ 48], rank = 1760 / 1760
    CPU time for w[ 48]   1796.42 sec, wall time     59.76 sec
w[ 49], rank = 1760 / 1760
    CPU time for w[ 49]   2771.49 sec, wall time     80.12 sec
w[ 50], rank = 1760 / 1760
    CPU time for w[ 50]   1786.89 sec, wall time     59.56 sec
w[ 51], rank = 1760 / 1760
    CPU time for w[ 51]   1710.92 sec, wall time     61.65 sec
w[ 52], rank = 1760 / 1760
    CPU time for w[ 52]   1706.12 sec, wall time     59.78 sec
w[ 53], rank = 1760 / 1760
    CPU time for w[ 53]   1838.45 sec, wall time     64.95 sec
w[ 54], rank = 1760 / 1760
    CPU time for w[ 54]   1793.03 sec, wall time     61.19 sec
w[ 55], rank = 1760 / 1760
    CPU time for w[ 55]   1800.93 sec, wall time     62.33 sec
w[ 56], rank = 1760 / 1760
    CPU time for w[ 56]   1805.85 sec, wall time     59.79 sec
w[ 57], rank = 1760 / 1760
    CPU time for w[ 57]   1801.33 sec, wall time     62.43 sec
w[ 58], rank = 1760 / 1760
    CPU time for w[ 58]   1801.14 sec, wall time     60.27 sec
w[ 59], rank = 1760 / 1760
    CPU time for w[ 59]   1798.33 sec, wall time     62.96 sec
w[ 60], rank = 1760 / 1760
    CPU time for w[ 60]   1799.90 sec, wall time     59.38 sec
w[ 61], rank = 1760 / 1760
    CPU time for w[ 61]   1823.19 sec, wall time     62.54 sec
w[ 62], rank = 1760 / 1760
    CPU time for w[ 62]   1795.59 sec, wall time     61.67 sec
w[ 63], rank = 1760 / 1760
    CPU time for w[ 63]   1799.02 sec, wall time     62.18 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-cco-2x2-frac-4-4-4-gth-szv-molopt-sr/46936256/tmp.chk
    CPU time for building ISDF 124415.52 sec, wall time   4768.47 sec
