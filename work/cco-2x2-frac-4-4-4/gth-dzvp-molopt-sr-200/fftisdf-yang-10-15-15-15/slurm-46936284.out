OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-15-15-15-cco-2x2-frac-4-4-4-gth-dzvp-molopt-sr/46936284/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-15-15-15-cco-2x2-frac-4-4-4-gth-dzvp-molopt-sr/46936284/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [95 95 41] (370025 PWs)
len(kpts) = 64
    kpts = [[0.         0.         0.        ]
 [0.         0.         0.26135187]
 [0.         0.         0.52270374]
 [0.         0.         0.78405561]
 [0.         0.10779511 0.        ]
 [0.         0.10779511 0.26135187]
 [0.         0.10779511 0.52270374]
 [0.         0.10779511 0.78405561]
 [0.         0.21559021 0.        ]
 [0.         0.21559021 0.26135187]
 [0.         0.21559021 0.52270374]
 [0.         0.21559021 0.78405561]
 [0.         0.32338532 0.        ]
 [0.         0.32338532 0.26135187]
 [0.         0.32338532 0.52270374]
 [0.         0.32338532 0.78405561]
 [0.10779511 0.         0.        ]
 [0.10779511 0.         0.26135187]
 [0.10779511 0.         0.52270374]
 [0.10779511 0.         0.78405561]
 [0.10779511 0.10779511 0.        ]
 [0.10779511 0.10779511 0.26135187]
 [0.10779511 0.10779511 0.52270374]
 [0.10779511 0.10779511 0.78405561]
 [0.10779511 0.21559021 0.        ]
 [0.10779511 0.21559021 0.26135187]
 [0.10779511 0.21559021 0.52270374]
 [0.10779511 0.21559021 0.78405561]
 [0.10779511 0.32338532 0.        ]
 [0.10779511 0.32338532 0.26135187]
 [0.10779511 0.32338532 0.52270374]
 [0.10779511 0.32338532 0.78405561]
 [0.21559021 0.         0.        ]
 [0.21559021 0.         0.26135187]
 [0.21559021 0.         0.52270374]
 [0.21559021 0.         0.78405561]
 [0.21559021 0.10779511 0.        ]
 [0.21559021 0.10779511 0.26135187]
 [0.21559021 0.10779511 0.52270374]
 [0.21559021 0.10779511 0.78405561]
 [0.21559021 0.21559021 0.        ]
 [0.21559021 0.21559021 0.26135187]
 [0.21559021 0.21559021 0.52270374]
 [0.21559021 0.21559021 0.78405561]
 [0.21559021 0.32338532 0.        ]
 [0.21559021 0.32338532 0.26135187]
 [0.21559021 0.32338532 0.52270374]
 [0.21559021 0.32338532 0.78405561]
 [0.32338532 0.         0.        ]
 [0.32338532 0.         0.26135187]
 [0.32338532 0.         0.52270374]
 [0.32338532 0.         0.78405561]
 [0.32338532 0.10779511 0.        ]
 [0.32338532 0.10779511 0.26135187]
 [0.32338532 0.10779511 0.52270374]
 [0.32338532 0.10779511 0.78405561]
 [0.32338532 0.21559021 0.        ]
 [0.32338532 0.21559021 0.26135187]
 [0.32338532 0.21559021 0.52270374]
 [0.32338532 0.21559021 0.78405561]
 [0.32338532 0.32338532 0.        ]
 [0.32338532 0.32338532 0.26135187]
 [0.32338532 0.32338532 0.52270374]
 [0.32338532 0.32338532 0.78405561]]
Overwritten attributes  m0 kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [95 95 41]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 10 Eh.
Recommended ke_cutoff/mesh are 1066.26 / [217 217  91].

kmesh = [4 4 4]
Input parent grid mesh = [15, 15, 15], ke_cutoff =  95.62
Final parent grid size = [35 35 15]

Selecting interpolation points
nkpts = 64, nao = 260, c0 =  10.00
Parent grid mesh = [35 35 15], grid size = 18375
    CPU time for select interpolation points   3458.14 sec, wall time    109.38 sec
Pivoted Cholesky rank = 10358, nip = 2600, estimated error = 1.16e-01
Number of interpolation points = 2600, effective CISDF =  10.00
    CPU time for building left-hand side    192.97 sec, wall time      6.28 sec

kpt = 64, ngrid = 370025, nao = 260
ngrid = 370025, blksize = 18146, nip = 2600
required disk space = 985 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-15-15-15-cco-2x2-frac-4-4-4-gth-dzvp-molopt-sr/46936284/7p2j0ddw
blksize = 18146, memory for aoR_loop = 48311 MB
finished aoR_loop[       0:   18146]
finished aoR_loop[   18146:   36292]
finished aoR_loop[   36292:   54438]
finished aoR_loop[   54438:   72584]
finished aoR_loop[   72584:   90730]
finished aoR_loop[   90730:  108876]
finished aoR_loop[  108876:  127022]
finished aoR_loop[  127022:  145168]
finished aoR_loop[  145168:  163314]
finished aoR_loop[  163314:  181460]
finished aoR_loop[  181460:  199606]
finished aoR_loop[  199606:  217752]
finished aoR_loop[  217752:  235898]
finished aoR_loop[  235898:  254044]
finished aoR_loop[  254044:  272190]
finished aoR_loop[  272190:  290336]
finished aoR_loop[  290336:  308482]
finished aoR_loop[  308482:  326628]
finished aoR_loop[  326628:  344774]
finished aoR_loop[  344774:  362920]
finished aoR_loop[  362920:  370025]
    CPU time for building right-hand side  13800.76 sec, wall time   1425.23 sec
w[  0], rank = 2600 / 2600
    CPU time for w[  0]   3797.86 sec, wall time    123.22 sec
w[  1], rank = 2600 / 2600
    CPU time for w[  1]   5343.76 sec, wall time    142.74 sec
w[  2], rank = 2600 / 2600
    CPU time for w[  2]   6349.08 sec, wall time    153.05 sec
w[  3], rank = 2600 / 2600
    CPU time for w[  3]   9869.03 sec, wall time    215.27 sec
w[  4], rank = 2600 / 2600
    CPU time for w[  4]   8098.17 sec, wall time    182.60 sec
w[  5], rank = 2600 / 2600
    CPU time for w[  5]   5091.24 sec, wall time    138.81 sec
w[  6], rank = 2600 / 2600
    CPU time for w[  6]   4823.58 sec, wall time    130.00 sec
w[  7], rank = 2600 / 2600
    CPU time for w[  7]   5860.62 sec, wall time    151.33 sec
w[  8], rank = 2600 / 2600
    CPU time for w[  8]   5154.82 sec, wall time    132.30 sec
w[  9], rank = 2600 / 2600
    CPU time for w[  9]   4867.66 sec, wall time    140.26 sec
w[ 10], rank = 2600 / 2600
    CPU time for w[ 10]   4886.22 sec, wall time    131.34 sec
w[ 11], rank = 2600 / 2600
    CPU time for w[ 11]   4873.37 sec, wall time    138.25 sec
w[ 12], rank = 2600 / 2600
    CPU time for w[ 12]   5163.82 sec, wall time    137.70 sec
w[ 13], rank = 2600 / 2600
    CPU time for w[ 13]   9818.62 sec, wall time    216.61 sec
w[ 14], rank = 2600 / 2600
    CPU time for w[ 14]   5317.04 sec, wall time    143.21 sec
w[ 15], rank = 2600 / 2600
    CPU time for w[ 15]   5354.98 sec, wall time    159.81 sec
w[ 16], rank = 2600 / 2600
    CPU time for w[ 16]   9381.26 sec, wall time    210.03 sec
w[ 17], rank = 2600 / 2600
    CPU time for w[ 17]   4750.73 sec, wall time    134.16 sec
w[ 18], rank = 2600 / 2600
    CPU time for w[ 18]   5083.77 sec, wall time    137.01 sec
w[ 19], rank = 2600 / 2600
    CPU time for w[ 19]   5211.27 sec, wall time    141.40 sec
w[ 20], rank = 2600 / 2600
    CPU time for w[ 20]   4799.47 sec, wall time    131.99 sec
w[ 21], rank = 2600 / 2600
    CPU time for w[ 21]   4688.52 sec, wall time    143.53 sec
w[ 22], rank = 2600 / 2600
    CPU time for w[ 22]   9882.20 sec, wall time    214.15 sec
w[ 23], rank = 2600 / 2600
    CPU time for w[ 23]   4820.12 sec, wall time    141.86 sec
w[ 24], rank = 2600 / 2600
    CPU time for w[ 24]   6440.93 sec, wall time    163.70 sec
w[ 25], rank = 2600 / 2600
    CPU time for w[ 25]   4843.24 sec, wall time    136.55 sec
w[ 26], rank = 2600 / 2600
    CPU time for w[ 26]   7406.61 sec, wall time    171.09 sec
w[ 27], rank = 2600 / 2600
    CPU time for w[ 27]   4842.64 sec, wall time    137.25 sec
w[ 28], rank = 2600 / 2600
    CPU time for w[ 28]   7713.98 sec, wall time    178.82 sec
w[ 29], rank = 2600 / 2600
    CPU time for w[ 29]   5153.47 sec, wall time    143.21 sec
w[ 30], rank = 2600 / 2600
    CPU time for w[ 30]   5300.20 sec, wall time    142.83 sec
w[ 31], rank = 2600 / 2600
    CPU time for w[ 31]   5313.68 sec, wall time    145.15 sec
w[ 32], rank = 2600 / 2600
    CPU time for w[ 32]   9341.08 sec, wall time    204.83 sec
