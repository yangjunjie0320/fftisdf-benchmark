OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46829526/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46829526/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  30.00
       get_partition wall time:     2.852174 CPU time:     4.668694
len of partition[   0] =  19683
len of partition[   1] =  18252
len of partition[   2] =  18252
len of partition[   3] =  18252
len of partition[   4] =  18954
len of partition[   5] =  17576
len of partition[   6] =  18954
len of partition[   7] =  18954
len of partition[   8] =  19683
len of partition[   9] =  18252
len of partition[  10] =  18252
len of partition[  11] =  18252
len of partition[  12] =  18954
len of partition[  13] =  17576
len of partition[  14] =  18954
len of partition[  15] =  18954
len of partition[  16] =  19683
len of partition[  17] =  18252
len of partition[  18] =  18252
len of partition[  19] =  18252
len of partition[  20] =  18954
len of partition[  21] =  17576
len of partition[  22] =  18954
len of partition[  23] =  18954
len of partition[  24] =  19683
len of partition[  25] =  18252
len of partition[  26] =  18252
len of partition[  27] =  18252
len of partition[  28] =  18954
len of partition[  29] =  17576
len of partition[  30] =  18954
len of partition[  31] =  18954
len of partition[  32] =  19683
len of partition[  33] =  18252
len of partition[  34] =  18252
len of partition[  35] =  18252
len of partition[  36] =  18954
len of partition[  37] =  17576
len of partition[  38] =  18954
len of partition[  39] =  18954
len of partition[  40] =  19683
len of partition[  41] =  18252
len of partition[  42] =  18252
len of partition[  43] =  18252
len of partition[  44] =  18954
len of partition[  45] =  17576
len of partition[  46] =  18954
len of partition[  47] =  18954
len of partition[  48] =  19683
len of partition[  49] =  18252
len of partition[  50] =  18252
len of partition[  51] =  18252
len of partition[  52] =  18954
len of partition[  53] =  17576
len of partition[  54] =  18954
len of partition[  55] =  18954
len of partition[  56] =  19683
len of partition[  57] =  18252
len of partition[  58] =  18252
len of partition[  59] =  18252
len of partition[  60] =  18954
len of partition[  61] =  17576
len of partition[  62] =  18954
len of partition[  63] =  18954
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     3.341734 CPU time:   101.127269
In _build_buffer: ISDF Local size of buffer = 421.841 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found = 1004
select_IP_local_atm: npt_found =  704
select_IP_local_atm: npt_found =  674
select_IP_local_atm: npt_found =  714
select_IP_local_atm: npt_found =  576
select_IP_local_atm: npt_found =  478
select_IP_local_atm: npt_found =  576
select_IP_local_atm: npt_found =  576
select_IP_local_step1 wall time:     8.096026 CPU time:   240.888570
 build_aoRg_possible wall time:     0.085844 CPU time:     1.265096
select_IP_local_step2 wall time:     0.000130 CPU time:     0.000144
select_IP_local_step3 wall time:     0.001289 CPU time:     0.001284
Memory usage for aoR  :   1417.606 MB
Memory usage for aoRg :     50.559 MB
            build_IP wall time:     8.183289 CPU time:   242.155094
build_aux_basis_local wall time:     2.681971 CPU time:    71.253759
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]     16.30 sec, wall time      2.83 sec
    CPU time for gen W [   2|[  32:  64]     11.83 sec, wall time      2.74 sec
    CPU time for gen W [   3|[  64:  96]     13.70 sec, wall time      2.80 sec
    CPU time for gen W [   4|[  96: 128]     13.00 sec, wall time      2.77 sec
    CPU time for gen W [   5|[ 128: 160]     12.99 sec, wall time      2.78 sec
    CPU time for gen W [   6|[ 160: 192]     13.02 sec, wall time      2.77 sec
    CPU time for gen W [   7|[ 192: 224]     13.10 sec, wall time      2.78 sec
    CPU time for gen W [   8|[ 224: 256]     13.18 sec, wall time      2.80 sec
    CPU time for gen W [   9|[ 256: 288]     13.09 sec, wall time      2.78 sec
    CPU time for gen W [  10|[ 288: 320]     13.13 sec, wall time      2.78 sec
    CPU time for gen W [  11|[ 320: 352]     13.04 sec, wall time      2.78 sec
    CPU time for gen W [  12|[ 352: 384]     13.37 sec, wall time      2.79 sec
    CPU time for gen W [  13|[ 384: 416]     13.01 sec, wall time      2.77 sec
    CPU time for gen W [  14|[ 416: 448]     13.20 sec, wall time      2.81 sec
    CPU time for gen W [  15|[ 448: 480]     13.22 sec, wall time      2.78 sec
    CPU time for gen W [  16|[ 480: 512]     12.99 sec, wall time      2.78 sec
    CPU time for gen W [  17|[ 512: 544]     12.95 sec, wall time      2.77 sec
    CPU time for gen W [  18|[ 544: 576]     13.09 sec, wall time      2.78 sec
    CPU time for gen W [  19|[ 576: 608]     12.98 sec, wall time      2.80 sec
    CPU time for gen W [  20|[ 608: 640]     13.17 sec, wall time      2.78 sec
    CPU time for gen W [  21|[ 640: 672]     13.49 sec, wall time      2.79 sec
    CPU time for gen W [  22|[ 672: 704]     13.06 sec, wall time      2.77 sec
    CPU time for gen W [  23|[ 704: 736]     12.93 sec, wall time      2.77 sec
    CPU time for gen W [  24|[ 736: 768]     13.07 sec, wall time      2.78 sec
    CPU time for gen W [  25|[ 768: 800]     12.81 sec, wall time      2.77 sec
    CPU time for gen W [  26|[ 800: 832]     13.01 sec, wall time      2.79 sec
    CPU time for gen W [  27|[ 832: 864]     13.16 sec, wall time      2.78 sec
    CPU time for gen W [  28|[ 864: 896]     12.98 sec, wall time      2.77 sec
    CPU time for gen W [  29|[ 896: 928]     13.12 sec, wall time      2.78 sec
    CPU time for gen W [  30|[ 928: 960]     12.92 sec, wall time      2.76 sec
    CPU time for gen W [  31|[ 960: 992]     12.98 sec, wall time      2.77 sec
    CPU time for gen W [  32|[ 992:1004]      8.45 sec, wall time      1.09 sec
    CPU time for gen W [  33|[   0:  32]     12.99 sec, wall time      2.75 sec
    CPU time for gen W [  34|[  32:  64]     16.77 sec, wall time      2.89 sec
    CPU time for gen W [  35|[  64:  96]     10.45 sec, wall time      2.68 sec
    CPU time for gen W [  36|[  96: 128]     15.62 sec, wall time      2.84 sec
    CPU time for gen W [  37|[ 128: 160]     12.94 sec, wall time      2.75 sec
    CPU time for gen W [  38|[ 160: 192]     13.16 sec, wall time      2.79 sec
    CPU time for gen W [  39|[ 192: 224]     13.29 sec, wall time      2.77 sec
    CPU time for gen W [  40|[ 224: 256]     12.89 sec, wall time      2.75 sec
    CPU time for gen W [  41|[ 256: 288]     12.98 sec, wall time      2.75 sec
    CPU time for gen W [  42|[ 288: 320]     13.10 sec, wall time      2.78 sec
    CPU time for gen W [  43|[ 320: 352]     13.24 sec, wall time      2.76 sec
    CPU time for gen W [  44|[ 352: 384]     12.86 sec, wall time      2.75 sec
    CPU time for gen W [  45|[ 384: 416]     13.07 sec, wall time      2.76 sec
    CPU time for gen W [  46|[ 416: 448]     12.91 sec, wall time      2.76 sec
    CPU time for gen W [  47|[ 448: 480]     13.43 sec, wall time      2.77 sec
    CPU time for gen W [  48|[ 480: 512]     13.34 sec, wall time      2.77 sec
    CPU time for gen W [  49|[ 512: 544]     13.07 sec, wall time      2.77 sec
    CPU time for gen W [  50|[ 544: 576]     13.12 sec, wall time      2.77 sec
    CPU time for gen W [  51|[ 576: 608]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [  52|[ 608: 640]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [  53|[ 640: 672]     12.92 sec, wall time      2.75 sec
    CPU time for gen W [  54|[ 672: 704]     12.99 sec, wall time      2.75 sec
    CPU time for gen W [  55|[   0:  32]     12.94 sec, wall time      2.75 sec
    CPU time for gen W [  56|[  32:  64]     12.97 sec, wall time      2.77 sec
    CPU time for gen W [  57|[  64:  96]     13.21 sec, wall time      2.76 sec
    CPU time for gen W [  58|[  96: 128]     12.89 sec, wall time      2.75 sec
    CPU time for gen W [  59|[ 128: 160]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [  60|[ 160: 192]     13.13 sec, wall time      2.78 sec
    CPU time for gen W [  61|[ 192: 224]     13.12 sec, wall time      2.76 sec
    CPU time for gen W [  62|[ 224: 256]     12.89 sec, wall time      2.74 sec
    CPU time for gen W [  63|[ 256: 288]     12.94 sec, wall time      2.75 sec
    CPU time for gen W [  64|[ 288: 320]     13.08 sec, wall time      2.78 sec
    CPU time for gen W [  65|[ 320: 352]     13.17 sec, wall time      2.76 sec
    CPU time for gen W [  66|[ 352: 384]     12.98 sec, wall time      2.75 sec
    CPU time for gen W [  67|[ 384: 416]     13.29 sec, wall time      2.76 sec
    CPU time for gen W [  68|[ 416: 448]     12.87 sec, wall time      2.75 sec
    CPU time for gen W [  69|[ 448: 480]     12.85 sec, wall time      2.75 sec
    CPU time for gen W [  70|[ 480: 512]     13.06 sec, wall time      2.75 sec
    CPU time for gen W [  71|[ 512: 544]     13.09 sec, wall time      2.78 sec
    CPU time for gen W [  72|[ 544: 576]     13.04 sec, wall time      2.75 sec
    CPU time for gen W [  73|[ 576: 608]     12.93 sec, wall time      2.75 sec
    CPU time for gen W [  74|[ 608: 640]     12.85 sec, wall time      2.74 sec
    CPU time for gen W [  75|[ 640: 672]     12.93 sec, wall time      2.75 sec
    CPU time for gen W [  76|[ 672: 674]      6.40 sec, wall time      0.25 sec
    CPU time for gen W [  77|[   0:  32]     13.38 sec, wall time      2.76 sec
    CPU time for gen W [  78|[  32:  64]     13.31 sec, wall time      2.78 sec
    CPU time for gen W [  79|[  64:  96]     12.99 sec, wall time      2.76 sec
    CPU time for gen W [  80|[  96: 128]     12.91 sec, wall time      2.75 sec
    CPU time for gen W [  81|[ 128: 160]     13.05 sec, wall time      2.75 sec
    CPU time for gen W [  82|[ 160: 192]     13.29 sec, wall time      2.79 sec
    CPU time for gen W [  83|[ 192: 224]     13.17 sec, wall time      2.76 sec
    CPU time for gen W [  84|[ 224: 256]     13.03 sec, wall time      2.75 sec
    CPU time for gen W [  85|[ 256: 288]     13.78 sec, wall time      2.78 sec
    CPU time for gen W [  86|[ 288: 320]     12.41 sec, wall time      2.73 sec
    CPU time for gen W [  87|[ 320: 352]     13.12 sec, wall time      2.78 sec
    CPU time for gen W [  88|[ 352: 384]     13.24 sec, wall time      2.77 sec
    CPU time for gen W [  89|[ 384: 416]     13.53 sec, wall time      2.78 sec
    CPU time for gen W [  90|[ 416: 448]     12.94 sec, wall time      2.76 sec
    CPU time for gen W [  91|[ 448: 480]     13.07 sec, wall time      2.76 sec
    CPU time for gen W [  92|[ 480: 512]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [  93|[ 512: 544]     13.10 sec, wall time      2.79 sec
    CPU time for gen W [  94|[ 544: 576]     16.85 sec, wall time      2.89 sec
    CPU time for gen W [  95|[ 576: 608]     13.09 sec, wall time      2.76 sec
    CPU time for gen W [  96|[ 608: 640]     13.12 sec, wall time      2.76 sec
    CPU time for gen W [  97|[ 640: 672]     13.40 sec, wall time      2.76 sec
    CPU time for gen W [  98|[ 672: 704]     12.91 sec, wall time      2.75 sec
    CPU time for gen W [  99|[ 704: 714]      8.72 sec, wall time      0.93 sec
    CPU time for gen W [ 100|[   0:  32]     13.29 sec, wall time      2.79 sec
    CPU time for gen W [ 101|[  32:  64]     13.31 sec, wall time      2.76 sec
    CPU time for gen W [ 102|[  64:  96]     12.98 sec, wall time      2.75 sec
    CPU time for gen W [ 103|[  96: 128]     13.06 sec, wall time      2.75 sec
    CPU time for gen W [ 104|[ 128: 160]     13.21 sec, wall time      2.78 sec
    CPU time for gen W [ 105|[ 160: 192]     13.22 sec, wall time      2.76 sec
    CPU time for gen W [ 106|[ 192: 224]     12.91 sec, wall time      2.75 sec
    CPU time for gen W [ 107|[ 224: 256]     13.01 sec, wall time      2.76 sec
    CPU time for gen W [ 108|[ 256: 288]     13.08 sec, wall time      2.78 sec
    CPU time for gen W [ 109|[ 288: 320]     13.36 sec, wall time      2.76 sec
    CPU time for gen W [ 110|[ 320: 352]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [ 111|[ 352: 384]     12.95 sec, wall time      2.75 sec
    CPU time for gen W [ 112|[ 384: 416]     13.03 sec, wall time      2.75 sec
    CPU time for gen W [ 113|[ 416: 448]     12.93 sec, wall time      2.75 sec
    CPU time for gen W [ 114|[ 448: 480]     14.17 sec, wall time      2.79 sec
    CPU time for gen W [ 115|[ 480: 512]     13.19 sec, wall time      2.76 sec
    CPU time for gen W [ 116|[ 512: 544]     13.10 sec, wall time      2.76 sec
    CPU time for gen W [ 117|[ 544: 576]     13.01 sec, wall time      2.75 sec
    CPU time for gen W [ 118|[   0:  32]     12.98 sec, wall time      2.76 sec
    CPU time for gen W [ 119|[  32:  64]     13.00 sec, wall time      2.75 sec
    CPU time for gen W [ 120|[  64:  96]     13.25 sec, wall time      2.78 sec
    CPU time for gen W [ 121|[  96: 128]     13.17 sec, wall time      2.75 sec
    CPU time for gen W [ 122|[ 128: 160]     12.98 sec, wall time      2.75 sec
    CPU time for gen W [ 123|[ 160: 192]     12.93 sec, wall time      2.75 sec
    CPU time for gen W [ 124|[ 192: 224]     13.10 sec, wall time      2.78 sec
    CPU time for gen W [ 125|[ 224: 256]     13.28 sec, wall time      2.76 sec
    CPU time for gen W [ 126|[ 256: 288]     13.06 sec, wall time      2.76 sec
    CPU time for gen W [ 127|[ 288: 320]     12.90 sec, wall time      2.75 sec
    CPU time for gen W [ 128|[ 320: 352]     12.96 sec, wall time      2.75 sec
    CPU time for gen W [ 129|[ 352: 384]     13.03 sec, wall time      2.75 sec
    CPU time for gen W [ 130|[ 384: 416]     13.12 sec, wall time      2.76 sec
    CPU time for gen W [ 131|[ 416: 448]     13.15 sec, wall time      2.78 sec
    CPU time for gen W [ 132|[ 448: 478]     12.66 sec, wall time      2.59 sec
    CPU time for gen W [ 133|[   0:  32]     13.08 sec, wall time      2.75 sec
    CPU time for gen W [ 134|[  32:  64]     12.92 sec, wall time      2.75 sec
    CPU time for gen W [ 135|[  64:  96]     13.05 sec, wall time      2.75 sec
    CPU time for gen W [ 136|[  96: 128]     13.41 sec, wall time      2.78 sec
    CPU time for gen W [ 137|[ 128: 160]     12.99 sec, wall time      2.75 sec
    CPU time for gen W [ 138|[ 160: 192]     12.99 sec, wall time      2.75 sec
    CPU time for gen W [ 139|[ 192: 224]     14.08 sec, wall time      2.80 sec
    CPU time for gen W [ 140|[ 224: 256]     13.26 sec, wall time      2.79 sec
    CPU time for gen W [ 141|[ 256: 288]     13.06 sec, wall time      2.75 sec
    CPU time for gen W [ 142|[ 288: 320]     13.10 sec, wall time      2.75 sec
    CPU time for gen W [ 143|[ 320: 352]     13.01 sec, wall time      2.76 sec
    CPU time for gen W [ 144|[ 352: 384]     13.05 sec, wall time      2.76 sec
    CPU time for gen W [ 145|[ 384: 416]     13.90 sec, wall time      2.79 sec
    CPU time for gen W [ 146|[ 416: 448]     13.37 sec, wall time      2.79 sec
    CPU time for gen W [ 147|[ 448: 480]     13.06 sec, wall time      2.77 sec
    CPU time for gen W [ 148|[ 480: 512]     13.00 sec, wall time      2.76 sec
    CPU time for gen W [ 149|[ 512: 544]     12.94 sec, wall time      2.75 sec
    CPU time for gen W [ 150|[ 544: 576]     13.02 sec, wall time      2.75 sec
    CPU time for gen W [ 151|[   0:  32]     13.61 sec, wall time      3.33 sec
    CPU time for gen W [ 152|[  32:  64]     13.81 sec, wall time      2.81 sec
    CPU time for gen W [ 153|[  64:  96]     13.06 sec, wall time      2.78 sec
    CPU time for gen W [ 154|[  96: 128]     13.11 sec, wall time      2.79 sec
    CPU time for gen W [ 155|[ 128: 160]     13.29 sec, wall time      2.81 sec
    CPU time for gen W [ 156|[ 160: 192]     13.18 sec, wall time      2.78 sec
    CPU time for gen W [ 157|[ 192: 224]     13.63 sec, wall time      2.80 sec
    CPU time for gen W [ 158|[ 224: 256]     13.10 sec, wall time      2.78 sec
    CPU time for gen W [ 159|[ 256: 288]     13.02 sec, wall time      2.80 sec
    CPU time for gen W [ 160|[ 288: 320]     13.32 sec, wall time      2.79 sec
    CPU time for gen W [ 161|[ 320: 352]     13.31 sec, wall time      2.79 sec
    CPU time for gen W [ 162|[ 352: 384]     13.03 sec, wall time      2.78 sec
    CPU time for gen W [ 163|[ 384: 416]     13.04 sec, wall time      2.78 sec
    CPU time for gen W [ 164|[ 416: 448]     13.00 sec, wall time      2.79 sec
    CPU time for gen W [ 165|[ 448: 480]     13.77 sec, wall time      2.81 sec
    CPU time for gen W [ 166|[ 480: 512]     13.19 sec, wall time      2.78 sec
    CPU time for gen W [ 167|[ 512: 544]     13.17 sec, wall time      2.78 sec
    CPU time for gen W [ 168|[ 544: 576]     13.01 sec, wall time      2.78 sec
     build_V_W_local wall time:   459.565466 CPU time:  2196.728487
Number of interpolation points = 42416, effective CISDF =  33.99
    CPU time for ISDF build   2619.55 sec, wall time    477.19 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-30/46829526/isdf.chk
