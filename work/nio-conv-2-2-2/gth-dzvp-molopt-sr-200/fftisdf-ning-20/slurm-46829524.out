OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46829524/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46829524/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  20.00
       get_partition wall time:     2.886441 CPU time:     4.643412
len of partition[   0] =  19683
len of partition[   1] =  18252
len of partition[   2] =  18252
len of partition[   3] =  18252
len of partition[   4] =  18954
len of partition[   5] =  17576
len of partition[   6] =  18954
len of partition[   7] =  18954
len of partition[   8] =  19683
len of partition[   9] =  18252
len of partition[  10] =  18252
len of partition[  11] =  18252
len of partition[  12] =  18954
len of partition[  13] =  17576
len of partition[  14] =  18954
len of partition[  15] =  18954
len of partition[  16] =  19683
len of partition[  17] =  18252
len of partition[  18] =  18252
len of partition[  19] =  18252
len of partition[  20] =  18954
len of partition[  21] =  17576
len of partition[  22] =  18954
len of partition[  23] =  18954
len of partition[  24] =  19683
len of partition[  25] =  18252
len of partition[  26] =  18252
len of partition[  27] =  18252
len of partition[  28] =  18954
len of partition[  29] =  17576
len of partition[  30] =  18954
len of partition[  31] =  18954
len of partition[  32] =  19683
len of partition[  33] =  18252
len of partition[  34] =  18252
len of partition[  35] =  18252
len of partition[  36] =  18954
len of partition[  37] =  17576
len of partition[  38] =  18954
len of partition[  39] =  18954
len of partition[  40] =  19683
len of partition[  41] =  18252
len of partition[  42] =  18252
len of partition[  43] =  18252
len of partition[  44] =  18954
len of partition[  45] =  17576
len of partition[  46] =  18954
len of partition[  47] =  18954
len of partition[  48] =  19683
len of partition[  49] =  18252
len of partition[  50] =  18252
len of partition[  51] =  18252
len of partition[  52] =  18954
len of partition[  53] =  17576
len of partition[  54] =  18954
len of partition[  55] =  18954
len of partition[  56] =  19683
len of partition[  57] =  18252
len of partition[  58] =  18252
len of partition[  59] =  18252
len of partition[  60] =  18954
len of partition[  61] =  17576
len of partition[  62] =  18954
len of partition[  63] =  18954
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     3.071449 CPU time:    92.009490
In _build_buffer: ISDF Local size of buffer = 402.596 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  729
select_IP_local_atm: npt_found =  628
select_IP_local_atm: npt_found =  633
select_IP_local_atm: npt_found =  631
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  423
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_step1 wall time:     3.760306 CPU time:   118.707959
 build_aoRg_possible wall time:     0.073561 CPU time:     2.330914
select_IP_local_step2 wall time:     0.000143 CPU time:     0.031082
select_IP_local_step3 wall time:     0.001301 CPU time:     0.032231
Memory usage for aoR  :   1417.606 MB
Memory usage for aoRg :     41.656 MB
            build_IP wall time:     3.835311 CPU time:   121.102185
build_aux_basis_local wall time:     2.372265 CPU time:    61.974857
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]     17.07 sec, wall time      3.22 sec
    CPU time for gen W [   2|[  32:  64]     12.67 sec, wall time      2.77 sec
    CPU time for gen W [   3|[  64:  96]     14.35 sec, wall time      2.97 sec
    CPU time for gen W [   4|[  96: 128]     13.19 sec, wall time      2.81 sec
    CPU time for gen W [   5|[ 128: 160]     13.18 sec, wall time      2.77 sec
    CPU time for gen W [   6|[ 160: 192]     13.19 sec, wall time      2.77 sec
    CPU time for gen W [   7|[ 192: 224]     12.75 sec, wall time      2.73 sec
    CPU time for gen W [   8|[ 224: 256]     13.04 sec, wall time      2.76 sec
    CPU time for gen W [   9|[ 256: 288]     12.56 sec, wall time      2.72 sec
    CPU time for gen W [  10|[ 288: 320]     12.81 sec, wall time      2.73 sec
    CPU time for gen W [  11|[ 320: 352]     12.61 sec, wall time      2.67 sec
    CPU time for gen W [  12|[ 352: 384]     12.56 sec, wall time      2.67 sec
    CPU time for gen W [  13|[ 384: 416]     12.61 sec, wall time      2.67 sec
    CPU time for gen W [  14|[ 416: 448]     12.77 sec, wall time      2.67 sec
    CPU time for gen W [  15|[ 448: 480]     12.57 sec, wall time      2.67 sec
    CPU time for gen W [  16|[ 480: 512]     12.55 sec, wall time      2.66 sec
    CPU time for gen W [  17|[ 512: 544]     12.55 sec, wall time      2.67 sec
    CPU time for gen W [  18|[ 544: 576]     12.66 sec, wall time      2.67 sec
    CPU time for gen W [  19|[ 576: 608]     12.69 sec, wall time      2.67 sec
    CPU time for gen W [  20|[ 608: 640]     13.43 sec, wall time      2.73 sec
    CPU time for gen W [  21|[ 640: 672]     12.75 sec, wall time      2.68 sec
    CPU time for gen W [  22|[ 672: 704]     12.71 sec, wall time      2.67 sec
    CPU time for gen W [  23|[ 704: 729]     11.81 sec, wall time      2.13 sec
    CPU time for gen W [  24|[   0:  32]     12.80 sec, wall time      2.78 sec
    CPU time for gen W [  25|[  32:  64]     14.77 sec, wall time      2.78 sec
    CPU time for gen W [  26|[  64:  96]     10.77 sec, wall time      2.65 sec
    CPU time for gen W [  27|[  96: 128]     14.79 sec, wall time      2.78 sec
    CPU time for gen W [  28|[ 128: 160]     13.96 sec, wall time      2.83 sec
    CPU time for gen W [  29|[ 160: 192]     13.85 sec, wall time      2.82 sec
    CPU time for gen W [  30|[ 192: 224]     14.28 sec, wall time      2.83 sec
    CPU time for gen W [  31|[ 224: 256]     13.28 sec, wall time      2.80 sec
    CPU time for gen W [  32|[ 256: 288]     13.81 sec, wall time      2.82 sec
    CPU time for gen W [  33|[ 288: 320]     13.77 sec, wall time      2.82 sec
    CPU time for gen W [  34|[ 320: 352]     13.80 sec, wall time      2.81 sec
    CPU time for gen W [  35|[ 352: 384]     13.79 sec, wall time      2.82 sec
    CPU time for gen W [  36|[ 384: 416]     13.80 sec, wall time      2.82 sec
    CPU time for gen W [  37|[ 416: 448]     15.55 sec, wall time      3.80 sec
    CPU time for gen W [  38|[ 448: 480]     14.57 sec, wall time      3.35 sec
    CPU time for gen W [  39|[ 480: 512]     12.92 sec, wall time      2.72 sec
    CPU time for gen W [  40|[ 512: 544]     13.77 sec, wall time      2.77 sec
    CPU time for gen W [  41|[ 544: 576]     12.96 sec, wall time      2.72 sec
    CPU time for gen W [  42|[ 576: 608]     12.96 sec, wall time      2.72 sec
    CPU time for gen W [  43|[ 608: 628]     10.99 sec, wall time      1.76 sec
    CPU time for gen W [  44|[   0:  32]     13.88 sec, wall time      2.81 sec
    CPU time for gen W [  45|[  32:  64]     14.47 sec, wall time      2.80 sec
    CPU time for gen W [  46|[  64:  96]     14.47 sec, wall time      2.85 sec
    CPU time for gen W [  47|[  96: 128]     12.99 sec, wall time      2.80 sec
    CPU time for gen W [  48|[ 128: 160]     13.70 sec, wall time      2.82 sec
    CPU time for gen W [  49|[ 160: 192]     13.72 sec, wall time      2.82 sec
    CPU time for gen W [  50|[ 192: 224]     13.75 sec, wall time      2.82 sec
    CPU time for gen W [  51|[ 224: 256]     13.67 sec, wall time      2.81 sec
    CPU time for gen W [  52|[ 256: 288]     13.71 sec, wall time      2.81 sec
    CPU time for gen W [  53|[ 288: 320]     13.69 sec, wall time      2.82 sec
    CPU time for gen W [  54|[ 320: 352]     13.77 sec, wall time      2.82 sec
    CPU time for gen W [  55|[ 352: 384]     13.68 sec, wall time      2.82 sec
    CPU time for gen W [  56|[ 384: 416]     13.73 sec, wall time      2.82 sec
    CPU time for gen W [  57|[ 416: 448]     13.74 sec, wall time      2.82 sec
    CPU time for gen W [  58|[ 448: 480]     13.75 sec, wall time      2.82 sec
    CPU time for gen W [  59|[ 480: 512]     13.73 sec, wall time      2.82 sec
    CPU time for gen W [  60|[ 512: 544]     13.70 sec, wall time      2.82 sec
    CPU time for gen W [  61|[ 544: 576]     13.69 sec, wall time      2.82 sec
    CPU time for gen W [  62|[ 576: 608]     13.74 sec, wall time      2.83 sec
    CPU time for gen W [  63|[ 608: 633]     12.20 sec, wall time      2.23 sec
    CPU time for gen W [  64|[   0:  32]     14.52 sec, wall time      2.82 sec
    CPU time for gen W [  65|[  32:  64]     15.82 sec, wall time      2.93 sec
    CPU time for gen W [  66|[  64:  96]     14.43 sec, wall time      2.81 sec
    CPU time for gen W [  67|[  96: 128]     14.40 sec, wall time      2.80 sec
    CPU time for gen W [  68|[ 128: 160]     14.42 sec, wall time      2.80 sec
    CPU time for gen W [  69|[ 160: 192]     14.42 sec, wall time      2.81 sec
    CPU time for gen W [  70|[ 192: 224]     14.56 sec, wall time      2.81 sec
    CPU time for gen W [  71|[ 224: 256]     14.48 sec, wall time      2.81 sec
    CPU time for gen W [  72|[ 256: 288]     14.40 sec, wall time      2.81 sec
    CPU time for gen W [  73|[ 288: 320]     14.48 sec, wall time      2.81 sec
    CPU time for gen W [  74|[ 320: 352]     14.41 sec, wall time      2.81 sec
    CPU time for gen W [  75|[ 352: 384]     14.40 sec, wall time      2.80 sec
    CPU time for gen W [  76|[ 384: 416]     14.47 sec, wall time      2.80 sec
    CPU time for gen W [  77|[ 416: 448]     14.40 sec, wall time      2.80 sec
    CPU time for gen W [  78|[ 448: 480]     14.43 sec, wall time      2.80 sec
    CPU time for gen W [  79|[ 480: 512]     14.46 sec, wall time      2.80 sec
    CPU time for gen W [  80|[ 512: 544]     14.47 sec, wall time      2.81 sec
    CPU time for gen W [  81|[ 544: 576]     14.41 sec, wall time      2.80 sec
    CPU time for gen W [  82|[ 576: 608]     14.41 sec, wall time      2.80 sec
    CPU time for gen W [  83|[ 608: 631]     12.07 sec, wall time      2.04 sec
    CPU time for gen W [  84|[   0:  32]     14.48 sec, wall time      2.80 sec
    CPU time for gen W [  85|[  32:  64]     14.38 sec, wall time      2.80 sec
    CPU time for gen W [  86|[  64:  96]     14.41 sec, wall time      2.80 sec
    CPU time for gen W [  87|[  96: 128]     14.45 sec, wall time      2.80 sec
    CPU time for gen W [  88|[ 128: 160]     14.42 sec, wall time      2.80 sec
    CPU time for gen W [  89|[ 160: 192]     14.41 sec, wall time      2.81 sec
    CPU time for gen W [  90|[ 192: 224]     14.44 sec, wall time      2.80 sec
    CPU time for gen W [  91|[ 224: 256]     14.45 sec, wall time      2.81 sec
    CPU time for gen W [  92|[ 256: 288]     14.44 sec, wall time      2.80 sec
    CPU time for gen W [  93|[ 288: 320]     14.39 sec, wall time      2.80 sec
    CPU time for gen W [  94|[ 320: 352]     14.94 sec, wall time      2.82 sec
    CPU time for gen W [  95|[ 352: 384]     13.96 sec, wall time      2.79 sec
    CPU time for gen W [  96|[ 384: 416]     14.41 sec, wall time      2.80 sec
    CPU time for gen W [  97|[ 416: 441]     12.93 sec, wall time      2.22 sec
    CPU time for gen W [  98|[   0:  32]     14.47 sec, wall time      2.81 sec
    CPU time for gen W [  99|[  32:  64]     14.47 sec, wall time      2.80 sec
    CPU time for gen W [ 100|[  64:  96]     15.47 sec, wall time      2.87 sec
    CPU time for gen W [ 101|[  96: 128]     14.49 sec, wall time      2.80 sec
    CPU time for gen W [ 102|[ 128: 160]     14.51 sec, wall time      2.80 sec
    CPU time for gen W [ 103|[ 160: 192]     14.49 sec, wall time      2.80 sec
    CPU time for gen W [ 104|[ 192: 224]     14.49 sec, wall time      2.80 sec
    CPU time for gen W [ 105|[ 224: 256]     14.53 sec, wall time      2.81 sec
    CPU time for gen W [ 106|[ 256: 288]     14.48 sec, wall time      2.80 sec
    CPU time for gen W [ 107|[ 288: 320]     14.50 sec, wall time      2.81 sec
    CPU time for gen W [ 108|[ 320: 352]     14.51 sec, wall time      2.81 sec
    CPU time for gen W [ 109|[ 352: 384]     14.53 sec, wall time      2.81 sec
    CPU time for gen W [ 110|[ 384: 416]     14.51 sec, wall time      2.80 sec
    CPU time for gen W [ 111|[ 416: 423]      8.06 sec, wall time      0.68 sec
    CPU time for gen W [ 112|[   0:  32]     14.67 sec, wall time      2.81 sec
    CPU time for gen W [ 113|[  32:  64]     14.47 sec, wall time      2.81 sec
    CPU time for gen W [ 114|[  64:  96]     14.53 sec, wall time      2.81 sec
    CPU time for gen W [ 115|[  96: 128]     14.48 sec, wall time      2.81 sec
    CPU time for gen W [ 116|[ 128: 160]     14.48 sec, wall time      2.81 sec
    CPU time for gen W [ 117|[ 160: 192]     14.51 sec, wall time      2.80 sec
    CPU time for gen W [ 118|[ 192: 224]     14.54 sec, wall time      2.81 sec
    CPU time for gen W [ 119|[ 224: 256]     14.50 sec, wall time      2.81 sec
    CPU time for gen W [ 120|[ 256: 288]     14.53 sec, wall time      2.80 sec
    CPU time for gen W [ 121|[ 288: 320]     14.52 sec, wall time      2.80 sec
    CPU time for gen W [ 122|[ 320: 352]     14.53 sec, wall time      2.80 sec
    CPU time for gen W [ 123|[ 352: 384]     14.46 sec, wall time      2.80 sec
    CPU time for gen W [ 124|[ 384: 416]     14.48 sec, wall time      2.80 sec
    CPU time for gen W [ 125|[ 416: 441]     12.97 sec, wall time      2.22 sec
    CPU time for gen W [ 126|[   0:  32]     14.57 sec, wall time      2.85 sec
    CPU time for gen W [ 127|[  32:  64]     14.55 sec, wall time      2.84 sec
    CPU time for gen W [ 128|[  64:  96]     14.53 sec, wall time      2.85 sec
    CPU time for gen W [ 129|[  96: 128]     14.56 sec, wall time      2.85 sec
    CPU time for gen W [ 130|[ 128: 160]     14.53 sec, wall time      2.84 sec
    CPU time for gen W [ 131|[ 160: 192]     14.55 sec, wall time      2.84 sec
    CPU time for gen W [ 132|[ 192: 224]     14.58 sec, wall time      2.84 sec
    CPU time for gen W [ 133|[ 224: 256]     14.51 sec, wall time      2.84 sec
    CPU time for gen W [ 134|[ 256: 288]     14.56 sec, wall time      2.85 sec
    CPU time for gen W [ 135|[ 288: 320]     14.55 sec, wall time      2.84 sec
    CPU time for gen W [ 136|[ 320: 352]     14.57 sec, wall time      2.84 sec
    CPU time for gen W [ 137|[ 352: 384]     14.55 sec, wall time      2.84 sec
    CPU time for gen W [ 138|[ 384: 416]     14.56 sec, wall time      2.84 sec
    CPU time for gen W [ 139|[ 416: 441]     12.98 sec, wall time      2.25 sec
     build_V_W_local wall time:   383.676993 CPU time:  1933.948705
Number of interpolation points = 34936, effective CISDF =  27.99
    CPU time for ISDF build   2217.70 sec, wall time    396.39 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-20/46829524/isdf.chk
