OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-10/46905122/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-10/46905122/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  10.00
       get_partition wall time:     0.131836 CPU time:     2.368238
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.223648 CPU time:     6.541895
In _build_buffer: ISDF Local size of buffer = 100.103 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  385
select_IP_local_atm: npt_found =  378
select_IP_local_atm: npt_found =  382
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  253
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_step1 wall time:     0.372894 CPU time:    11.795576
 build_aoRg_possible wall time:     0.016606 CPU time:     0.511077
select_IP_local_step2 wall time:     0.000092 CPU time:     0.000098
select_IP_local_step3 wall time:     0.000683 CPU time:     0.030995
Memory usage for aoR  :     46.855 MB
Memory usage for aoRg :     24.899 MB
            build_IP wall time:     0.390275 CPU time:    12.337746
build_aux_basis_local wall time:     0.109625 CPU time:     3.498011
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      6.19 sec, wall time      0.20 sec
    CPU time for gen W [   2|[  32:  64]      1.56 sec, wall time      0.10 sec
    CPU time for gen W [   3|[  64:  96]      0.50 sec, wall time      0.03 sec
    CPU time for gen W [   4|[  96: 128]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [   5|[ 128: 160]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [   6|[ 160: 192]      1.04 sec, wall time      0.06 sec
    CPU time for gen W [   7|[ 192: 224]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [   8|[ 224: 256]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [   9|[ 256: 288]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  10|[ 288: 320]      1.03 sec, wall time      0.06 sec
    CPU time for gen W [  11|[ 320: 352]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  12|[ 352: 384]      1.02 sec, wall time      0.06 sec
    CPU time for gen W [  13|[ 384: 416]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  14|[ 416: 441]      0.84 sec, wall time      0.05 sec
    CPU time for gen W [  15|[   0:  32]      1.36 sec, wall time      0.06 sec
    CPU time for gen W [  16|[  32:  64]      1.76 sec, wall time      0.09 sec
    CPU time for gen W [  17|[  64:  96]      0.61 sec, wall time      0.04 sec
    CPU time for gen W [  18|[  96: 128]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  19|[ 128: 160]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  20|[ 160: 192]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  21|[ 192: 224]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  22|[ 224: 256]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  23|[ 256: 288]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  24|[ 288: 320]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  25|[ 320: 352]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  26|[ 352: 384]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  27|[ 384: 385]      0.08 sec, wall time      0.01 sec
    CPU time for gen W [  28|[   0:  32]      1.07 sec, wall time      0.07 sec
    CPU time for gen W [  29|[  32:  64]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  30|[  64:  96]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  31|[  96: 128]      1.04 sec, wall time      0.06 sec
    CPU time for gen W [  32|[ 128: 160]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  33|[ 160: 192]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  34|[ 192: 224]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  35|[ 224: 256]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  36|[ 256: 288]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  37|[ 288: 320]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  38|[ 320: 352]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  39|[ 352: 378]      0.87 sec, wall time      0.05 sec
    CPU time for gen W [  40|[   0:  32]      1.34 sec, wall time      0.06 sec
    CPU time for gen W [  41|[  32:  64]      1.33 sec, wall time      0.06 sec
    CPU time for gen W [  42|[  64:  96]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  43|[  96: 128]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  44|[ 128: 160]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  45|[ 160: 192]      1.04 sec, wall time      0.06 sec
    CPU time for gen W [  46|[ 192: 224]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  47|[ 224: 256]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  48|[ 256: 288]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  49|[ 288: 320]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  50|[ 320: 352]      1.02 sec, wall time      0.06 sec
    CPU time for gen W [  51|[ 352: 382]      0.99 sec, wall time      0.06 sec
    CPU time for gen W [  52|[   0:  32]      1.07 sec, wall time      0.07 sec
    CPU time for gen W [  53|[  32:  64]      1.07 sec, wall time      0.07 sec
    CPU time for gen W [  54|[  64:  96]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  55|[  96: 128]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  56|[ 128: 160]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  57|[ 160: 192]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  58|[ 192: 224]      1.07 sec, wall time      0.07 sec
    CPU time for gen W [  59|[ 224: 256]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  60|[   0:  32]      1.09 sec, wall time      0.07 sec
    CPU time for gen W [  61|[  32:  64]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  62|[  64:  96]      1.21 sec, wall time      0.08 sec
    CPU time for gen W [  63|[  96: 128]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  64|[ 128: 160]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  65|[ 160: 192]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  66|[ 192: 224]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  67|[ 224: 253]      1.03 sec, wall time      0.06 sec
    CPU time for gen W [  68|[   0:  32]      1.53 sec, wall time      0.06 sec
    CPU time for gen W [  69|[  32:  64]      1.50 sec, wall time      0.07 sec
    CPU time for gen W [  70|[  64:  96]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  71|[  96: 128]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  72|[ 128: 160]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  73|[ 160: 192]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  74|[ 192: 224]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  75|[ 224: 256]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  76|[   0:  32]      1.09 sec, wall time      0.07 sec
    CPU time for gen W [  77|[  32:  64]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  78|[  64:  96]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  79|[  96: 128]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  80|[ 128: 160]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  81|[ 160: 192]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  82|[ 192: 224]      1.04 sec, wall time      0.07 sec
    CPU time for gen W [  83|[ 224: 256]      1.04 sec, wall time      0.07 sec
     build_V_W_local wall time:     5.494443 CPU time:    93.111743
Number of interpolation points = 20856, effective CISDF =  16.71
    CPU time for ISDF build    123.91 sec, wall time      6.55 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-10/46905122/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
