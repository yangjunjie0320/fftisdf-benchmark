OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-40/46905475/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-40/46905475/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  40.00
       get_partition wall time:     0.173821 CPU time:     0.801080
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.205909 CPU time:     5.821254
In _build_buffer: ISDF Local size of buffer = 50.415 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  421
select_IP_local_atm: npt_found =  253
select_IP_local_atm: npt_found =  253
select_IP_local_atm: npt_found =  243
select_IP_local_atm: npt_found =  280
select_IP_local_atm: npt_found =  202
select_IP_local_atm: npt_found =  276
select_IP_local_atm: npt_found =  286
select_IP_local_step1 wall time:     0.449941 CPU time:    14.218213
 build_aoRg_possible wall time:     0.006450 CPU time:     0.191070
select_IP_local_step2 wall time:     0.000084 CPU time:     0.030934
select_IP_local_step3 wall time:     0.000780 CPU time:     0.000780
Memory usage for aoR  :     16.820 MB
Memory usage for aoRg :      7.595 MB
            build_IP wall time:     0.457256 CPU time:    14.440997
build_aux_basis_local wall time:     0.054929 CPU time:     1.746966
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      6.07 sec, wall time      0.20 sec
    CPU time for gen W [   2|[  32:  64]      1.96 sec, wall time      0.12 sec
    CPU time for gen W [   3|[  64:  96]      0.48 sec, wall time      0.03 sec
    CPU time for gen W [   4|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [   5|[ 128: 160]      1.23 sec, wall time      0.08 sec
    CPU time for gen W [   6|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [   7|[ 192: 224]      1.23 sec, wall time      0.08 sec
    CPU time for gen W [   8|[ 224: 256]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [   9|[ 256: 288]      1.23 sec, wall time      0.08 sec
    CPU time for gen W [  10|[ 288: 320]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  11|[ 320: 352]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  12|[ 352: 384]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  13|[ 384: 416]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  14|[ 416: 421]      0.27 sec, wall time      0.02 sec
    CPU time for gen W [  15|[   0:  32]      1.83 sec, wall time      0.12 sec
    CPU time for gen W [  16|[  32:  64]      1.32 sec, wall time      0.08 sec
    CPU time for gen W [  17|[  64:  96]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  18|[  96: 128]      2.88 sec, wall time      0.18 sec
    CPU time for gen W [  19|[ 128: 160]      0.03 sec, wall time      0.00 sec
    CPU time for gen W [  20|[ 160: 192]      1.34 sec, wall time      0.08 sec
    CPU time for gen W [  21|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  22|[ 224: 253]      1.20 sec, wall time      0.08 sec
    CPU time for gen W [  23|[   0:  32]      1.61 sec, wall time      0.10 sec
    CPU time for gen W [  24|[  32:  64]      1.33 sec, wall time      0.08 sec
    CPU time for gen W [  25|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  26|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  27|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  28|[ 160: 192]      1.41 sec, wall time      0.09 sec
    CPU time for gen W [  29|[ 192: 224]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  30|[ 224: 253]      1.15 sec, wall time      0.07 sec
    CPU time for gen W [  31|[   0:  32]      1.55 sec, wall time      0.10 sec
    CPU time for gen W [  32|[  32:  64]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  33|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  34|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  35|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  36|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  37|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  38|[ 224: 243]      0.82 sec, wall time      0.05 sec
    CPU time for gen W [  39|[   0:  32]      2.08 sec, wall time      0.10 sec
    CPU time for gen W [  40|[  32:  64]      1.43 sec, wall time      0.08 sec
    CPU time for gen W [  41|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  42|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  43|[ 128: 160]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  44|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  45|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  46|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  47|[ 256: 280]      0.94 sec, wall time      0.06 sec
    CPU time for gen W [  48|[   0:  32]      1.56 sec, wall time      0.10 sec
    CPU time for gen W [  49|[  32:  64]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  50|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  51|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  52|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  53|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  54|[ 192: 202]      0.45 sec, wall time      0.03 sec
    CPU time for gen W [  55|[   0:  32]      1.58 sec, wall time      0.10 sec
    CPU time for gen W [  56|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  57|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  58|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  59|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  60|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  61|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  62|[ 224: 256]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  63|[ 256: 276]      0.84 sec, wall time      0.05 sec
    CPU time for gen W [  64|[   0:  32]      2.18 sec, wall time      0.09 sec
    CPU time for gen W [  65|[  32:  64]      1.44 sec, wall time      0.08 sec
    CPU time for gen W [  66|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  67|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  68|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  69|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  70|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  71|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  72|[ 256: 286]      1.18 sec, wall time      0.07 sec
     build_V_W_local wall time:     5.855624 CPU time:    98.164446
Number of interpolation points = 17712, effective CISDF =  39.54
    CPU time for ISDF build    128.54 sec, wall time      7.01 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-40/46905475/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
