OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-40/46905098/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-40/46905098/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  40.00
       get_partition wall time:     0.165702 CPU time:     1.567313
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.205257 CPU time:     5.795038
In _build_buffer: ISDF Local size of buffer = 50.415 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  406
select_IP_local_atm: npt_found =  251
select_IP_local_atm: npt_found =  249
select_IP_local_atm: npt_found =  248
select_IP_local_atm: npt_found =  284
select_IP_local_atm: npt_found =  207
select_IP_local_atm: npt_found =  282
select_IP_local_atm: npt_found =  282
select_IP_local_step1 wall time:     0.402734 CPU time:    12.787031
 build_aoRg_possible wall time:     0.006345 CPU time:     0.191295
select_IP_local_step2 wall time:     0.000082 CPU time:     0.000087
select_IP_local_step3 wall time:     0.000769 CPU time:     0.031645
Memory usage for aoR  :     16.820 MB
Memory usage for aoRg :      7.578 MB
            build_IP wall time:     0.409931 CPU time:    13.010058
build_aux_basis_local wall time:     0.079230 CPU time:     2.505323
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      6.45 sec, wall time      0.22 sec
    CPU time for gen W [   2|[  32:  64]      2.24 sec, wall time      0.14 sec
    CPU time for gen W [   3|[  64:  96]      0.69 sec, wall time      0.04 sec
    CPU time for gen W [   4|[  96: 128]      1.50 sec, wall time      0.09 sec
    CPU time for gen W [   5|[ 128: 160]      1.48 sec, wall time      0.09 sec
    CPU time for gen W [   6|[ 160: 192]      1.51 sec, wall time      0.09 sec
    CPU time for gen W [   7|[ 192: 224]      1.48 sec, wall time      0.09 sec
    CPU time for gen W [   8|[ 224: 256]      1.50 sec, wall time      0.09 sec
    CPU time for gen W [   9|[ 256: 288]      1.47 sec, wall time      0.09 sec
    CPU time for gen W [  10|[ 288: 320]      1.48 sec, wall time      0.09 sec
    CPU time for gen W [  11|[ 320: 352]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  12|[ 352: 384]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  13|[ 384: 406]      0.97 sec, wall time      0.06 sec
    CPU time for gen W [  14|[   0:  32]      2.34 sec, wall time      0.10 sec
    CPU time for gen W [  15|[  32:  64]      1.45 sec, wall time      0.08 sec
    CPU time for gen W [  16|[  64:  96]      2.73 sec, wall time      0.17 sec
    CPU time for gen W [  17|[  96: 128]      0.03 sec, wall time      0.00 sec
    CPU time for gen W [  18|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  19|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  20|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  21|[ 224: 251]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [  22|[   0:  32]      1.52 sec, wall time      0.10 sec
    CPU time for gen W [  23|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  24|[  64:  96]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  25|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  26|[ 128: 160]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  27|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  28|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  29|[ 224: 249]      1.00 sec, wall time      0.06 sec
    CPU time for gen W [  30|[   0:  32]      1.70 sec, wall time      0.10 sec
    CPU time for gen W [  31|[  32:  64]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  32|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  33|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  34|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  35|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  36|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  37|[ 224: 248]      0.94 sec, wall time      0.06 sec
    CPU time for gen W [  38|[   0:  32]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  39|[  32:  64]      1.39 sec, wall time      0.09 sec
    CPU time for gen W [  40|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  41|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  42|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  43|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  44|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  45|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  46|[ 256: 284]      1.12 sec, wall time      0.07 sec
    CPU time for gen W [  47|[   0:  32]      1.53 sec, wall time      0.10 sec
    CPU time for gen W [  48|[  32:  64]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  49|[  64:  96]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  50|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  51|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  52|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  53|[ 192: 207]      0.59 sec, wall time      0.04 sec
    CPU time for gen W [  54|[   0:  32]      1.58 sec, wall time      0.10 sec
    CPU time for gen W [  55|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  56|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  57|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  58|[ 128: 160]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  59|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  60|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  61|[ 224: 256]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  62|[ 256: 282]      1.04 sec, wall time      0.06 sec
    CPU time for gen W [  63|[   0:  32]      1.30 sec, wall time      0.08 sec
    CPU time for gen W [  64|[  32:  64]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  65|[  64:  96]      1.30 sec, wall time      0.08 sec
    CPU time for gen W [  66|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  67|[ 128: 160]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  68|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  69|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  70|[ 224: 256]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  71|[ 256: 282]      1.04 sec, wall time      0.07 sec
     build_V_W_local wall time:     5.919238 CPU time:    98.555043
Number of interpolation points = 17672, effective CISDF =  39.45
    CPU time for ISDF build    128.30 sec, wall time      7.01 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-40/46905098/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
