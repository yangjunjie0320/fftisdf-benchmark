OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-120/46905478/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-120/46905478/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 = 120.00
       get_partition wall time:     0.163928 CPU time:     1.536249
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.188549 CPU time:     5.378908
In _build_buffer: ISDF Local size of buffer = 96.634 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  435
select_IP_local_atm: npt_found =  250
select_IP_local_atm: npt_found =  264
select_IP_local_atm: npt_found =  261
select_IP_local_atm: npt_found =  395
select_IP_local_atm: npt_found =  223
select_IP_local_atm: npt_found =  396
select_IP_local_atm: npt_found =  400
select_IP_local_step1 wall time:     0.560095 CPU time:    17.848091
 build_aoRg_possible wall time:     0.007409 CPU time:     0.224386
select_IP_local_step2 wall time:     0.000072 CPU time:     0.000077
select_IP_local_step3 wall time:     0.000906 CPU time:     0.030811
Memory usage for aoR  :     16.820 MB
Memory usage for aoRg :      8.996 MB
            build_IP wall time:     0.568482 CPU time:    18.103365
build_aux_basis_local wall time:     0.060639 CPU time:     1.942303
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      6.26 sec, wall time      0.20 sec
    CPU time for gen W [   2|[  32:  64]      2.33 sec, wall time      0.15 sec
    CPU time for gen W [   3|[  64:  96]      0.16 sec, wall time      0.01 sec
    CPU time for gen W [   4|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [   5|[ 128: 160]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [   6|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [   7|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [   8|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [   9|[ 256: 288]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  10|[ 288: 320]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  11|[ 320: 352]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  12|[ 352: 384]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  13|[ 384: 416]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  14|[ 416: 435]      0.82 sec, wall time      0.05 sec
    CPU time for gen W [  15|[   0:  32]      2.10 sec, wall time      0.10 sec
    CPU time for gen W [  16|[  32:  64]      1.43 sec, wall time      0.08 sec
    CPU time for gen W [  17|[  64:  96]      1.82 sec, wall time      0.11 sec
    CPU time for gen W [  18|[  96: 128]      0.75 sec, wall time      0.05 sec
    CPU time for gen W [  19|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  20|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  21|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  22|[ 224: 250]      1.15 sec, wall time      0.07 sec
    CPU time for gen W [  23|[   0:  32]      2.42 sec, wall time      0.10 sec
    CPU time for gen W [  24|[  32:  64]      1.50 sec, wall time      0.08 sec
    CPU time for gen W [  25|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  26|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  27|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  28|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  29|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  30|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  31|[ 256: 264]      0.37 sec, wall time      0.02 sec
    CPU time for gen W [  32|[   0:  32]      1.58 sec, wall time      0.10 sec
    CPU time for gen W [  33|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  34|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  35|[  96: 128]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  36|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  37|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  38|[ 192: 224]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  39|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  40|[ 256: 261]      0.27 sec, wall time      0.02 sec
    CPU time for gen W [  41|[   0:  32]      1.58 sec, wall time      0.10 sec
    CPU time for gen W [  42|[  32:  64]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  43|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  44|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  45|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  46|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  47|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  48|[ 224: 256]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  49|[ 256: 288]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  50|[ 288: 320]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  51|[ 320: 352]      1.36 sec, wall time      0.09 sec
    CPU time for gen W [  52|[ 352: 384]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  53|[ 384: 395]      0.46 sec, wall time      0.03 sec
    CPU time for gen W [  54|[   0:  32]      1.53 sec, wall time      0.10 sec
    CPU time for gen W [  55|[  32:  64]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  56|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  57|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  58|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  59|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  60|[ 192: 223]      1.24 sec, wall time      0.08 sec
    CPU time for gen W [  61|[   0:  32]      1.58 sec, wall time      0.10 sec
    CPU time for gen W [  62|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  63|[  64:  96]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  64|[  96: 128]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  65|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  66|[ 160: 192]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  67|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  68|[ 224: 256]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  69|[ 256: 288]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  70|[ 288: 320]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  71|[ 320: 352]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  72|[ 352: 384]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  73|[ 384: 396]      0.48 sec, wall time      0.03 sec
    CPU time for gen W [  74|[   0:  32]      1.56 sec, wall time      0.10 sec
    CPU time for gen W [  75|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  76|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  77|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  78|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  79|[ 160: 192]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  80|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  81|[ 224: 256]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  82|[ 256: 288]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  83|[ 288: 320]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  84|[ 320: 352]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  85|[ 352: 384]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  86|[ 384: 400]      0.66 sec, wall time      0.04 sec
     build_V_W_local wall time:     6.865934 CPU time:   114.783949
Number of interpolation points = 20992, effective CISDF =  46.86
    CPU time for ISDF build    148.96 sec, wall time      8.09 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-120/46905478/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
