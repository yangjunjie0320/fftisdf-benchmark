OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46905094/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46905094/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  20.00
       get_partition wall time:     0.164159 CPU time:     1.656291
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.190210 CPU time:     5.394194
In _build_buffer: ISDF Local size of buffer = 36.610 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  337
select_IP_local_atm: npt_found =  237
select_IP_local_atm: npt_found =  222
select_IP_local_atm: npt_found =  221
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  152
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  169
select_IP_local_step1 wall time:     0.349606 CPU time:    10.758140
 build_aoRg_possible wall time:     0.004516 CPU time:     0.128174
select_IP_local_step2 wall time:     0.000067 CPU time:     0.000071
select_IP_local_step3 wall time:     0.000563 CPU time:     0.031486
Memory usage for aoR  :     16.820 MB
Memory usage for aoRg :      5.756 MB
            build_IP wall time:     0.354753 CPU time:    10.917870
build_aux_basis_local wall time:     0.043748 CPU time:     1.395844
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      5.82 sec, wall time      0.21 sec
    CPU time for gen W [   2|[  32:  64]      1.05 sec, wall time      0.07 sec
    CPU time for gen W [   3|[  64:  96]      2.50 sec, wall time      0.18 sec
    CPU time for gen W [   4|[  96: 128]      0.03 sec, wall time      0.00 sec
    CPU time for gen W [   5|[ 128: 160]      1.17 sec, wall time      0.08 sec
    CPU time for gen W [   6|[ 160: 192]      1.08 sec, wall time      0.08 sec
    CPU time for gen W [   7|[ 192: 224]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [   8|[ 224: 256]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [   9|[ 256: 288]      1.08 sec, wall time      0.08 sec
    CPU time for gen W [  10|[ 288: 320]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  11|[ 320: 337]      0.58 sec, wall time      0.04 sec
    CPU time for gen W [  12|[   0:  32]      1.47 sec, wall time      0.10 sec
    CPU time for gen W [  13|[  32:  64]      1.14 sec, wall time      0.08 sec
    CPU time for gen W [  14|[  64:  96]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  15|[  96: 128]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [  16|[ 128: 160]      1.48 sec, wall time      0.11 sec
    CPU time for gen W [  17|[ 160: 192]      0.71 sec, wall time      0.05 sec
    CPU time for gen W [  18|[ 192: 224]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  19|[ 224: 237]      0.45 sec, wall time      0.03 sec
    CPU time for gen W [  20|[   0:  32]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  21|[  32:  64]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  22|[  64:  96]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [  23|[  96: 128]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  24|[ 128: 160]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  25|[ 160: 192]      1.08 sec, wall time      0.08 sec
    CPU time for gen W [  26|[ 192: 222]      1.03 sec, wall time      0.07 sec
    CPU time for gen W [  27|[   0:  32]      1.37 sec, wall time      0.10 sec
    CPU time for gen W [  28|[  32:  64]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [  29|[  64:  96]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [  30|[  96: 128]      1.08 sec, wall time      0.08 sec
    CPU time for gen W [  31|[ 128: 160]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  32|[ 160: 192]      1.08 sec, wall time      0.08 sec
    CPU time for gen W [  33|[ 192: 221]      0.99 sec, wall time      0.07 sec
    CPU time for gen W [  34|[   0:  32]      1.33 sec, wall time      0.10 sec
    CPU time for gen W [  35|[  32:  64]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  36|[  64:  96]      1.11 sec, wall time      0.08 sec
    CPU time for gen W [  37|[  96: 128]      1.09 sec, wall time      0.08 sec
    CPU time for gen W [  38|[ 128: 160]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  39|[ 160: 169]      0.34 sec, wall time      0.02 sec
    CPU time for gen W [  40|[   0:  32]      1.34 sec, wall time      0.10 sec
    CPU time for gen W [  41|[  32:  64]      1.16 sec, wall time      0.08 sec
    CPU time for gen W [  42|[  64:  96]      1.11 sec, wall time      0.08 sec
    CPU time for gen W [  43|[  96: 128]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  44|[ 128: 152]      0.82 sec, wall time      0.06 sec
    CPU time for gen W [  45|[   0:  32]      1.29 sec, wall time      0.10 sec
    CPU time for gen W [  46|[  32:  64]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  47|[  64:  96]      1.12 sec, wall time      0.08 sec
    CPU time for gen W [  48|[  96: 128]      1.11 sec, wall time      0.08 sec
    CPU time for gen W [  49|[ 128: 160]      1.12 sec, wall time      0.08 sec
    CPU time for gen W [  50|[ 160: 169]      0.34 sec, wall time      0.02 sec
    CPU time for gen W [  51|[   0:  32]      1.34 sec, wall time      0.10 sec
    CPU time for gen W [  52|[  32:  64]      1.12 sec, wall time      0.08 sec
    CPU time for gen W [  53|[  64:  96]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  54|[  96: 128]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  55|[ 128: 160]      1.10 sec, wall time      0.08 sec
    CPU time for gen W [  56|[ 160: 169]      0.34 sec, wall time      0.02 sec
     build_V_W_local wall time:     4.410454 CPU time:    64.871914
Number of interpolation points = 13408, effective CISDF =  29.93
    CPU time for ISDF build     90.10 sec, wall time      5.37 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-20/46905094/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
