OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46905096/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46905096/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  30.00
       get_partition wall time:     0.164590 CPU time:     1.417076
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    729
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    576
len of partition[  12] =    648
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    648
len of partition[  16] =    729
len of partition[  17] =    576
len of partition[  18] =    576
len of partition[  19] =    576
len of partition[  20] =    648
len of partition[  21] =    512
len of partition[  22] =    648
len of partition[  23] =    648
len of partition[  24] =    729
len of partition[  25] =    576
len of partition[  26] =    576
len of partition[  27] =    576
len of partition[  28] =    648
len of partition[  29] =    512
len of partition[  30] =    648
len of partition[  31] =    648
len of partition[  32] =    729
len of partition[  33] =    576
len of partition[  34] =    576
len of partition[  35] =    576
len of partition[  36] =    648
len of partition[  37] =    512
len of partition[  38] =    648
len of partition[  39] =    648
len of partition[  40] =    729
len of partition[  41] =    576
len of partition[  42] =    576
len of partition[  43] =    576
len of partition[  44] =    648
len of partition[  45] =    512
len of partition[  46] =    648
len of partition[  47] =    648
len of partition[  48] =    729
len of partition[  49] =    576
len of partition[  50] =    576
len of partition[  51] =    576
len of partition[  52] =    648
len of partition[  53] =    512
len of partition[  54] =    648
len of partition[  55] =    648
len of partition[  56] =    729
len of partition[  57] =    576
len of partition[  58] =    576
len of partition[  59] =    576
len of partition[  60] =    648
len of partition[  61] =    512
len of partition[  62] =    648
len of partition[  63] =    648
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.202079 CPU time:     5.686559
In _build_buffer: ISDF Local size of buffer = 43.045 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  370
select_IP_local_atm: npt_found =  238
select_IP_local_atm: npt_found =  235
select_IP_local_atm: npt_found =  235
select_IP_local_atm: npt_found =  224
select_IP_local_atm: npt_found =  188
select_IP_local_atm: npt_found =  225
select_IP_local_atm: npt_found =  225
select_IP_local_step1 wall time:     0.360764 CPU time:    11.471102
 build_aoRg_possible wall time:     0.005457 CPU time:     0.159744
select_IP_local_step2 wall time:     0.000071 CPU time:     0.000076
select_IP_local_step3 wall time:     0.000668 CPU time:     0.031517
Memory usage for aoR  :     16.820 MB
Memory usage for aoRg :      6.658 MB
            build_IP wall time:     0.366961 CPU time:    11.662438
build_aux_basis_local wall time:     0.061512 CPU time:     1.933277
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      4.49 sec, wall time      0.19 sec
    CPU time for gen W [   2|[  32:  64]      1.20 sec, wall time      0.08 sec
    CPU time for gen W [   3|[  64:  96]      2.04 sec, wall time      0.13 sec
    CPU time for gen W [   4|[  96: 128]      0.73 sec, wall time      0.05 sec
    CPU time for gen W [   5|[ 128: 160]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [   6|[ 160: 192]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [   7|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [   8|[ 224: 256]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [   9|[ 256: 288]      1.39 sec, wall time      0.09 sec
    CPU time for gen W [  10|[ 288: 320]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  11|[ 320: 352]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  12|[ 352: 370]      0.72 sec, wall time      0.04 sec
    CPU time for gen W [  13|[   0:  32]      1.69 sec, wall time      0.09 sec
    CPU time for gen W [  14|[  32:  64]      1.39 sec, wall time      0.08 sec
    CPU time for gen W [  15|[  64:  96]      1.29 sec, wall time      0.08 sec
    CPU time for gen W [  16|[  96: 128]      2.36 sec, wall time      0.15 sec
    CPU time for gen W [  17|[ 128: 160]      0.32 sec, wall time      0.02 sec
    CPU time for gen W [  18|[ 160: 192]      1.31 sec, wall time      0.08 sec
    CPU time for gen W [  19|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  20|[ 224: 238]      0.57 sec, wall time      0.04 sec
    CPU time for gen W [  21|[   0:  32]      1.56 sec, wall time      0.10 sec
    CPU time for gen W [  22|[  32:  64]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  23|[  64:  96]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  24|[  96: 128]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  25|[ 128: 160]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  26|[ 160: 192]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  27|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  28|[ 224: 235]      0.46 sec, wall time      0.03 sec
    CPU time for gen W [  29|[   0:  32]      1.53 sec, wall time      0.10 sec
    CPU time for gen W [  30|[  32:  64]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  31|[  64:  96]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  32|[  96: 128]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  33|[ 128: 160]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  34|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  35|[ 192: 224]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  36|[ 224: 235]      0.45 sec, wall time      0.03 sec
    CPU time for gen W [  37|[   0:  32]      1.52 sec, wall time      0.10 sec
    CPU time for gen W [  38|[  32:  64]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  39|[  64:  96]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  40|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  41|[ 128: 160]      1.36 sec, wall time      0.09 sec
    CPU time for gen W [  42|[ 160: 192]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  43|[ 192: 224]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  44|[   0:  32]      1.52 sec, wall time      0.10 sec
    CPU time for gen W [  45|[  32:  64]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  46|[  64:  96]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  47|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  48|[ 128: 160]      1.25 sec, wall time      0.08 sec
    CPU time for gen W [  49|[ 160: 188]      1.09 sec, wall time      0.07 sec
    CPU time for gen W [  50|[   0:  32]      1.48 sec, wall time      0.10 sec
    CPU time for gen W [  51|[  32:  64]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  52|[  64:  96]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  53|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  54|[ 128: 160]      1.28 sec, wall time      0.08 sec
    CPU time for gen W [  55|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  56|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  57|[ 224: 225]      0.08 sec, wall time      0.00 sec
    CPU time for gen W [  58|[   0:  32]      1.52 sec, wall time      0.09 sec
    CPU time for gen W [  59|[  32:  64]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  60|[  64:  96]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  61|[  96: 128]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  62|[ 128: 160]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  63|[ 160: 192]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  64|[ 192: 224]      1.26 sec, wall time      0.08 sec
    CPU time for gen W [  65|[ 224: 225]      0.08 sec, wall time      0.01 sec
     build_V_W_local wall time:     5.086346 CPU time:    82.967873
Number of interpolation points = 15520, effective CISDF =  34.64
    CPU time for ISDF build    111.29 sec, wall time      6.13 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-30/46905096/isdf.chk
/home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_tools_Tsym.py:329: ComplexWarning: Casting complex values to real discards the imaginary part
  operator_k[loc1] = CAST_TO_COMPLEX(REAL(op_1))
