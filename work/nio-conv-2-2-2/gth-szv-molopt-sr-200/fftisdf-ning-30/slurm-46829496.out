OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46829496/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46829496/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  30.00
       get_partition wall time:     2.835829 CPU time:     4.788585
len of partition[   0] =  19683
len of partition[   1] =  18252
len of partition[   2] =  18252
len of partition[   3] =  18252
len of partition[   4] =  18954
len of partition[   5] =  17576
len of partition[   6] =  18954
len of partition[   7] =  18954
len of partition[   8] =  19683
len of partition[   9] =  18252
len of partition[  10] =  18252
len of partition[  11] =  18252
len of partition[  12] =  18954
len of partition[  13] =  17576
len of partition[  14] =  18954
len of partition[  15] =  18954
len of partition[  16] =  19683
len of partition[  17] =  18252
len of partition[  18] =  18252
len of partition[  19] =  18252
len of partition[  20] =  18954
len of partition[  21] =  17576
len of partition[  22] =  18954
len of partition[  23] =  18954
len of partition[  24] =  19683
len of partition[  25] =  18252
len of partition[  26] =  18252
len of partition[  27] =  18252
len of partition[  28] =  18954
len of partition[  29] =  17576
len of partition[  30] =  18954
len of partition[  31] =  18954
len of partition[  32] =  19683
len of partition[  33] =  18252
len of partition[  34] =  18252
len of partition[  35] =  18252
len of partition[  36] =  18954
len of partition[  37] =  17576
len of partition[  38] =  18954
len of partition[  39] =  18954
len of partition[  40] =  19683
len of partition[  41] =  18252
len of partition[  42] =  18252
len of partition[  43] =  18252
len of partition[  44] =  18954
len of partition[  45] =  17576
len of partition[  46] =  18954
len of partition[  47] =  18954
len of partition[  48] =  19683
len of partition[  49] =  18252
len of partition[  50] =  18252
len of partition[  51] =  18252
len of partition[  52] =  18954
len of partition[  53] =  17576
len of partition[  54] =  18954
len of partition[  55] =  18954
len of partition[  56] =  19683
len of partition[  57] =  18252
len of partition[  58] =  18252
len of partition[  59] =  18252
len of partition[  60] =  18954
len of partition[  61] =  17576
len of partition[  62] =  18954
len of partition[  63] =  18954
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     1.573050 CPU time:    49.721097
In _build_buffer: ISDF Local size of buffer = 324.225 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =    8
select_IP_local_atm: npt_found =  480
select_IP_local_atm: npt_found =  303
select_IP_local_atm: npt_found =  304
select_IP_local_atm: npt_found =  311
select_IP_local_atm: npt_found =  225
select_IP_local_atm: npt_found =  209
select_IP_local_atm: npt_found =  225
select_IP_local_atm: npt_found =  225
select_IP_local_step1 wall time:     1.939503 CPU time:    61.675218
 build_aoRg_possible wall time:     0.016455 CPU time:     0.511102
select_IP_local_step2 wall time:     0.000106 CPU time:     0.000115
select_IP_local_step3 wall time:     0.000798 CPU time:     0.031723
Memory usage for aoR  :    508.884 MB
Memory usage for aoRg :      7.827 MB
            build_IP wall time:     1.956863 CPU time:    62.218158
build_aux_basis_local wall time:     0.908739 CPU time:    27.359174
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]     10.82 sec, wall time      2.68 sec
    CPU time for gen W [   2|[  32:  64]      7.85 sec, wall time      2.71 sec
    CPU time for gen W [   3|[  64:  96]      5.77 sec, wall time      2.56 sec
    CPU time for gen W [   4|[  96: 128]      6.81 sec, wall time      2.63 sec
    CPU time for gen W [   5|[ 128: 160]      6.78 sec, wall time      2.63 sec
    CPU time for gen W [   6|[ 160: 192]      7.22 sec, wall time      2.65 sec
    CPU time for gen W [   7|[ 192: 224]      6.90 sec, wall time      2.64 sec
    CPU time for gen W [   8|[ 224: 256]      6.85 sec, wall time      2.63 sec
    CPU time for gen W [   9|[ 256: 288]      6.84 sec, wall time      2.64 sec
    CPU time for gen W [  10|[ 288: 320]      6.89 sec, wall time      2.66 sec
    CPU time for gen W [  11|[ 320: 352]      6.86 sec, wall time      2.63 sec
    CPU time for gen W [  12|[ 352: 384]      6.89 sec, wall time      2.63 sec
    CPU time for gen W [  13|[ 384: 416]      6.74 sec, wall time      2.63 sec
    CPU time for gen W [  14|[ 416: 448]      6.84 sec, wall time      2.63 sec
    CPU time for gen W [  15|[ 448: 480]      6.89 sec, wall time      2.64 sec
    CPU time for gen W [  16|[   0:  32]      7.42 sec, wall time      3.23 sec
    CPU time for gen W [  17|[  32:  64]      7.14 sec, wall time      2.69 sec
    CPU time for gen W [  18|[  64:  96]      7.71 sec, wall time      2.76 sec
    CPU time for gen W [  19|[  96: 128]      6.48 sec, wall time      2.67 sec
    CPU time for gen W [  20|[ 128: 160]      6.95 sec, wall time      2.68 sec
    CPU time for gen W [  21|[ 160: 192]      6.95 sec, wall time      2.68 sec
    CPU time for gen W [  22|[ 192: 224]      6.99 sec, wall time      2.67 sec
    CPU time for gen W [  23|[ 224: 256]      6.98 sec, wall time      2.68 sec
    CPU time for gen W [  24|[ 256: 288]      6.91 sec, wall time      2.67 sec
    CPU time for gen W [  25|[ 288: 303]      4.77 sec, wall time      1.30 sec
    CPU time for gen W [  26|[   0:  32]      7.91 sec, wall time      3.36 sec
    CPU time for gen W [  27|[  32:  64]      7.04 sec, wall time      2.70 sec
    CPU time for gen W [  28|[  64:  96]      7.05 sec, wall time      2.70 sec
    CPU time for gen W [  29|[  96: 128]      7.07 sec, wall time      2.71 sec
    CPU time for gen W [  30|[ 128: 160]      7.06 sec, wall time      2.69 sec
    CPU time for gen W [  31|[ 160: 192]      7.11 sec, wall time      2.71 sec
    CPU time for gen W [  32|[ 192: 224]      7.11 sec, wall time      2.72 sec
    CPU time for gen W [  33|[ 224: 256]      7.05 sec, wall time      2.69 sec
    CPU time for gen W [  34|[ 256: 288]      7.05 sec, wall time      2.70 sec
    CPU time for gen W [  35|[ 288: 304]      4.93 sec, wall time      1.39 sec
    CPU time for gen W [  36|[   0:  32]      7.86 sec, wall time      3.21 sec
    CPU time for gen W [  37|[  32:  64]      7.03 sec, wall time      2.68 sec
    CPU time for gen W [  38|[  64:  96]      7.01 sec, wall time      2.68 sec
    CPU time for gen W [  39|[  96: 128]      7.09 sec, wall time      2.70 sec
    CPU time for gen W [  40|[ 128: 160]      7.06 sec, wall time      2.70 sec
    CPU time for gen W [  41|[ 160: 192]      6.95 sec, wall time      2.68 sec
    CPU time for gen W [  42|[ 192: 224]      7.03 sec, wall time      2.70 sec
    CPU time for gen W [  43|[ 224: 256]      7.02 sec, wall time      2.68 sec
    CPU time for gen W [  44|[ 256: 288]      7.01 sec, wall time      2.69 sec
    CPU time for gen W [  45|[ 288: 311]      6.00 sec, wall time      1.96 sec
    CPU time for gen W [  46|[   0:  32]      7.86 sec, wall time      3.19 sec
    CPU time for gen W [  47|[  32:  64]      7.01 sec, wall time      2.67 sec
    CPU time for gen W [  48|[  64:  96]      7.00 sec, wall time      2.68 sec
    CPU time for gen W [  49|[  96: 128]      7.01 sec, wall time      2.68 sec
    CPU time for gen W [  50|[ 128: 160]      7.05 sec, wall time      2.68 sec
    CPU time for gen W [  51|[ 160: 192]      6.97 sec, wall time      2.67 sec
    CPU time for gen W [  52|[ 192: 224]      7.02 sec, wall time      2.68 sec
    CPU time for gen W [  53|[ 224: 225]      2.78 sec, wall time      0.13 sec
    CPU time for gen W [  54|[   0:  32]      9.04 sec, wall time      2.69 sec
    CPU time for gen W [  55|[  32:  64]      7.08 sec, wall time      2.68 sec
    CPU time for gen W [  56|[  64:  96]      6.95 sec, wall time      2.67 sec
    CPU time for gen W [  57|[  96: 128]      6.94 sec, wall time      2.67 sec
    CPU time for gen W [  58|[ 128: 160]      6.95 sec, wall time      2.67 sec
    CPU time for gen W [  59|[ 160: 192]      7.06 sec, wall time      2.69 sec
    CPU time for gen W [  60|[ 192: 209]      5.02 sec, wall time      1.46 sec
    CPU time for gen W [  61|[   0:  32]      7.96 sec, wall time      3.21 sec
    CPU time for gen W [  62|[  32:  64]      7.03 sec, wall time      2.68 sec
    CPU time for gen W [  63|[  64:  96]      6.99 sec, wall time      2.68 sec
    CPU time for gen W [  64|[  96: 128]      7.03 sec, wall time      2.69 sec
    CPU time for gen W [  65|[ 128: 160]      7.08 sec, wall time      2.69 sec
    CPU time for gen W [  66|[ 160: 192]      7.01 sec, wall time      2.68 sec
    CPU time for gen W [  67|[ 192: 224]      7.02 sec, wall time      2.68 sec
    CPU time for gen W [  68|[ 224: 225]      2.82 sec, wall time      0.13 sec
    CPU time for gen W [  69|[   0:  32]      9.04 sec, wall time      2.70 sec
    CPU time for gen W [  70|[  32:  64]      7.15 sec, wall time      2.69 sec
    CPU time for gen W [  71|[  64:  96]      7.08 sec, wall time      2.70 sec
    CPU time for gen W [  72|[  96: 128]      7.02 sec, wall time      2.68 sec
    CPU time for gen W [  73|[ 128: 160]      7.00 sec, wall time      2.68 sec
    CPU time for gen W [  74|[ 160: 192]      7.09 sec, wall time      2.70 sec
    CPU time for gen W [  75|[ 192: 224]      6.98 sec, wall time      2.68 sec
    CPU time for gen W [  76|[ 224: 225]      2.72 sec, wall time      0.12 sec
     build_V_W_local wall time:   193.972597 CPU time:   523.808942
Number of interpolation points = 18256, effective CISDF =  40.75
    CPU time for ISDF build    676.86 sec, wall time    201.78 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-30/46829496/isdf.chk
Warning: In _1e_operator_k2gamma max abs of imag_part =  1.1744650271598705e-05 0 0 1
Warning: In _1e_operator_k2gamma max abs of imag_part =  1.1737690807678813e-05 0 1 0
Warning: In _1e_operator_k2gamma max abs of imag_part =  1.1744650271598705e-05 0 0 1
Warning: In _1e_operator_k2gamma max abs of imag_part =  1.1737690807678813e-05 0 1 0
