OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-40-15-15-15/46836083/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-40-15-15-15/46836083/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [95 95 41] (370025 PWs)
len(kpts) = 64
    kpts = [[0.         0.         0.        ]
 [0.         0.         0.26135187]
 [0.         0.         0.52270374]
 [0.         0.         0.78405561]
 [0.         0.10779511 0.        ]
 [0.         0.10779511 0.26135187]
 [0.         0.10779511 0.52270374]
 [0.         0.10779511 0.78405561]
 [0.         0.21559021 0.        ]
 [0.         0.21559021 0.26135187]
 [0.         0.21559021 0.52270374]
 [0.         0.21559021 0.78405561]
 [0.         0.32338532 0.        ]
 [0.         0.32338532 0.26135187]
 [0.         0.32338532 0.52270374]
 [0.         0.32338532 0.78405561]
 [0.10779511 0.         0.        ]
 [0.10779511 0.         0.26135187]
 [0.10779511 0.         0.52270374]
 [0.10779511 0.         0.78405561]
 [0.10779511 0.10779511 0.        ]
 [0.10779511 0.10779511 0.26135187]
 [0.10779511 0.10779511 0.52270374]
 [0.10779511 0.10779511 0.78405561]
 [0.10779511 0.21559021 0.        ]
 [0.10779511 0.21559021 0.26135187]
 [0.10779511 0.21559021 0.52270374]
 [0.10779511 0.21559021 0.78405561]
 [0.10779511 0.32338532 0.        ]
 [0.10779511 0.32338532 0.26135187]
 [0.10779511 0.32338532 0.52270374]
 [0.10779511 0.32338532 0.78405561]
 [0.21559021 0.         0.        ]
 [0.21559021 0.         0.26135187]
 [0.21559021 0.         0.52270374]
 [0.21559021 0.         0.78405561]
 [0.21559021 0.10779511 0.        ]
 [0.21559021 0.10779511 0.26135187]
 [0.21559021 0.10779511 0.52270374]
 [0.21559021 0.10779511 0.78405561]
 [0.21559021 0.21559021 0.        ]
 [0.21559021 0.21559021 0.26135187]
 [0.21559021 0.21559021 0.52270374]
 [0.21559021 0.21559021 0.78405561]
 [0.21559021 0.32338532 0.        ]
 [0.21559021 0.32338532 0.26135187]
 [0.21559021 0.32338532 0.52270374]
 [0.21559021 0.32338532 0.78405561]
 [0.32338532 0.         0.        ]
 [0.32338532 0.         0.26135187]
 [0.32338532 0.         0.52270374]
 [0.32338532 0.         0.78405561]
 [0.32338532 0.10779511 0.        ]
 [0.32338532 0.10779511 0.26135187]
 [0.32338532 0.10779511 0.52270374]
 [0.32338532 0.10779511 0.78405561]
 [0.32338532 0.21559021 0.        ]
 [0.32338532 0.21559021 0.26135187]
 [0.32338532 0.21559021 0.52270374]
 [0.32338532 0.21559021 0.78405561]
 [0.32338532 0.32338532 0.        ]
 [0.32338532 0.32338532 0.26135187]
 [0.32338532 0.32338532 0.52270374]
 [0.32338532 0.32338532 0.78405561]]
Overwritten attributes  tol kmesh c0 m0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [95 95 41]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 10 Eh.
Recommended ke_cutoff/mesh are 995.52 / [209 209  87].

kmesh = [4 4 4]
Input parent grid mesh = [15, 15, 15], ke_cutoff =  95.62
Final parent grid size = [35 35 15]

Selecting interpolation points
nkpts = 64, nao = 88, c0 =  40.00
Parent grid mesh = [35 35 15], grid size = 18375
    CPU time for select interpolation points   1464.62 sec, wall time     93.91 sec
Pivoted Cholesky rank = 4499, nip = 3520, estimated error = 3.61e-04
Number of interpolation points = 3520, effective CISDF =  40.00
    CPU time for building left-hand side    111.93 sec, wall time     11.11 sec

kpt = 64, ngrid = 370025, nao = 88
ngrid = 370025, blksize = 6444, nip = 3520
required disk space = 1333 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-40-15-15-15/46836083/m22rsc55
blksize = 6444, memory for aoR_loop = 23227 MB
finished aoR_loop[       0:    6444]
finished aoR_loop[    6444:   12888]
finished aoR_loop[   12888:   19332]
finished aoR_loop[   19332:   25776]
finished aoR_loop[   25776:   32220]
finished aoR_loop[   32220:   38664]
finished aoR_loop[   38664:   45108]
finished aoR_loop[   45108:   51552]
finished aoR_loop[   51552:   57996]
finished aoR_loop[   57996:   64440]
finished aoR_loop[   64440:   70884]
finished aoR_loop[   70884:   77328]
finished aoR_loop[   77328:   83772]
finished aoR_loop[   83772:   90216]
finished aoR_loop[   90216:   96660]
finished aoR_loop[   96660:  103104]
finished aoR_loop[  103104:  109548]
finished aoR_loop[  109548:  115992]
finished aoR_loop[  115992:  122436]
finished aoR_loop[  122436:  128880]
finished aoR_loop[  128880:  135324]
finished aoR_loop[  135324:  141768]
finished aoR_loop[  141768:  148212]
finished aoR_loop[  148212:  154656]
finished aoR_loop[  154656:  161100]
finished aoR_loop[  161100:  167544]
finished aoR_loop[  167544:  173988]
finished aoR_loop[  173988:  180432]
finished aoR_loop[  180432:  186876]
finished aoR_loop[  186876:  193320]
finished aoR_loop[  193320:  199764]
finished aoR_loop[  199764:  206208]
finished aoR_loop[  206208:  212652]
finished aoR_loop[  212652:  219096]
finished aoR_loop[  219096:  225540]
finished aoR_loop[  225540:  231984]
finished aoR_loop[  231984:  238428]
finished aoR_loop[  238428:  244872]
finished aoR_loop[  244872:  251316]
finished aoR_loop[  251316:  257760]
finished aoR_loop[  257760:  264204]
finished aoR_loop[  264204:  270648]
finished aoR_loop[  270648:  277092]
finished aoR_loop[  277092:  283536]
finished aoR_loop[  283536:  289980]
finished aoR_loop[  289980:  296424]
finished aoR_loop[  296424:  302868]
finished aoR_loop[  302868:  309312]
finished aoR_loop[  309312:  315756]
finished aoR_loop[  315756:  322200]
finished aoR_loop[  322200:  328644]
finished aoR_loop[  328644:  335088]
finished aoR_loop[  335088:  341532]
finished aoR_loop[  341532:  347976]
finished aoR_loop[  347976:  354420]
finished aoR_loop[  354420:  360864]
finished aoR_loop[  360864:  367308]
finished aoR_loop[  367308:  370025]
    CPU time for building right-hand side  12883.86 sec, wall time   2887.31 sec
w[  0], rank = 3516 / 3520
    CPU time for w[  0]   6312.86 sec, wall time    296.20 sec
w[  1], rank = 3516 / 3520
    CPU time for w[  1]   6416.10 sec, wall time    300.64 sec
w[  2], rank = 3516 / 3520
    CPU time for w[  2]   6275.33 sec, wall time    281.78 sec
w[  3], rank = 3516 / 3520
    CPU time for w[  3]   6175.19 sec, wall time    302.19 sec
w[  4], rank = 3516 / 3520
    CPU time for w[  4]   6592.66 sec, wall time    305.72 sec
w[  5], rank = 3516 / 3520
    CPU time for w[  5]   6686.83 sec, wall time    307.61 sec
w[  6], rank = 3517 / 3520
    CPU time for w[  6]   7888.23 sec, wall time    338.10 sec
w[  7], rank = 3516 / 3520
    CPU time for w[  7]   7855.31 sec, wall time    348.19 sec
w[  8], rank = 3516 / 3520
    CPU time for w[  8]   7493.50 sec, wall time    324.05 sec
w[  9], rank = 3516 / 3520
    CPU time for w[  9]   6724.75 sec, wall time    307.39 sec
w[ 10], rank = 3516 / 3520
    CPU time for w[ 10]   6765.60 sec, wall time    302.94 sec
w[ 11], rank = 3516 / 3520
    CPU time for w[ 11]   6255.77 sec, wall time    310.27 sec
w[ 12], rank = 3516 / 3520
    CPU time for w[ 12]   6726.37 sec, wall time    305.18 sec
w[ 13], rank = 3516 / 3520
    CPU time for w[ 13]   9088.33 sec, wall time    401.97 sec
w[ 14], rank = 3517 / 3520
    CPU time for w[ 14]   6749.39 sec, wall time    311.57 sec
w[ 15], rank = 3516 / 3520
    CPU time for w[ 15]   6338.90 sec, wall time    303.33 sec
w[ 16], rank = 3516 / 3520
    CPU time for w[ 16]   6670.62 sec, wall time    300.28 sec
w[ 17], rank = 3516 / 3520
    CPU time for w[ 17]   6780.42 sec, wall time    316.82 sec
w[ 18], rank = 3516 / 3520
    CPU time for w[ 18]   6619.30 sec, wall time    304.73 sec
w[ 19], rank = 3516 / 3520
    CPU time for w[ 19]   6508.47 sec, wall time    302.91 sec
w[ 20], rank = 3516 / 3520
    CPU time for w[ 20]   6290.84 sec, wall time    288.24 sec
w[ 21], rank = 3516 / 3520
    CPU time for w[ 21]   5966.05 sec, wall time    287.20 sec
w[ 22], rank = 3516 / 3520
    CPU time for w[ 22]   7062.17 sec, wall time    319.99 sec
w[ 23], rank = 3516 / 3520
    CPU time for w[ 23]   5998.88 sec, wall time    292.42 sec
w[ 24], rank = 3516 / 3520
    CPU time for w[ 24]  10590.67 sec, wall time    431.99 sec
w[ 25], rank = 3516 / 3520
    CPU time for w[ 25]   7883.51 sec, wall time    346.41 sec
w[ 26], rank = 3517 / 3520
    CPU time for w[ 26]   6802.91 sec, wall time    316.91 sec
w[ 27], rank = 3516 / 3520
    CPU time for w[ 27]   6799.10 sec, wall time    311.81 sec
w[ 28], rank = 3516 / 3520
    CPU time for w[ 28]  10573.80 sec, wall time    434.02 sec
w[ 29], rank = 3516 / 3520
    CPU time for w[ 29]   7927.24 sec, wall time    360.11 sec
w[ 30], rank = 3516 / 3520
    CPU time for w[ 30]   7321.51 sec, wall time    331.19 sec
w[ 31], rank = 3516 / 3520
    CPU time for w[ 31]   8066.33 sec, wall time    401.90 sec
w[ 32], rank = 3516 / 3520
    CPU time for w[ 32]  14006.30 sec, wall time    671.01 sec
w[ 33], rank = 3516 / 3520
    CPU time for w[ 33]  11248.30 sec, wall time    527.50 sec
w[ 34], rank = 3516 / 3520
    CPU time for w[ 34]  10244.51 sec, wall time    455.03 sec
w[ 35], rank = 3516 / 3520
    CPU time for w[ 35]   5851.40 sec, wall time    282.83 sec
w[ 36], rank = 3517 / 3520
    CPU time for w[ 36]   6469.17 sec, wall time    291.69 sec
w[ 37], rank = 3516 / 3520
    CPU time for w[ 37]   9201.99 sec, wall time    392.83 sec
w[ 38], rank = 3516 / 3520
    CPU time for w[ 38]   6861.19 sec, wall time    328.07 sec
w[ 39], rank = 3516 / 3520
    CPU time for w[ 39]  11524.73 sec, wall time    550.17 sec
w[ 40], rank = 3516 / 3520
    CPU time for w[ 40]  12570.46 sec, wall time    611.13 sec
w[ 41], rank = 3516 / 3520
    CPU time for w[ 41]  11181.99 sec, wall time    501.22 sec
w[ 42], rank = 3516 / 3520
    CPU time for w[ 42]   8989.71 sec, wall time    391.88 sec
w[ 43], rank = 3516 / 3520
    CPU time for w[ 43]   6551.95 sec, wall time    330.11 sec
w[ 44], rank = 3517 / 3520
    CPU time for w[ 44]   6788.32 sec, wall time    335.43 sec
w[ 45], rank = 3516 / 3520
    CPU time for w[ 45]   6295.09 sec, wall time    322.64 sec
w[ 46], rank = 3516 / 3520
    CPU time for w[ 46]   6352.21 sec, wall time    301.67 sec
w[ 47], rank = 3516 / 3520
    CPU time for w[ 47]   5825.73 sec, wall time    301.15 sec
w[ 48], rank = 3516 / 3520
    CPU time for w[ 48]   6699.68 sec, wall time    334.19 sec
w[ 49], rank = 3516 / 3520
    CPU time for w[ 49]   7352.30 sec, wall time    350.88 sec
w[ 50], rank = 3516 / 3520
    CPU time for w[ 50]   6398.06 sec, wall time    320.31 sec
w[ 51], rank = 3516 / 3520
    CPU time for w[ 51]   7088.82 sec, wall time    349.20 sec
w[ 52], rank = 3516 / 3520
    CPU time for w[ 52]   6934.02 sec, wall time    349.04 sec
w[ 53], rank = 3516 / 3520
    CPU time for w[ 53]   6439.59 sec, wall time    318.33 sec
w[ 54], rank = 3516 / 3520
    CPU time for w[ 54]   7912.76 sec, wall time    365.54 sec
w[ 55], rank = 3516 / 3520
    CPU time for w[ 55]   6749.39 sec, wall time    320.25 sec
w[ 56], rank = 3516 / 3520
    CPU time for w[ 56]   7621.02 sec, wall time    348.61 sec
w[ 57], rank = 3516 / 3520
    CPU time for w[ 57]   7917.56 sec, wall time    348.51 sec
w[ 58], rank = 3517 / 3520
    CPU time for w[ 58]   9539.90 sec, wall time    421.28 sec
w[ 59], rank = 3516 / 3520
    CPU time for w[ 59]  11665.42 sec, wall time    565.32 sec
w[ 60], rank = 3516 / 3520
    CPU time for w[ 60]  13574.08 sec, wall time    665.54 sec
w[ 61], rank = 3516 / 3520
    CPU time for w[ 61]  11310.50 sec, wall time    488.36 sec
w[ 62], rank = 3516 / 3520
    CPU time for w[ 62]  11448.77 sec, wall time    539.50 sec
w[ 63], rank = 3516 / 3520
    CPU time for w[ 63]   8647.13 sec, wall time    397.60 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-40-15-15-15/46836083/tmp.chk
    CPU time for building ISDF 519951.20 sec, wall time  26484.52 sec
