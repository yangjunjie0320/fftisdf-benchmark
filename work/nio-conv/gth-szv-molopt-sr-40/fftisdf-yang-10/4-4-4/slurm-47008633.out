OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/nio-conv/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008633/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/nio-conv/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008633/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [25 25 25] (15625 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  tol c0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [25 25 25]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1.2e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [9, 9, 9], ke_cutoff =  18.02
Final parent grid size = [9 9 9]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  10.00
Parent grid mesh = [9 9 9], grid size = 729

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    232.10 sec, wall time      3.65 sec
Pivoted Cholesky rank = 729, nip = 560, estimated error = 1.18e-02
Number of interpolation points = 560, effective CISDF =  10.00
    CPU time for building left-hand side     32.22 sec, wall time      0.51 sec

kpt = 64, ngrid = 15625, nao = 56
ngrid = 15625, blksize = 85591, nip = 560
required disk space = 8 GB
finished creating fswp: /central/scratch/yangjunjie/work/nio-conv/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4/47008633/tyges1pg
blksize = 85591, memory for aoR_loop = 49081 MB
finished aoR_loop[       0:   15625]
    CPU time for building right-hand side    121.51 sec, wall time     10.20 sec
w[  0], rank =  560 /  560
    CPU time for w[  0]    236.26 sec, wall time      3.93 sec
w[  1], rank =  560 /  560
    CPU time for w[  1]     27.91 sec, wall time      0.51 sec
w[  2], rank =  560 /  560
    CPU time for w[  2]     26.37 sec, wall time      0.45 sec
w[  3], rank =  560 /  560
    CPU time for w[  3]    264.75 sec, wall time      4.29 sec
w[  4], rank =  560 /  560
    CPU time for w[  4]     26.33 sec, wall time      0.51 sec
w[  5], rank =  560 /  560
    CPU time for w[  5]     26.04 sec, wall time      0.44 sec
w[  6], rank =  560 /  560
    CPU time for w[  6]     25.85 sec, wall time      0.44 sec
w[  7], rank =  560 /  560
    CPU time for w[  7]     25.95 sec, wall time      0.43 sec
w[  8], rank =  560 /  560
    CPU time for w[  8]     26.02 sec, wall time      0.44 sec
w[  9], rank =  560 /  560
    CPU time for w[  9]     26.55 sec, wall time      0.47 sec
w[ 10], rank =  560 /  560
    CPU time for w[ 10]     31.24 sec, wall time      0.54 sec
w[ 11], rank =  560 /  560
    CPU time for w[ 11]     25.87 sec, wall time      0.42 sec
w[ 12], rank =  560 /  560
    CPU time for w[ 12]     26.45 sec, wall time      0.44 sec
w[ 13], rank =  560 /  560
    CPU time for w[ 13]     26.45 sec, wall time      0.45 sec
w[ 14], rank =  560 /  560
    CPU time for w[ 14]     26.32 sec, wall time      0.43 sec
w[ 15], rank =  560 /  560
    CPU time for w[ 15]     26.89 sec, wall time      0.51 sec
w[ 16], rank =  560 /  560
    CPU time for w[ 16]     36.26 sec, wall time      0.65 sec
w[ 17], rank =  560 /  560
    CPU time for w[ 17]     26.11 sec, wall time      0.44 sec
w[ 18], rank =  560 /  560
    CPU time for w[ 18]     26.36 sec, wall time      0.47 sec
w[ 19], rank =  560 /  560
    CPU time for w[ 19]   1960.38 sec, wall time     31.23 sec
w[ 20], rank =  560 /  560
    CPU time for w[ 20]     26.61 sec, wall time      0.47 sec
w[ 21], rank =  560 /  560
    CPU time for w[ 21]     27.00 sec, wall time      0.44 sec
w[ 22], rank =  560 /  560
    CPU time for w[ 22]     27.85 sec, wall time      0.49 sec
w[ 23], rank =  560 /  560
    CPU time for w[ 23]     26.70 sec, wall time      0.50 sec
w[ 24], rank =  560 /  560
    CPU time for w[ 24]     26.40 sec, wall time      0.44 sec
w[ 25], rank =  560 /  560
    CPU time for w[ 25]    641.24 sec, wall time     10.46 sec
w[ 26], rank =  560 /  560
    CPU time for w[ 26]     25.77 sec, wall time      0.43 sec
w[ 27], rank =  560 /  560
    CPU time for w[ 27]     25.94 sec, wall time      0.43 sec
w[ 28], rank =  560 /  560
    CPU time for w[ 28]     25.92 sec, wall time      0.43 sec
w[ 29], rank =  560 /  560
    CPU time for w[ 29]     94.32 sec, wall time      1.61 sec
w[ 30], rank =  560 /  560
    CPU time for w[ 30]     25.92 sec, wall time      0.44 sec
w[ 31], rank =  560 /  560
    CPU time for w[ 31]     26.05 sec, wall time      0.43 sec
w[ 32], rank =  560 /  560
    CPU time for w[ 32]     26.74 sec, wall time      0.48 sec
w[ 33], rank =  560 /  560
    CPU time for w[ 33]     26.89 sec, wall time      0.47 sec
w[ 34], rank =  560 /  560
    CPU time for w[ 34]     27.06 sec, wall time      0.48 sec
w[ 35], rank =  560 /  560
    CPU time for w[ 35]     27.96 sec, wall time      0.54 sec
w[ 36], rank =  560 /  560
    CPU time for w[ 36]    406.05 sec, wall time      6.65 sec
w[ 37], rank =  560 /  560
    CPU time for w[ 37]     27.15 sec, wall time      0.48 sec
w[ 38], rank =  560 /  560
    CPU time for w[ 38]     26.47 sec, wall time      0.48 sec
w[ 39], rank =  560 /  560
    CPU time for w[ 39]     25.96 sec, wall time      0.44 sec
w[ 40], rank =  560 /  560
    CPU time for w[ 40]     26.19 sec, wall time      0.45 sec
w[ 41], rank =  560 /  560
    CPU time for w[ 41]     26.36 sec, wall time      0.45 sec
w[ 42], rank =  560 /  560
    CPU time for w[ 42]    353.49 sec, wall time      5.98 sec
w[ 43], rank =  560 /  560
    CPU time for w[ 43]     26.15 sec, wall time      0.44 sec
w[ 44], rank =  560 /  560
    CPU time for w[ 44]     26.23 sec, wall time      0.45 sec
w[ 45], rank =  560 /  560
    CPU time for w[ 45]     26.84 sec, wall time      0.46 sec
w[ 46], rank =  560 /  560
    CPU time for w[ 46]     26.51 sec, wall time      0.45 sec
w[ 47], rank =  560 /  560
    CPU time for w[ 47]     26.44 sec, wall time      0.50 sec
w[ 48], rank =  560 /  560
    CPU time for w[ 48]     26.45 sec, wall time      0.48 sec
w[ 49], rank =  560 /  560
    CPU time for w[ 49]     25.94 sec, wall time      0.42 sec
w[ 50], rank =  560 /  560
    CPU time for w[ 50]     25.68 sec, wall time      0.42 sec
w[ 51], rank =  560 /  560
    CPU time for w[ 51]     25.70 sec, wall time      0.43 sec
w[ 52], rank =  560 /  560
    CPU time for w[ 52]     26.19 sec, wall time      0.44 sec
w[ 53], rank =  560 /  560
    CPU time for w[ 53]     26.74 sec, wall time      0.47 sec
w[ 54], rank =  560 /  560
    CPU time for w[ 54]     26.95 sec, wall time      0.50 sec
w[ 55], rank =  560 /  560
    CPU time for w[ 55]     26.16 sec, wall time      0.42 sec
w[ 56], rank =  560 /  560
    CPU time for w[ 56]     26.28 sec, wall time      0.43 sec
w[ 57], rank =  560 /  560
    CPU time for w[ 57]     27.25 sec, wall time      0.47 sec
w[ 58], rank =  560 /  560
    CPU time for w[ 58]     27.17 sec, wall time      0.51 sec
w[ 59], rank =  560 /  560
    CPU time for w[ 59]     27.26 sec, wall time      0.47 sec
w[ 60], rank =  560 /  560
    CPU time for w[ 60]    285.14 sec, wall time      4.72 sec
w[ 61], rank =  560 /  560
    CPU time for w[ 61]     25.28 sec, wall time      0.42 sec
w[ 62], rank =  560 /  560
    CPU time for w[ 62]    106.95 sec, wall time      1.93 sec
w[ 63], rank =  560 /  560
    CPU time for w[ 63]     25.53 sec, wall time      0.42 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/nio-conv/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008633/tmp.chk
    CPU time for building ISDF   6218.02 sec, wall time    111.28 sec
