OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/nio-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47013091/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/nio-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47013091/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [25 25 25] (15625 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [25 25 25]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 1.2e+02 Eh.
Recommended ke_cutoff/mesh are 1364.21 / [133 133 133].

kmesh = [4 4 4]
Input parent grid mesh = [9, 9, 9], ke_cutoff =  18.02
Final parent grid size = [9 9 9]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  10.00
Parent grid mesh = [9 9 9], grid size = 729

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    362.28 sec, wall time      6.06 sec
Pivoted Cholesky rank = 729, nip = 560, estimated error = 1.01e-02
Number of interpolation points = 560, effective CISDF =  10.00
    CPU time for building left-hand side     41.79 sec, wall time      0.68 sec

kpt = 64, ngrid = 15625, nao = 56
ngrid = 15625, blksize = 85594, nip = 560
required disk space = 8 GB
finished creating fswp: /central/scratch/yangjunjie/work/nio-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4/47013091/q2fqug3z
blksize = 85594, memory for aoR_loop = 49083 MB
finished aoR_loop[       0:   15625]
    CPU time for building right-hand side    173.89 sec, wall time     11.13 sec
w[  0], rank =  560 /  560
    CPU time for w[  0]    238.21 sec, wall time      3.89 sec
w[  1], rank =  560 /  560
    CPU time for w[  1]    152.13 sec, wall time      2.45 sec
w[  2], rank =  560 /  560
    CPU time for w[  2]     33.95 sec, wall time      0.61 sec
w[  3], rank =  560 /  560
    CPU time for w[  3]    177.35 sec, wall time      2.92 sec
w[  4], rank =  560 /  560
    CPU time for w[  4]     33.14 sec, wall time      0.60 sec
w[  5], rank =  560 /  560
    CPU time for w[  5]    120.10 sec, wall time      1.99 sec
w[  6], rank =  560 /  560
    CPU time for w[  6]     26.70 sec, wall time      0.49 sec
w[  7], rank =  560 /  560
    CPU time for w[  7]     27.08 sec, wall time      0.46 sec
w[  8], rank =  560 /  560
    CPU time for w[  8]     31.62 sec, wall time      0.51 sec
w[  9], rank =  560 /  560
    CPU time for w[  9]     33.45 sec, wall time      0.61 sec
w[ 10], rank =  560 /  560
    CPU time for w[ 10]     33.94 sec, wall time      0.64 sec
w[ 11], rank =  560 /  560
    CPU time for w[ 11]    750.53 sec, wall time     12.71 sec
w[ 12], rank =  560 /  560
    CPU time for w[ 12]    506.81 sec, wall time      8.33 sec
w[ 13], rank =  560 /  560
    CPU time for w[ 13]   2023.86 sec, wall time     32.65 sec
w[ 14], rank =  560 /  560
    CPU time for w[ 14]    105.59 sec, wall time      1.75 sec
w[ 15], rank =  560 /  560
    CPU time for w[ 15]   2147.50 sec, wall time     34.57 sec
w[ 16], rank =  560 /  560
    CPU time for w[ 16]    151.44 sec, wall time      2.49 sec
w[ 17], rank =  560 /  560
    CPU time for w[ 17]     26.95 sec, wall time      0.47 sec
w[ 18], rank =  560 /  560
    CPU time for w[ 18]     27.16 sec, wall time      0.45 sec
w[ 19], rank =  560 /  560
    CPU time for w[ 19]     26.84 sec, wall time      0.47 sec
w[ 20], rank =  560 /  560
    CPU time for w[ 20]     26.65 sec, wall time      0.44 sec
w[ 21], rank =  560 /  560
    CPU time for w[ 21]    145.33 sec, wall time      2.38 sec
w[ 22], rank =  560 /  560
    CPU time for w[ 22]     26.99 sec, wall time      0.46 sec
w[ 23], rank =  560 /  560
    CPU time for w[ 23]     26.42 sec, wall time      0.47 sec
w[ 24], rank =  560 /  560
    CPU time for w[ 24]   1547.39 sec, wall time     24.82 sec
w[ 25], rank =  560 /  560
    CPU time for w[ 25]     38.06 sec, wall time      0.67 sec
w[ 26], rank =  560 /  560
    CPU time for w[ 26]   2145.80 sec, wall time     34.99 sec
w[ 27], rank =  560 /  560
    CPU time for w[ 27]     75.39 sec, wall time      1.29 sec
w[ 28], rank =  560 /  560
    CPU time for w[ 28]   1874.23 sec, wall time     30.00 sec
w[ 29], rank =  560 /  560
    CPU time for w[ 29]    264.06 sec, wall time      4.27 sec
w[ 30], rank =  560 /  560
    CPU time for w[ 30]     35.04 sec, wall time      0.65 sec
w[ 31], rank =  560 /  560
    CPU time for w[ 31]    251.12 sec, wall time      4.11 sec
w[ 32], rank =  560 /  560
    CPU time for w[ 32]   1284.40 sec, wall time     20.53 sec
w[ 33], rank =  560 /  560
    CPU time for w[ 33]   1025.84 sec, wall time     16.53 sec
w[ 34], rank =  560 /  560
    CPU time for w[ 34]    387.80 sec, wall time      6.53 sec
w[ 35], rank =  560 /  560
    CPU time for w[ 35]     26.77 sec, wall time      0.45 sec
w[ 36], rank =  560 /  560
    CPU time for w[ 36]     28.12 sec, wall time      0.51 sec
w[ 37], rank =  560 /  560
    CPU time for w[ 37]   1696.38 sec, wall time     27.26 sec
w[ 38], rank =  560 /  560
    CPU time for w[ 38]    282.42 sec, wall time      4.60 sec
w[ 39], rank =  560 /  560
    CPU time for w[ 39]     27.88 sec, wall time      0.48 sec
w[ 40], rank =  560 /  560
    CPU time for w[ 40]     26.99 sec, wall time      0.48 sec
w[ 41], rank =  560 /  560
    CPU time for w[ 41]   1079.60 sec, wall time     17.50 sec
w[ 42], rank =  560 /  560
    CPU time for w[ 42]     29.54 sec, wall time      0.53 sec
w[ 43], rank =  560 /  560
    CPU time for w[ 43]     31.02 sec, wall time      0.60 sec
w[ 44], rank =  560 /  560
    CPU time for w[ 44]     29.74 sec, wall time      0.55 sec
w[ 45], rank =  560 /  560
    CPU time for w[ 45]    952.77 sec, wall time     15.23 sec
w[ 46], rank =  560 /  560
    CPU time for w[ 46]     26.86 sec, wall time      0.45 sec
w[ 47], rank =  560 /  560
    CPU time for w[ 47]    193.06 sec, wall time      3.16 sec
w[ 48], rank =  560 /  560
    CPU time for w[ 48]    286.85 sec, wall time      4.95 sec
w[ 49], rank =  560 /  560
    CPU time for w[ 49]    143.67 sec, wall time      2.35 sec
w[ 50], rank =  560 /  560
    CPU time for w[ 50]    216.13 sec, wall time      3.53 sec
w[ 51], rank =  560 /  560
    CPU time for w[ 51]     31.38 sec, wall time      0.53 sec
w[ 52], rank =  560 /  560
    CPU time for w[ 52]     26.80 sec, wall time      0.48 sec
w[ 53], rank =  560 /  560
    CPU time for w[ 53]     26.79 sec, wall time      0.46 sec
w[ 54], rank =  560 /  560
    CPU time for w[ 54]     26.72 sec, wall time      0.45 sec
w[ 55], rank =  560 /  560
    CPU time for w[ 55]     26.87 sec, wall time      0.46 sec
w[ 56], rank =  560 /  560
    CPU time for w[ 56]     26.60 sec, wall time      0.47 sec
w[ 57], rank =  560 /  560
    CPU time for w[ 57]     30.24 sec, wall time      0.52 sec
w[ 58], rank =  560 /  560
    CPU time for w[ 58]   2159.29 sec, wall time     34.58 sec
w[ 59], rank =  560 /  560
    CPU time for w[ 59]    163.78 sec, wall time      2.75 sec
w[ 60], rank =  560 /  560
    CPU time for w[ 60]     27.08 sec, wall time      0.45 sec
w[ 61], rank =  560 /  560
    CPU time for w[ 61]     27.04 sec, wall time      0.50 sec
w[ 62], rank =  560 /  560
    CPU time for w[ 62]   2014.27 sec, wall time     32.76 sec
w[ 63], rank =  560 /  560
    CPU time for w[ 63]    118.10 sec, wall time      1.98 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/nio-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47013091/tmp.chk
    CPU time for building ISDF  26202.04 sec, wall time    434.90 sec
