OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-200/fftisdf-yang-10-21-21-21/4-4-4//46975580/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-200/fftisdf-yang-10-21-21-21/4-4-4//46975580/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh m0 c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.016 Eh.
Recommended ke_cutoff/mesh are 529.952 / [71 71 71].

kmesh = [4 4 4]
Input parent grid mesh = [21, 21, 21], ke_cutoff = 155.69
Final parent grid size = [21 21 21]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  10.00
Parent grid mesh = [21 21 21], grid size = 9261
    CPU time for select interpolation points    986.42 sec, wall time     24.72 sec
Pivoted Cholesky rank = 2149, nip = 320, estimated error = 1.51e-01
Number of interpolation points = 320, effective CISDF =  10.00
    CPU time for building left-hand side     16.80 sec, wall time      0.32 sec

kpt = 64, ngrid = 91125, nao = 32
ngrid = 91125, blksize = 149881, nip = 320
required disk space = 29 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-szv-molopt-sr-200/fftisdf-yang-10-21-21-21/4-4-4/46975580/x8g87dgu
blksize = 149881, memory for aoR_loop = 49113 MB
finished aoR_loop[       0:   91125]
    CPU time for building right-hand side    286.80 sec, wall time     32.53 sec
w[  0], rank =  320 /  320
    CPU time for w[  0]     85.10 sec, wall time      2.37 sec
w[  1], rank =  320 /  320
    CPU time for w[  1]     79.02 sec, wall time      2.56 sec
w[  2], rank =  320 /  320
    CPU time for w[  2]     80.50 sec, wall time      2.43 sec
w[  3], rank =  320 /  320
    CPU time for w[  3]     77.50 sec, wall time      2.40 sec
w[  4], rank =  320 /  320
    CPU time for w[  4]     82.41 sec, wall time      2.60 sec
w[  5], rank =  320 /  320
    CPU time for w[  5]     75.56 sec, wall time      2.22 sec
w[  6], rank =  320 /  320
    CPU time for w[  6]     76.47 sec, wall time      2.22 sec
w[  7], rank =  320 /  320
    CPU time for w[  7]     76.15 sec, wall time      2.25 sec
w[  8], rank =  320 /  320
    CPU time for w[  8]     76.51 sec, wall time      2.12 sec
w[  9], rank =  320 /  320
    CPU time for w[  9]     75.69 sec, wall time      2.18 sec
w[ 10], rank =  320 /  320
    CPU time for w[ 10]     78.07 sec, wall time      2.15 sec
w[ 11], rank =  320 /  320
    CPU time for w[ 11]     81.51 sec, wall time      2.43 sec
w[ 12], rank =  320 /  320
    CPU time for w[ 12]     77.34 sec, wall time      2.46 sec
w[ 13], rank =  320 /  320
    CPU time for w[ 13]     76.45 sec, wall time      2.21 sec
w[ 14], rank =  320 /  320
    CPU time for w[ 14]     75.38 sec, wall time      2.20 sec
w[ 15], rank =  320 /  320
    CPU time for w[ 15]     78.67 sec, wall time      2.59 sec
w[ 16], rank =  320 /  320
    CPU time for w[ 16]    130.08 sec, wall time      3.10 sec
w[ 17], rank =  320 /  320
    CPU time for w[ 17]     77.55 sec, wall time      2.55 sec
w[ 18], rank =  320 /  320
    CPU time for w[ 18]     75.46 sec, wall time      2.17 sec
w[ 19], rank =  320 /  320
    CPU time for w[ 19]     76.64 sec, wall time      2.29 sec
w[ 20], rank =  320 /  320
    CPU time for w[ 20]     81.03 sec, wall time      2.60 sec
w[ 21], rank =  320 /  320
    CPU time for w[ 21]     91.43 sec, wall time      2.58 sec
w[ 22], rank =  320 /  320
    CPU time for w[ 22]     76.67 sec, wall time      2.41 sec
w[ 23], rank =  320 /  320
    CPU time for w[ 23]     75.86 sec, wall time      2.25 sec
w[ 24], rank =  320 /  320
    CPU time for w[ 24]     75.76 sec, wall time      2.18 sec
w[ 25], rank =  320 /  320
    CPU time for w[ 25]     75.30 sec, wall time      2.21 sec
w[ 26], rank =  320 /  320
    CPU time for w[ 26]     76.69 sec, wall time      2.26 sec
w[ 27], rank =  320 /  320
    CPU time for w[ 27]     82.47 sec, wall time      2.60 sec
w[ 28], rank =  320 /  320
    CPU time for w[ 28]    146.37 sec, wall time      3.41 sec
w[ 29], rank =  320 /  320
    CPU time for w[ 29]    223.18 sec, wall time      4.64 sec
w[ 30], rank =  320 /  320
    CPU time for w[ 30]     76.76 sec, wall time      2.27 sec
w[ 31], rank =  320 /  320
    CPU time for w[ 31]     75.90 sec, wall time      2.26 sec
w[ 32], rank =  320 /  320
    CPU time for w[ 32]     75.75 sec, wall time      2.11 sec
w[ 33], rank =  320 /  320
    CPU time for w[ 33]     75.84 sec, wall time      2.20 sec
w[ 34], rank =  320 /  320
    CPU time for w[ 34]     83.98 sec, wall time      2.26 sec
w[ 35], rank =  320 /  320
    CPU time for w[ 35]     76.55 sec, wall time      2.22 sec
w[ 36], rank =  320 /  320
    CPU time for w[ 36]     77.50 sec, wall time      2.26 sec
w[ 37], rank =  320 /  320
    CPU time for w[ 37]     77.06 sec, wall time      2.33 sec
w[ 38], rank =  320 /  320
    CPU time for w[ 38]     86.40 sec, wall time      2.43 sec
w[ 39], rank =  320 /  320
    CPU time for w[ 39]     77.36 sec, wall time      2.33 sec
w[ 40], rank =  320 /  320
    CPU time for w[ 40]     85.29 sec, wall time      2.31 sec
w[ 41], rank =  320 /  320
    CPU time for w[ 41]     85.94 sec, wall time      2.41 sec
w[ 42], rank =  320 /  320
    CPU time for w[ 42]     76.91 sec, wall time      2.16 sec
w[ 43], rank =  320 /  320
    CPU time for w[ 43]     75.54 sec, wall time      2.23 sec
w[ 44], rank =  320 /  320
    CPU time for w[ 44]     77.14 sec, wall time      2.26 sec
w[ 45], rank =  320 /  320
    CPU time for w[ 45]     75.59 sec, wall time      2.24 sec
w[ 46], rank =  320 /  320
    CPU time for w[ 46]     78.40 sec, wall time      2.27 sec
w[ 47], rank =  320 /  320
    CPU time for w[ 47]    217.21 sec, wall time      4.48 sec
w[ 48], rank =  320 /  320
    CPU time for w[ 48]     75.46 sec, wall time      2.19 sec
w[ 49], rank =  320 /  320
    CPU time for w[ 49]     76.61 sec, wall time      2.27 sec
w[ 50], rank =  320 /  320
    CPU time for w[ 50]     77.41 sec, wall time      2.24 sec
w[ 51], rank =  320 /  320
    CPU time for w[ 51]     76.27 sec, wall time      2.24 sec
w[ 52], rank =  320 /  320
    CPU time for w[ 52]     76.70 sec, wall time      2.22 sec
w[ 53], rank =  320 /  320
    CPU time for w[ 53]     75.14 sec, wall time      2.20 sec
w[ 54], rank =  320 /  320
    CPU time for w[ 54]    243.00 sec, wall time      4.92 sec
w[ 55], rank =  320 /  320
    CPU time for w[ 55]     76.64 sec, wall time      2.26 sec
w[ 56], rank =  320 /  320
    CPU time for w[ 56]     76.27 sec, wall time      2.19 sec
w[ 57], rank =  320 /  320
    CPU time for w[ 57]     74.30 sec, wall time      2.18 sec
w[ 58], rank =  320 /  320
    CPU time for w[ 58]     76.87 sec, wall time      2.22 sec
w[ 59], rank =  320 /  320
    CPU time for w[ 59]     76.92 sec, wall time      2.26 sec
w[ 60], rank =  320 /  320
    CPU time for w[ 60]     76.62 sec, wall time      2.22 sec
w[ 61], rank =  320 /  320
    CPU time for w[ 61]     76.24 sec, wall time      2.23 sec
w[ 62], rank =  320 /  320
    CPU time for w[ 62]     76.73 sec, wall time      2.23 sec
w[ 63], rank =  320 /  320
    CPU time for w[ 63]     83.88 sec, wall time      2.42 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-200/fftisdf-yang-10-21-21-21/4-4-4//46975580/tmp.chk
    CPU time for building ISDF   6863.90 sec, wall time    214.14 sec
