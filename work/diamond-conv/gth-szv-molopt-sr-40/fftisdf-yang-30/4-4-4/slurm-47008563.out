OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-40/fftisdf-yang-30/4-4-4//47008563/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-40/fftisdf-yang-30/4-4-4//47008563/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  tol c0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 529.952 / [71 71 71].

kmesh = [4 4 4]
Input parent grid mesh = [10, 10, 10], ke_cutoff =  24.91
Final parent grid size = [9 9 9]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  30.00
Parent grid mesh = [9 9 9], grid size = 729

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    252.41 sec, wall time      3.96 sec
Pivoted Cholesky rank = 729, nip = 729, estimated error = 5.43e-04
Number of interpolation points = 729, effective CISDF =  22.78
    CPU time for building left-hand side     39.19 sec, wall time      0.70 sec

kpt = 64, ngrid = 9261, nao = 32
ngrid = 9261, blksize = 65713, nip = 729
required disk space = 6 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-szv-molopt-sr-40/fftisdf-yang-30/4-4-4/47008563/0h8seewf
blksize = 65713, memory for aoR_loop = 49054 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side    104.60 sec, wall time      7.68 sec
w[  0], rank =  720 /  729
    CPU time for w[  0]     36.88 sec, wall time      0.65 sec
w[  1], rank =  719 /  729
    CPU time for w[  1]     37.01 sec, wall time      0.61 sec
w[  2], rank =  719 /  729
    CPU time for w[  2]   1588.02 sec, wall time     25.90 sec
w[  3], rank =  719 /  729
    CPU time for w[  3]     34.26 sec, wall time      0.55 sec
w[  4], rank =  719 /  729
    CPU time for w[  4]     35.99 sec, wall time      0.61 sec
w[  5], rank =  719 /  729
    CPU time for w[  5]     35.52 sec, wall time      0.58 sec
w[  6], rank =  718 /  729
    CPU time for w[  6]    422.11 sec, wall time      6.93 sec
w[  7], rank =  719 /  729
    CPU time for w[  7]     37.80 sec, wall time      0.61 sec
w[  8], rank =  719 /  729
    CPU time for w[  8]     31.34 sec, wall time      0.52 sec
w[  9], rank =  718 /  729
    CPU time for w[  9]     32.40 sec, wall time      0.52 sec
w[ 10], rank =  718 /  729
    CPU time for w[ 10]     29.05 sec, wall time      0.46 sec
w[ 11], rank =  718 /  729
    CPU time for w[ 11]     30.77 sec, wall time      0.48 sec
w[ 12], rank =  719 /  729
    CPU time for w[ 12]     30.55 sec, wall time      0.49 sec
w[ 13], rank =  719 /  729
    CPU time for w[ 13]     30.46 sec, wall time      0.48 sec
w[ 14], rank =  718 /  729
    CPU time for w[ 14]     30.85 sec, wall time      0.48 sec
w[ 15], rank =  719 /  729
    CPU time for w[ 15]     32.84 sec, wall time      0.52 sec
w[ 16], rank =  719 /  729
    CPU time for w[ 16]     30.66 sec, wall time      0.48 sec
w[ 17], rank =  719 /  729
    CPU time for w[ 17]     31.08 sec, wall time      0.49 sec
w[ 18], rank =  718 /  729
    CPU time for w[ 18]     30.66 sec, wall time      0.48 sec
w[ 19], rank =  719 /  729
    CPU time for w[ 19]     31.12 sec, wall time      0.49 sec
w[ 20], rank =  719 /  729
    CPU time for w[ 20]     38.50 sec, wall time      0.62 sec
w[ 21], rank =  718 /  729
    CPU time for w[ 21]     37.46 sec, wall time      0.62 sec
w[ 22], rank =  718 /  729
    CPU time for w[ 22]     36.61 sec, wall time      0.61 sec
w[ 23], rank =  718 /  729
    CPU time for w[ 23]     35.76 sec, wall time      0.58 sec
w[ 24], rank =  718 /  729
    CPU time for w[ 24]    931.37 sec, wall time     15.07 sec
w[ 25], rank =  718 /  729
    CPU time for w[ 25]     30.76 sec, wall time      0.51 sec
w[ 26], rank =  717 /  729
    CPU time for w[ 26]     31.19 sec, wall time      0.50 sec
w[ 27], rank =  718 /  729
    CPU time for w[ 27]    180.68 sec, wall time      2.96 sec
w[ 28], rank =  719 /  729
    CPU time for w[ 28]     36.96 sec, wall time      0.61 sec
w[ 29], rank =  718 /  729
    CPU time for w[ 29]     35.84 sec, wall time      0.58 sec
w[ 30], rank =  718 /  729
    CPU time for w[ 30]    105.97 sec, wall time      1.77 sec
w[ 31], rank =  718 /  729
    CPU time for w[ 31]     42.37 sec, wall time      0.70 sec
w[ 32], rank =  719 /  729
    CPU time for w[ 32]     32.57 sec, wall time      0.52 sec
w[ 33], rank =  718 /  729
    CPU time for w[ 33]     32.88 sec, wall time      0.54 sec
w[ 34], rank =  718 /  729
    CPU time for w[ 34]     32.79 sec, wall time      0.52 sec
w[ 35], rank =  718 /  729
    CPU time for w[ 35]     32.97 sec, wall time      0.54 sec
w[ 36], rank =  718 /  729
    CPU time for w[ 36]     32.77 sec, wall time      0.56 sec
w[ 37], rank =  718 /  729
    CPU time for w[ 37]     32.64 sec, wall time      0.53 sec
w[ 38], rank =  717 /  729
    CPU time for w[ 38]     37.72 sec, wall time      0.63 sec
w[ 39], rank =  718 /  729
    CPU time for w[ 39]     30.15 sec, wall time      0.47 sec
w[ 40], rank =  718 /  729
    CPU time for w[ 40]     30.97 sec, wall time      0.49 sec
w[ 41], rank =  717 /  729
    CPU time for w[ 41]     31.56 sec, wall time      0.50 sec
w[ 42], rank =  717 /  729
    CPU time for w[ 42]     78.53 sec, wall time      1.24 sec
w[ 43], rank =  717 /  729
    CPU time for w[ 43]     30.10 sec, wall time      0.47 sec
w[ 44], rank =  718 /  729
    CPU time for w[ 44]     31.35 sec, wall time      0.49 sec
w[ 45], rank =  718 /  729
    CPU time for w[ 45]     33.45 sec, wall time      0.53 sec
w[ 46], rank =  717 /  729
    CPU time for w[ 46]     41.81 sec, wall time      0.66 sec
w[ 47], rank =  718 /  729
    CPU time for w[ 47]     28.93 sec, wall time      0.47 sec
w[ 48], rank =  719 /  729
    CPU time for w[ 48]     30.52 sec, wall time      0.48 sec
w[ 49], rank =  719 /  729
    CPU time for w[ 49]     31.66 sec, wall time      0.50 sec
w[ 50], rank =  718 /  729
    CPU time for w[ 50]     31.60 sec, wall time      0.51 sec
w[ 51], rank =  719 /  729
    CPU time for w[ 51]     31.70 sec, wall time      0.50 sec
w[ 52], rank =  719 /  729
    CPU time for w[ 52]     31.55 sec, wall time      0.49 sec
w[ 53], rank =  718 /  729
    CPU time for w[ 53]     32.99 sec, wall time      0.53 sec
w[ 54], rank =  718 /  729
    CPU time for w[ 54]     31.22 sec, wall time      0.49 sec
w[ 55], rank =  718 /  729
    CPU time for w[ 55]     32.88 sec, wall time      0.52 sec
w[ 56], rank =  718 /  729
    CPU time for w[ 56]     31.00 sec, wall time      0.49 sec
w[ 57], rank =  718 /  729
    CPU time for w[ 57]     31.27 sec, wall time      0.50 sec
w[ 58], rank =  717 /  729
    CPU time for w[ 58]     31.07 sec, wall time      0.49 sec
w[ 59], rank =  718 /  729
    CPU time for w[ 59]     31.44 sec, wall time      0.50 sec
w[ 60], rank =  719 /  729
    CPU time for w[ 60]    245.19 sec, wall time      4.01 sec
w[ 61], rank =  718 /  729
    CPU time for w[ 61]     37.04 sec, wall time      0.62 sec
w[ 62], rank =  718 /  729
    CPU time for w[ 62]    603.43 sec, wall time     10.12 sec
w[ 63], rank =  718 /  729
    CPU time for w[ 63]     30.22 sec, wall time      0.51 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-conv/gth-szv-molopt-sr-40/fftisdf-yang-30/4-4-4//47008563/tmp.chk
    CPU time for building ISDF   6417.19 sec, wall time    110.86 sec
