OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47012899/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47012899/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  c0 kmesh tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 635.334 / [79 79 79].

kmesh = [4 4 4]
Input parent grid mesh = [7, 7, 7], ke_cutoff =  14.01
Final parent grid size = [7 7 7]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  10.00
Parent grid mesh = [7 7 7], grid size = 343

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points     30.17 sec, wall time      0.47 sec
Pivoted Cholesky rank = 343, nip = 320, estimated error = 2.26e-02
Number of interpolation points = 320, effective CISDF =  10.00
    CPU time for building left-hand side     18.13 sec, wall time      0.33 sec

kpt = 64, ngrid = 9261, nao = 32
ngrid = 9261, blksize = 149880, nip = 320
required disk space = 3 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4/47012899/whz45v5w
blksize = 149880, memory for aoR_loop = 49112 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side     66.93 sec, wall time      3.56 sec
w[  0], rank =  320 /  320
    CPU time for w[  0]     21.68 sec, wall time      0.35 sec
w[  1], rank =  320 /  320
    CPU time for w[  1]     11.77 sec, wall time      0.19 sec
w[  2], rank =  320 /  320
    CPU time for w[  2]     12.09 sec, wall time      0.19 sec
w[  3], rank =  320 /  320
    CPU time for w[  3]     12.42 sec, wall time      0.20 sec
w[  4], rank =  320 /  320
    CPU time for w[  4]     12.82 sec, wall time      0.20 sec
w[  5], rank =  320 /  320
    CPU time for w[  5]     12.76 sec, wall time      0.20 sec
w[  6], rank =  320 /  320
    CPU time for w[  6]     12.82 sec, wall time      0.20 sec
w[  7], rank =  320 /  320
    CPU time for w[  7]     12.82 sec, wall time      0.20 sec
w[  8], rank =  320 /  320
    CPU time for w[  8]     12.69 sec, wall time      0.20 sec
w[  9], rank =  320 /  320
    CPU time for w[  9]     13.00 sec, wall time      0.20 sec
w[ 10], rank =  320 /  320
    CPU time for w[ 10]    119.65 sec, wall time      1.92 sec
w[ 11], rank =  320 /  320
    CPU time for w[ 11]     13.77 sec, wall time      0.22 sec
w[ 12], rank =  320 /  320
    CPU time for w[ 12]     13.90 sec, wall time      0.22 sec
w[ 13], rank =  320 /  320
    CPU time for w[ 13]     13.65 sec, wall time      0.21 sec
w[ 14], rank =  320 /  320
    CPU time for w[ 14]     13.84 sec, wall time      0.22 sec
w[ 15], rank =  320 /  320
    CPU time for w[ 15]     13.78 sec, wall time      0.22 sec
w[ 16], rank =  320 /  320
    CPU time for w[ 16]     13.84 sec, wall time      0.22 sec
w[ 17], rank =  320 /  320
    CPU time for w[ 17]     13.72 sec, wall time      0.22 sec
w[ 18], rank =  320 /  320
    CPU time for w[ 18]     13.71 sec, wall time      0.22 sec
w[ 19], rank =  320 /  320
    CPU time for w[ 19]     13.90 sec, wall time      0.22 sec
w[ 20], rank =  320 /  320
    CPU time for w[ 20]     14.48 sec, wall time      0.23 sec
w[ 21], rank =  320 /  320
    CPU time for w[ 21]     31.43 sec, wall time      0.51 sec
w[ 22], rank =  320 /  320
    CPU time for w[ 22]     15.10 sec, wall time      0.24 sec
w[ 23], rank =  320 /  320
    CPU time for w[ 23]     14.92 sec, wall time      0.23 sec
w[ 24], rank =  320 /  320
    CPU time for w[ 24]     15.18 sec, wall time      0.24 sec
w[ 25], rank =  320 /  320
    CPU time for w[ 25]     14.98 sec, wall time      0.24 sec
w[ 26], rank =  320 /  320
    CPU time for w[ 26]     15.05 sec, wall time      0.24 sec
w[ 27], rank =  320 /  320
    CPU time for w[ 27]     14.99 sec, wall time      0.23 sec
w[ 28], rank =  320 /  320
    CPU time for w[ 28]     14.99 sec, wall time      0.24 sec
w[ 29], rank =  320 /  320
    CPU time for w[ 29]     14.93 sec, wall time      0.23 sec
w[ 30], rank =  320 /  320
    CPU time for w[ 30]     14.98 sec, wall time      0.23 sec
w[ 31], rank =  320 /  320
    CPU time for w[ 31]    675.30 sec, wall time     10.83 sec
w[ 32], rank =  320 /  320
    CPU time for w[ 32]     13.14 sec, wall time      0.21 sec
w[ 33], rank =  320 /  320
    CPU time for w[ 33]     13.27 sec, wall time      0.21 sec
w[ 34], rank =  320 /  320
    CPU time for w[ 34]     13.33 sec, wall time      0.21 sec
w[ 35], rank =  320 /  320
    CPU time for w[ 35]     13.20 sec, wall time      0.21 sec
w[ 36], rank =  320 /  320
    CPU time for w[ 36]     13.33 sec, wall time      0.21 sec
w[ 37], rank =  320 /  320
    CPU time for w[ 37]     13.33 sec, wall time      0.21 sec
w[ 38], rank =  320 /  320
    CPU time for w[ 38]     13.27 sec, wall time      0.21 sec
w[ 39], rank =  320 /  320
    CPU time for w[ 39]     13.33 sec, wall time      0.21 sec
w[ 40], rank =  320 /  320
    CPU time for w[ 40]     13.39 sec, wall time      0.21 sec
w[ 41], rank =  320 /  320
    CPU time for w[ 41]     13.27 sec, wall time      0.21 sec
w[ 42], rank =  320 /  320
    CPU time for w[ 42]     13.20 sec, wall time      0.21 sec
w[ 43], rank =  320 /  320
    CPU time for w[ 43]     13.33 sec, wall time      0.21 sec
w[ 44], rank =  320 /  320
    CPU time for w[ 44]     13.27 sec, wall time      0.21 sec
w[ 45], rank =  320 /  320
    CPU time for w[ 45]     13.20 sec, wall time      0.21 sec
w[ 46], rank =  320 /  320
    CPU time for w[ 46]     13.33 sec, wall time      0.21 sec
w[ 47], rank =  320 /  320
    CPU time for w[ 47]     13.14 sec, wall time      0.21 sec
w[ 48], rank =  320 /  320
    CPU time for w[ 48]     13.33 sec, wall time      0.21 sec
w[ 49], rank =  320 /  320
    CPU time for w[ 49]     13.20 sec, wall time      0.21 sec
w[ 50], rank =  320 /  320
    CPU time for w[ 50]     13.63 sec, wall time      0.21 sec
w[ 51], rank =  320 /  320
    CPU time for w[ 51]     12.43 sec, wall time      0.20 sec
w[ 52], rank =  320 /  320
    CPU time for w[ 52]     12.57 sec, wall time      0.20 sec
w[ 53], rank =  320 /  320
    CPU time for w[ 53]     12.53 sec, wall time      0.20 sec
w[ 54], rank =  320 /  320
    CPU time for w[ 54]     12.63 sec, wall time      0.20 sec
w[ 55], rank =  320 /  320
    CPU time for w[ 55]     12.74 sec, wall time      0.20 sec
w[ 56], rank =  320 /  320
    CPU time for w[ 56]     12.58 sec, wall time      0.20 sec
w[ 57], rank =  320 /  320
    CPU time for w[ 57]     12.57 sec, wall time      0.20 sec
w[ 58], rank =  320 /  320
    CPU time for w[ 58]     12.63 sec, wall time      0.20 sec
w[ 59], rank =  320 /  320
    CPU time for w[ 59]     12.57 sec, wall time      0.20 sec
w[ 60], rank =  320 /  320
    CPU time for w[ 60]     17.04 sec, wall time      0.27 sec
w[ 61], rank =  320 /  320
    CPU time for w[ 61]     12.37 sec, wall time      0.19 sec
w[ 62], rank =  320 /  320
    CPU time for w[ 62]     13.78 sec, wall time      0.22 sec
w[ 63], rank =  320 /  320
    CPU time for w[ 63]     13.78 sec, wall time      0.22 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-10-40/4-4-4//47012899/tmp.chk
    CPU time for building ISDF   1781.39 sec, wall time     30.92 sec
