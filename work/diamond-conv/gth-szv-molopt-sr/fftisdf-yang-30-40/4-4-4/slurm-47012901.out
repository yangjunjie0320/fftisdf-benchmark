OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-30-40/4-4-4//47012901/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-30-40/4-4-4//47012901/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 635.334 / [79 79 79].

kmesh = [4 4 4]
Input parent grid mesh = [10, 10, 10], ke_cutoff =  24.91
Final parent grid size = [9 9 9]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  30.00
Parent grid mesh = [9 9 9], grid size = 729

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    227.50 sec, wall time      3.58 sec
Pivoted Cholesky rank = 729, nip = 729, estimated error = 5.43e-04
Number of interpolation points = 729, effective CISDF =  22.78
    CPU time for building left-hand side     37.67 sec, wall time      0.67 sec

kpt = 64, ngrid = 9261, nao = 32
ngrid = 9261, blksize = 65706, nip = 729
required disk space = 6 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-30-40/4-4-4/47012901/c9w708gg
blksize = 65706, memory for aoR_loop = 49049 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side     90.34 sec, wall time      7.62 sec
w[  0], rank =  729 /  729
    CPU time for w[  0]     37.95 sec, wall time      0.71 sec
w[  1], rank =  729 /  729
    CPU time for w[  1]     30.10 sec, wall time      0.48 sec
w[  2], rank =  729 /  729
    CPU time for w[  2]     30.92 sec, wall time      0.50 sec
w[  3], rank =  729 /  729
    CPU time for w[  3]     31.35 sec, wall time      0.51 sec
w[  4], rank =  729 /  729
    CPU time for w[  4]     30.94 sec, wall time      0.49 sec
w[  5], rank =  729 /  729
    CPU time for w[  5]     31.58 sec, wall time      0.51 sec
w[  6], rank =  729 /  729
    CPU time for w[  6]     33.41 sec, wall time      0.54 sec
w[  7], rank =  729 /  729
    CPU time for w[  7]     30.07 sec, wall time      0.47 sec
w[  8], rank =  729 /  729
    CPU time for w[  8]     32.67 sec, wall time      0.51 sec
w[  9], rank =  729 /  729
    CPU time for w[  9]     30.67 sec, wall time      0.48 sec
w[ 10], rank =  729 /  729
    CPU time for w[ 10]     30.51 sec, wall time      0.49 sec
w[ 11], rank =  729 /  729
    CPU time for w[ 11]     30.93 sec, wall time      0.50 sec
w[ 12], rank =  729 /  729
    CPU time for w[ 12]     30.62 sec, wall time      0.49 sec
w[ 13], rank =  729 /  729
    CPU time for w[ 13]     30.85 sec, wall time      0.52 sec
w[ 14], rank =  729 /  729
    CPU time for w[ 14]     30.69 sec, wall time      0.48 sec
w[ 15], rank =  729 /  729
    CPU time for w[ 15]     30.39 sec, wall time      0.48 sec
w[ 16], rank =  729 /  729
    CPU time for w[ 16]     32.15 sec, wall time      0.51 sec
w[ 17], rank =  729 /  729
    CPU time for w[ 17]     30.84 sec, wall time      0.49 sec
w[ 18], rank =  729 /  729
    CPU time for w[ 18]     31.17 sec, wall time      0.53 sec
w[ 19], rank =  729 /  729
    CPU time for w[ 19]     31.12 sec, wall time      0.51 sec
w[ 20], rank =  729 /  729
    CPU time for w[ 20]    189.98 sec, wall time      3.04 sec
w[ 21], rank =  729 /  729
    CPU time for w[ 21]     34.06 sec, wall time      0.59 sec
w[ 22], rank =  729 /  729
    CPU time for w[ 22]     30.56 sec, wall time      0.49 sec
w[ 23], rank =  729 /  729
    CPU time for w[ 23]     31.29 sec, wall time      0.50 sec
w[ 24], rank =  729 /  729
    CPU time for w[ 24]     30.80 sec, wall time      0.52 sec
w[ 25], rank =  729 /  729
    CPU time for w[ 25]     30.53 sec, wall time      0.49 sec
w[ 26], rank =  729 /  729
    CPU time for w[ 26]     30.30 sec, wall time      0.48 sec
w[ 27], rank =  729 /  729
    CPU time for w[ 27]     30.04 sec, wall time      0.50 sec
w[ 28], rank =  729 /  729
    CPU time for w[ 28]     30.68 sec, wall time      0.50 sec
w[ 29], rank =  729 /  729
    CPU time for w[ 29]     30.30 sec, wall time      0.48 sec
w[ 30], rank =  729 /  729
    CPU time for w[ 30]     30.57 sec, wall time      0.49 sec
w[ 31], rank =  729 /  729
    CPU time for w[ 31]     31.92 sec, wall time      0.52 sec
w[ 32], rank =  729 /  729
    CPU time for w[ 32]     30.13 sec, wall time      0.48 sec
w[ 33], rank =  729 /  729
    CPU time for w[ 33]     31.67 sec, wall time      0.50 sec
w[ 34], rank =  729 /  729
    CPU time for w[ 34]     31.10 sec, wall time      0.49 sec
w[ 35], rank =  729 /  729
    CPU time for w[ 35]     31.36 sec, wall time      0.50 sec
w[ 36], rank =  729 /  729
    CPU time for w[ 36]     31.41 sec, wall time      0.50 sec
w[ 37], rank =  729 /  729
    CPU time for w[ 37]     31.65 sec, wall time      0.52 sec
w[ 38], rank =  729 /  729
    CPU time for w[ 38]     31.54 sec, wall time      0.51 sec
w[ 39], rank =  729 /  729
    CPU time for w[ 39]     31.34 sec, wall time      0.51 sec
w[ 40], rank =  729 /  729
    CPU time for w[ 40]     31.35 sec, wall time      0.50 sec
w[ 41], rank =  729 /  729
    CPU time for w[ 41]     32.70 sec, wall time      0.53 sec
w[ 42], rank =  729 /  729
    CPU time for w[ 42]     30.56 sec, wall time      0.49 sec
w[ 43], rank =  729 /  729
    CPU time for w[ 43]     30.87 sec, wall time      0.49 sec
w[ 44], rank =  729 /  729
    CPU time for w[ 44]    354.79 sec, wall time      5.65 sec
w[ 45], rank =  729 /  729
    CPU time for w[ 45]     30.05 sec, wall time      0.49 sec
w[ 46], rank =  729 /  729
    CPU time for w[ 46]     30.36 sec, wall time      0.48 sec
w[ 47], rank =  729 /  729
    CPU time for w[ 47]     29.98 sec, wall time      0.48 sec
w[ 48], rank =  729 /  729
    CPU time for w[ 48]     30.65 sec, wall time      0.50 sec
w[ 49], rank =  729 /  729
    CPU time for w[ 49]     31.30 sec, wall time      0.53 sec
w[ 50], rank =  729 /  729
    CPU time for w[ 50]     31.04 sec, wall time      0.52 sec
w[ 51], rank =  729 /  729
    CPU time for w[ 51]     30.91 sec, wall time      0.50 sec
w[ 52], rank =  729 /  729
    CPU time for w[ 52]     31.43 sec, wall time      0.50 sec
w[ 53], rank =  729 /  729
    CPU time for w[ 53]     30.21 sec, wall time      0.48 sec
w[ 54], rank =  729 /  729
    CPU time for w[ 54]     30.67 sec, wall time      0.51 sec
w[ 55], rank =  729 /  729
    CPU time for w[ 55]     30.59 sec, wall time      0.50 sec
w[ 56], rank =  729 /  729
    CPU time for w[ 56]     30.59 sec, wall time      0.49 sec
w[ 57], rank =  729 /  729
    CPU time for w[ 57]     30.56 sec, wall time      0.49 sec
w[ 58], rank =  729 /  729
    CPU time for w[ 58]     30.13 sec, wall time      0.48 sec
w[ 59], rank =  729 /  729
    CPU time for w[ 59]     30.47 sec, wall time      0.48 sec
w[ 60], rank =  729 /  729
    CPU time for w[ 60]     30.35 sec, wall time      0.48 sec
w[ 61], rank =  729 /  729
    CPU time for w[ 61]     32.07 sec, wall time      0.51 sec
w[ 62], rank =  729 /  729
    CPU time for w[ 62]     30.66 sec, wall time      0.49 sec
w[ 63], rank =  729 /  729
    CPU time for w[ 63]     30.62 sec, wall time      0.50 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-30-40/4-4-4//47012901/tmp.chk
    CPU time for building ISDF   2842.46 sec, wall time     52.51 sec
