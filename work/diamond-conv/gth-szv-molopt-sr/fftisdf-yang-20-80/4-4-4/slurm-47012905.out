OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012905/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012905/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [29 29 29] (24389 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  c0 tol kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (80 / [29 29 29]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 2.1 Eh.
Recommended ke_cutoff/mesh are 635.334 / [79 79 79].

kmesh = [4 4 4]
Input parent grid mesh = [9, 9, 9], ke_cutoff =  24.91
Final parent grid size = [9 9 9]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  20.00
Parent grid mesh = [9 9 9], grid size = 729

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    232.02 sec, wall time      3.64 sec
Pivoted Cholesky rank = 729, nip = 640, estimated error = 3.75e-03
Number of interpolation points = 640, effective CISDF =  20.00
    CPU time for building left-hand side     36.82 sec, wall time      0.59 sec

kpt = 64, ngrid = 24389, nao = 32
ngrid = 24389, blksize = 74874, nip = 640
required disk space = 15 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4/47012905/n9snzt65
blksize = 74874, memory for aoR_loop = 49069 MB
finished aoR_loop[       0:   24389]
    CPU time for building right-hand side    179.52 sec, wall time     16.73 sec
w[  0], rank =  640 /  640
    CPU time for w[  0]   1029.54 sec, wall time     16.44 sec
w[  1], rank =  640 /  640
    CPU time for w[  1]    702.90 sec, wall time     11.34 sec
w[  2], rank =  640 /  640
    CPU time for w[  2]   1524.15 sec, wall time     24.46 sec
w[  3], rank =  640 /  640
    CPU time for w[  3]    788.59 sec, wall time     12.62 sec
w[  4], rank =  640 /  640
    CPU time for w[  4]   1041.81 sec, wall time     16.93 sec
w[  5], rank =  640 /  640
    CPU time for w[  5]    844.73 sec, wall time     13.56 sec
w[  6], rank =  640 /  640
    CPU time for w[  6]    847.25 sec, wall time     13.70 sec
w[  7], rank =  640 /  640
    CPU time for w[  7]   1031.27 sec, wall time     16.67 sec
w[  8], rank =  640 /  640
    CPU time for w[  8]   1084.11 sec, wall time     17.33 sec
w[  9], rank =  640 /  640
    CPU time for w[  9]    855.80 sec, wall time     13.78 sec
w[ 10], rank =  640 /  640
    CPU time for w[ 10]    778.41 sec, wall time     12.59 sec
w[ 11], rank =  640 /  640
    CPU time for w[ 11]    814.61 sec, wall time     13.03 sec
w[ 12], rank =  640 /  640
    CPU time for w[ 12]   1352.73 sec, wall time     22.07 sec
w[ 13], rank =  640 /  640
    CPU time for w[ 13]   1100.67 sec, wall time     18.29 sec
w[ 14], rank =  640 /  640
    CPU time for w[ 14]   1403.68 sec, wall time     22.60 sec
w[ 15], rank =  640 /  640
    CPU time for w[ 15]    808.22 sec, wall time     12.88 sec
w[ 16], rank =  640 /  640
    CPU time for w[ 16]   1512.45 sec, wall time     24.68 sec
w[ 17], rank =  640 /  640
    CPU time for w[ 17]    971.12 sec, wall time     15.72 sec
w[ 18], rank =  640 /  640
    CPU time for w[ 18]   2034.48 sec, wall time     32.62 sec
w[ 19], rank =  640 /  640
    CPU time for w[ 19]    730.14 sec, wall time     11.69 sec
w[ 20], rank =  640 /  640
    CPU time for w[ 20]   1440.49 sec, wall time     23.14 sec
w[ 21], rank =  640 /  640
    CPU time for w[ 21]    784.04 sec, wall time     12.66 sec
w[ 22], rank =  640 /  640
    CPU time for w[ 22]    902.42 sec, wall time     14.61 sec
w[ 23], rank =  640 /  640
    CPU time for w[ 23]   2447.66 sec, wall time     40.08 sec
w[ 24], rank =  640 /  640
    CPU time for w[ 24]    927.47 sec, wall time     15.18 sec
w[ 25], rank =  640 /  640
    CPU time for w[ 25]    726.16 sec, wall time     11.61 sec
w[ 26], rank =  640 /  640
    CPU time for w[ 26]    938.83 sec, wall time     15.19 sec
w[ 27], rank =  640 /  640
    CPU time for w[ 27]    911.18 sec, wall time     14.82 sec
w[ 28], rank =  640 /  640
    CPU time for w[ 28]    635.47 sec, wall time     10.10 sec
w[ 29], rank =  640 /  640
    CPU time for w[ 29]    834.11 sec, wall time     13.25 sec
w[ 30], rank =  640 /  640
    CPU time for w[ 30]   1225.67 sec, wall time     19.98 sec
w[ 31], rank =  640 /  640
    CPU time for w[ 31]    831.36 sec, wall time     13.38 sec
w[ 32], rank =  640 /  640
    CPU time for w[ 32]   3375.94 sec, wall time     54.60 sec
w[ 33], rank =  640 /  640
    CPU time for w[ 33]    822.29 sec, wall time     13.15 sec
w[ 34], rank =  640 /  640
    CPU time for w[ 34]   1866.75 sec, wall time     30.05 sec
w[ 35], rank =  640 /  640
    CPU time for w[ 35]   1111.30 sec, wall time     17.84 sec
w[ 36], rank =  640 /  640
    CPU time for w[ 36]    634.32 sec, wall time     10.12 sec
w[ 37], rank =  640 /  640
    CPU time for w[ 37]   1198.72 sec, wall time     19.11 sec
w[ 38], rank =  640 /  640
    CPU time for w[ 38]   1755.63 sec, wall time     28.56 sec
w[ 39], rank =  640 /  640
    CPU time for w[ 39]    620.14 sec, wall time      9.85 sec
w[ 40], rank =  640 /  640
    CPU time for w[ 40]    863.57 sec, wall time     13.83 sec
w[ 41], rank =  640 /  640
    CPU time for w[ 41]    699.32 sec, wall time     11.10 sec
w[ 42], rank =  640 /  640
    CPU time for w[ 42]    693.66 sec, wall time     11.07 sec
w[ 43], rank =  640 /  640
    CPU time for w[ 43]   1088.36 sec, wall time     17.66 sec
w[ 44], rank =  640 /  640
    CPU time for w[ 44]    632.26 sec, wall time     10.15 sec
w[ 45], rank =  640 /  640
    CPU time for w[ 45]    897.22 sec, wall time     14.39 sec
w[ 46], rank =  640 /  640
    CPU time for w[ 46]   1490.53 sec, wall time     24.20 sec
w[ 47], rank =  640 /  640
    CPU time for w[ 47]    761.41 sec, wall time     12.54 sec
w[ 48], rank =  640 /  640
    CPU time for w[ 48]   1043.02 sec, wall time     16.84 sec
w[ 49], rank =  640 /  640
    CPU time for w[ 49]    612.56 sec, wall time      9.72 sec
w[ 50], rank =  640 /  640
    CPU time for w[ 50]    982.79 sec, wall time     15.68 sec
w[ 51], rank =  640 /  640
    CPU time for w[ 51]    780.37 sec, wall time     12.55 sec
w[ 52], rank =  640 /  640
    CPU time for w[ 52]    832.68 sec, wall time     13.33 sec
w[ 53], rank =  640 /  640
    CPU time for w[ 53]   1651.51 sec, wall time     26.46 sec
w[ 54], rank =  640 /  640
    CPU time for w[ 54]    683.28 sec, wall time     10.90 sec
w[ 55], rank =  640 /  640
    CPU time for w[ 55]    686.57 sec, wall time     10.99 sec
w[ 56], rank =  640 /  640
    CPU time for w[ 56]    640.30 sec, wall time     10.25 sec
w[ 57], rank =  640 /  640
    CPU time for w[ 57]    626.27 sec, wall time      9.98 sec
w[ 58], rank =  640 /  640
    CPU time for w[ 58]    924.54 sec, wall time     15.24 sec
w[ 59], rank =  640 /  640
    CPU time for w[ 59]    618.34 sec, wall time      9.83 sec
w[ 60], rank =  640 /  640
    CPU time for w[ 60]   1263.64 sec, wall time     20.62 sec
w[ 61], rank =  640 /  640
    CPU time for w[ 61]   4188.58 sec, wall time     67.13 sec
w[ 62], rank =  640 /  640
    CPU time for w[ 62]   1546.80 sec, wall time     24.95 sec
w[ 63], rank =  640 /  640
    CPU time for w[ 63]    611.50 sec, wall time      9.68 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012905/tmp.chk
    CPU time for building ISDF  70525.34 sec, wall time   1150.85 sec
