OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-80/4-4-4//47013000/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-80/4-4-4//47013000/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [29 29 29] (24389 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  tol kmesh c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (80 / [29 29 29]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 2.2 Eh.
Recommended ke_cutoff/mesh are 679.828 / [81 81 81].

kmesh = [4 4 4]
Input parent grid mesh = [11, 11, 11], ke_cutoff =  38.92
Final parent grid size = [11 11 11]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  10.00
Parent grid mesh = [11 11 11], grid size = 1331

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    275.78 sec, wall time      4.35 sec
Pivoted Cholesky rank = 1331, nip = 1040, estimated error = 2.90e-02
Number of interpolation points = 1040, effective CISDF =  10.00
    CPU time for building left-hand side     38.00 sec, wall time      0.92 sec

kpt = 64, ngrid = 24389, nao = 104
ngrid = 24389, blksize = 45993, nip = 1040
required disk space = 25 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-80/4-4-4/47013000/zondrr4r
blksize = 45993, memory for aoR_loop = 48980 MB
finished aoR_loop[       0:   24389]
    CPU time for building right-hand side    303.84 sec, wall time     32.11 sec
w[  0], rank = 1040 / 1040
    CPU time for w[  0]    983.83 sec, wall time     15.72 sec
w[  1], rank = 1040 / 1040
    CPU time for w[  1]    922.70 sec, wall time     14.84 sec
w[  2], rank = 1040 / 1040
    CPU time for w[  2]   1094.22 sec, wall time     17.66 sec
w[  3], rank = 1040 / 1040
    CPU time for w[  3]    994.60 sec, wall time     15.92 sec
w[  4], rank = 1040 / 1040
    CPU time for w[  4]    897.74 sec, wall time     14.43 sec
w[  5], rank = 1040 / 1040
    CPU time for w[  5]    941.35 sec, wall time     15.08 sec
w[  6], rank = 1040 / 1040
    CPU time for w[  6]    954.30 sec, wall time     15.23 sec
w[  7], rank = 1040 / 1040
    CPU time for w[  7]    934.70 sec, wall time     15.05 sec
w[  8], rank = 1040 / 1040
    CPU time for w[  8]    964.94 sec, wall time     15.46 sec
w[  9], rank = 1040 / 1040
    CPU time for w[  9]    998.82 sec, wall time     16.02 sec
w[ 10], rank = 1040 / 1040
    CPU time for w[ 10]    918.76 sec, wall time     14.72 sec
w[ 11], rank = 1040 / 1040
    CPU time for w[ 11]   1002.34 sec, wall time     16.09 sec
w[ 12], rank = 1040 / 1040
    CPU time for w[ 12]    964.40 sec, wall time     15.44 sec
w[ 13], rank = 1040 / 1040
    CPU time for w[ 13]    947.68 sec, wall time     15.20 sec
w[ 14], rank = 1040 / 1040
    CPU time for w[ 14]    929.64 sec, wall time     14.86 sec
w[ 15], rank = 1040 / 1040
    CPU time for w[ 15]    900.35 sec, wall time     14.40 sec
w[ 16], rank = 1040 / 1040
    CPU time for w[ 16]    959.95 sec, wall time     15.37 sec
w[ 17], rank = 1040 / 1040
    CPU time for w[ 17]    946.06 sec, wall time     15.16 sec
w[ 18], rank = 1040 / 1040
    CPU time for w[ 18]    928.37 sec, wall time     14.84 sec
w[ 19], rank = 1040 / 1040
    CPU time for w[ 19]    905.69 sec, wall time     14.59 sec
w[ 20], rank = 1040 / 1040
    CPU time for w[ 20]    971.44 sec, wall time     15.67 sec
w[ 21], rank = 1040 / 1040
    CPU time for w[ 21]    938.57 sec, wall time     15.17 sec
w[ 22], rank = 1040 / 1040
    CPU time for w[ 22]    981.47 sec, wall time     15.77 sec
w[ 23], rank = 1040 / 1040
    CPU time for w[ 23]   1165.90 sec, wall time     18.79 sec
w[ 24], rank = 1040 / 1040
    CPU time for w[ 24]    962.25 sec, wall time     15.42 sec
w[ 25], rank = 1040 / 1040
    CPU time for w[ 25]    953.09 sec, wall time     15.35 sec
w[ 26], rank = 1040 / 1040
    CPU time for w[ 26]    943.75 sec, wall time     15.08 sec
w[ 27], rank = 1040 / 1040
    CPU time for w[ 27]    957.13 sec, wall time     15.42 sec
w[ 28], rank = 1040 / 1040
    CPU time for w[ 28]    988.01 sec, wall time     15.83 sec
w[ 29], rank = 1040 / 1040
    CPU time for w[ 29]    941.32 sec, wall time     15.12 sec
w[ 30], rank = 1040 / 1040
    CPU time for w[ 30]    929.01 sec, wall time     14.84 sec
w[ 31], rank = 1040 / 1040
    CPU time for w[ 31]    936.83 sec, wall time     15.05 sec
w[ 32], rank = 1040 / 1040
    CPU time for w[ 32]    865.38 sec, wall time     13.86 sec
w[ 33], rank = 1040 / 1040
    CPU time for w[ 33]    975.83 sec, wall time     15.67 sec
w[ 34], rank = 1040 / 1040
    CPU time for w[ 34]    935.44 sec, wall time     15.14 sec
w[ 35], rank = 1040 / 1040
    CPU time for w[ 35]    948.59 sec, wall time     15.16 sec
w[ 36], rank = 1040 / 1040
    CPU time for w[ 36]    987.34 sec, wall time     15.90 sec
w[ 37], rank = 1040 / 1040
    CPU time for w[ 37]    962.99 sec, wall time     15.47 sec
w[ 38], rank = 1040 / 1040
    CPU time for w[ 38]    946.29 sec, wall time     15.20 sec
w[ 39], rank = 1040 / 1040
    CPU time for w[ 39]    929.84 sec, wall time     14.92 sec
w[ 40], rank = 1040 / 1040
    CPU time for w[ 40]    996.65 sec, wall time     16.09 sec
w[ 41], rank = 1040 / 1040
    CPU time for w[ 41]    949.43 sec, wall time     15.33 sec
w[ 42], rank = 1040 / 1040
    CPU time for w[ 42]    922.53 sec, wall time     14.89 sec
w[ 43], rank = 1040 / 1040
    CPU time for w[ 43]    914.03 sec, wall time     14.71 sec
w[ 44], rank = 1040 / 1040
    CPU time for w[ 44]    912.13 sec, wall time     14.64 sec
w[ 45], rank = 1040 / 1040
    CPU time for w[ 45]    954.12 sec, wall time     15.35 sec
w[ 46], rank = 1040 / 1040
    CPU time for w[ 46]    950.28 sec, wall time     15.20 sec
w[ 47], rank = 1040 / 1040
    CPU time for w[ 47]    948.59 sec, wall time     15.24 sec
w[ 48], rank = 1040 / 1040
    CPU time for w[ 48]    889.34 sec, wall time     14.33 sec
w[ 49], rank = 1040 / 1040
    CPU time for w[ 49]    884.16 sec, wall time     14.29 sec
w[ 50], rank = 1040 / 1040
    CPU time for w[ 50]    957.08 sec, wall time     15.34 sec
w[ 51], rank = 1040 / 1040
    CPU time for w[ 51]    985.35 sec, wall time     15.80 sec
w[ 52], rank = 1040 / 1040
    CPU time for w[ 52]    917.48 sec, wall time     14.65 sec
w[ 53], rank = 1040 / 1040
    CPU time for w[ 53]    970.05 sec, wall time     15.71 sec
w[ 54], rank = 1040 / 1040
    CPU time for w[ 54]    917.47 sec, wall time     14.62 sec
w[ 55], rank = 1040 / 1040
    CPU time for w[ 55]    987.96 sec, wall time     15.90 sec
w[ 56], rank = 1040 / 1040
    CPU time for w[ 56]    936.29 sec, wall time     15.03 sec
w[ 57], rank = 1040 / 1040
    CPU time for w[ 57]    956.09 sec, wall time     15.39 sec
w[ 58], rank = 1040 / 1040
    CPU time for w[ 58]    934.13 sec, wall time     14.92 sec
w[ 59], rank = 1040 / 1040
    CPU time for w[ 59]    869.13 sec, wall time     13.90 sec
w[ 60], rank = 1040 / 1040
    CPU time for w[ 60]    982.31 sec, wall time     15.72 sec
w[ 61], rank = 1040 / 1040
    CPU time for w[ 61]    922.45 sec, wall time     14.81 sec
w[ 62], rank = 1040 / 1040
    CPU time for w[ 62]    923.37 sec, wall time     14.69 sec
w[ 63], rank = 1040 / 1040
    CPU time for w[ 63]    951.06 sec, wall time     15.23 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-80/4-4-4//47013000/tmp.chk
    CPU time for building ISDF  61484.03 sec, wall time   1015.34 sec
