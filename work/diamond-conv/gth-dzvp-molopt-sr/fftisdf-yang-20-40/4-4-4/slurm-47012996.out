OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4//47012996/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4//47012996/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  c0 kmesh tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 679.828 / [81 81 81].

kmesh = [4 4 4]
Input parent grid mesh = [13, 13, 13], ke_cutoff =  56.05
Final parent grid size = [13 13 13]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  20.00
Parent grid mesh = [13 13 13], grid size = 2197

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    360.30 sec, wall time      5.72 sec
Pivoted Cholesky rank = 2197, nip = 2080, estimated error = 8.56e-04
Number of interpolation points = 2080, effective CISDF =  20.00
    CPU time for building left-hand side     68.82 sec, wall time      3.02 sec

kpt = 64, ngrid = 9261, nao = 104
ngrid = 9261, blksize = 22837, nip = 2080
required disk space = 19 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4/47012996/hjmme1nm
blksize = 22837, memory for aoR_loop = 48640 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side    253.78 sec, wall time     23.31 sec
w[  0], rank = 2079 / 2080
    CPU time for w[  0]    153.75 sec, wall time      3.43 sec
w[  1], rank = 2079 / 2080
    CPU time for w[  1]    151.49 sec, wall time      3.00 sec
w[  2], rank = 2079 / 2080
    CPU time for w[  2]    135.12 sec, wall time      2.49 sec
w[  3], rank = 2079 / 2080
    CPU time for w[  3]    135.50 sec, wall time      2.55 sec
w[  4], rank = 2079 / 2080
    CPU time for w[  4]    224.41 sec, wall time      4.15 sec
w[  5], rank = 2079 / 2080
    CPU time for w[  5]    136.82 sec, wall time      2.56 sec
w[  6], rank = 2079 / 2080
    CPU time for w[  6]    137.57 sec, wall time      2.59 sec
w[  7], rank = 2079 / 2080
    CPU time for w[  7]    130.29 sec, wall time      2.39 sec
w[  8], rank = 2079 / 2080
    CPU time for w[  8]    130.29 sec, wall time      2.36 sec
w[  9], rank = 2079 / 2080
    CPU time for w[  9]    132.28 sec, wall time      2.39 sec
w[ 10], rank = 2079 / 2080
    CPU time for w[ 10]    135.25 sec, wall time      2.57 sec
w[ 11], rank = 2079 / 2080
    CPU time for w[ 11]    132.24 sec, wall time      2.40 sec
w[ 12], rank = 2079 / 2080
    CPU time for w[ 12]    131.37 sec, wall time      2.41 sec
w[ 13], rank = 2079 / 2080
    CPU time for w[ 13]    131.13 sec, wall time      2.39 sec
w[ 14], rank = 2079 / 2080
    CPU time for w[ 14]    139.65 sec, wall time      2.54 sec
w[ 15], rank = 2079 / 2080
    CPU time for w[ 15]    130.26 sec, wall time      2.38 sec
w[ 16], rank = 2079 / 2080
    CPU time for w[ 16]    131.64 sec, wall time      2.42 sec
w[ 17], rank = 2079 / 2080
    CPU time for w[ 17]    227.30 sec, wall time      3.99 sec
w[ 18], rank = 2079 / 2080
    CPU time for w[ 18]    133.25 sec, wall time      2.48 sec
w[ 19], rank = 2079 / 2080
    CPU time for w[ 19]    136.36 sec, wall time      2.49 sec
w[ 20], rank = 2079 / 2080
    CPU time for w[ 20]    133.67 sec, wall time      2.46 sec
w[ 21], rank = 2079 / 2080
    CPU time for w[ 21]    135.08 sec, wall time      2.47 sec
w[ 22], rank = 2079 / 2080
    CPU time for w[ 22]    132.54 sec, wall time      2.45 sec
w[ 23], rank = 2079 / 2080
    CPU time for w[ 23]    134.09 sec, wall time      2.48 sec
w[ 24], rank = 2079 / 2080
    CPU time for w[ 24]    976.79 sec, wall time     15.87 sec
w[ 25], rank = 2079 / 2080
    CPU time for w[ 25]    132.60 sec, wall time      2.43 sec
w[ 26], rank = 2079 / 2080
    CPU time for w[ 26]    138.45 sec, wall time      2.62 sec
w[ 27], rank = 2079 / 2080
    CPU time for w[ 27]    129.93 sec, wall time      2.39 sec
w[ 28], rank = 2079 / 2080
    CPU time for w[ 28]    132.90 sec, wall time      2.45 sec
w[ 29], rank = 2079 / 2080
    CPU time for w[ 29]    794.79 sec, wall time     12.96 sec
w[ 30], rank = 2079 / 2080
    CPU time for w[ 30]    134.67 sec, wall time      2.47 sec
w[ 31], rank = 2079 / 2080
    CPU time for w[ 31]    233.57 sec, wall time      4.03 sec
w[ 32], rank = 2079 / 2080
    CPU time for w[ 32]    131.15 sec, wall time      2.38 sec
w[ 33], rank = 2079 / 2080
    CPU time for w[ 33]    132.65 sec, wall time      2.43 sec
w[ 34], rank = 2079 / 2080
    CPU time for w[ 34]    134.12 sec, wall time      2.45 sec
w[ 35], rank = 2079 / 2080
    CPU time for w[ 35]    136.95 sec, wall time      2.55 sec
w[ 36], rank = 2079 / 2080
    CPU time for w[ 36]    210.78 sec, wall time      3.70 sec
w[ 37], rank = 2079 / 2080
    CPU time for w[ 37]    132.86 sec, wall time      2.44 sec
w[ 38], rank = 2079 / 2080
    CPU time for w[ 38]    376.27 sec, wall time      6.30 sec
w[ 39], rank = 2079 / 2080
    CPU time for w[ 39]    130.25 sec, wall time      2.40 sec
w[ 40], rank = 2079 / 2080
    CPU time for w[ 40]    208.85 sec, wall time      3.77 sec
w[ 41], rank = 2079 / 2080
    CPU time for w[ 41]    155.71 sec, wall time      2.80 sec
w[ 42], rank = 2079 / 2080
    CPU time for w[ 42]    644.75 sec, wall time     10.57 sec
w[ 43], rank = 2079 / 2080
    CPU time for w[ 43]    174.70 sec, wall time      3.10 sec
w[ 44], rank = 2079 / 2080
    CPU time for w[ 44]    997.26 sec, wall time     16.27 sec
w[ 45], rank = 2079 / 2080
    CPU time for w[ 45]    134.41 sec, wall time      2.47 sec
w[ 46], rank = 2079 / 2080
    CPU time for w[ 46]    133.98 sec, wall time      2.48 sec
w[ 47], rank = 2079 / 2080
    CPU time for w[ 47]    131.01 sec, wall time      2.39 sec
w[ 48], rank = 2079 / 2080
    CPU time for w[ 48]    134.56 sec, wall time      2.53 sec
w[ 49], rank = 2079 / 2080
    CPU time for w[ 49]    133.53 sec, wall time      2.43 sec
w[ 50], rank = 2079 / 2080
    CPU time for w[ 50]    134.24 sec, wall time      2.48 sec
w[ 51], rank = 2079 / 2080
    CPU time for w[ 51]    133.84 sec, wall time      2.47 sec
w[ 52], rank = 2079 / 2080
    CPU time for w[ 52]    246.78 sec, wall time      4.24 sec
w[ 53], rank = 2079 / 2080
    CPU time for w[ 53]    461.20 sec, wall time      7.64 sec
w[ 54], rank = 2079 / 2080
    CPU time for w[ 54]    172.36 sec, wall time      3.07 sec
w[ 55], rank = 2079 / 2080
    CPU time for w[ 55]    134.47 sec, wall time      2.47 sec
w[ 56], rank = 2079 / 2080
    CPU time for w[ 56]    137.55 sec, wall time      2.50 sec
w[ 57], rank = 2079 / 2080
    CPU time for w[ 57]    136.43 sec, wall time      2.49 sec
w[ 58], rank = 2079 / 2080
    CPU time for w[ 58]    130.40 sec, wall time      2.41 sec
w[ 59], rank = 2079 / 2080
    CPU time for w[ 59]    421.00 sec, wall time      7.03 sec
w[ 60], rank = 2079 / 2080
    CPU time for w[ 60]   1856.99 sec, wall time     30.04 sec
w[ 61], rank = 2079 / 2080
    CPU time for w[ 61]    131.72 sec, wall time      2.47 sec
w[ 62], rank = 2079 / 2080
    CPU time for w[ 62]    131.51 sec, wall time      2.40 sec
w[ 63], rank = 2079 / 2080
    CPU time for w[ 63]    133.08 sec, wall time      2.45 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4//47012996/tmp.chk
Traceback (most recent call last):
  File "/central/home/junjiey/work/fftisdf-benchmark/work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4/main.py", line 46, in <module>
    main(args)
  File "/central/home/junjiey/work/fftisdf-benchmark/work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4/main.py", line 33, in main
    get_jk_time(cell, kmesh, df_obj=df_obj, tmp=df_obj._isdf)
  File "/home/junjiey/work/fftisdf-benchmark/src/utils.py", line 75, in get_jk_time
    scf_obj.with_df = df_obj.build()
                      ^^^^^^^^^^^^^^
  File "/home/junjiey/work/fftisdf-benchmark/src/fft_isdf.py", line 392, in build
    dump(self._isdf, "w", self._w)
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/lib/chkfile.py", line 135, in dump
    save_as_group(key, value, fh5)
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/lib/chkfile.py", line 120, in save_as_group
    root[key] = value
    ~~~~^^^^^
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/h5py/_hl/group.py", line 483, in __setitem__
    ds = self.create_dataset(None, data=obj)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/h5py/_hl/group.py", line 183, in create_dataset
    dsid = dataset.make_new_dset(group, shape, dtype, data, name, **kwds)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/h5py/_hl/dataset.py", line 168, in make_new_dset
    dset_id.write(h5s.ALL, h5s.ALL, data)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py/h5d.pyx", line 281, in h5py.h5d.DatasetID.write
  File "h5py/_proxy.pyx", line 115, in h5py._proxy.dset_rw
OSError: [Errno 122] Can't write data (file write failed: time = Tue Jan 28 22:47:22 2025
, filename = '/central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-20-40/4-4-4//47012996/tmp.chk', file descriptor = 7, errno = 122, error message = 'Disk quota exceeded', buf = 0x7f6e648ab010, total write size = 2282754048, bytes this sub-write = 2282754048, bytes actually written = 18446744073709551615, offset = 0)
