OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-40/4-4-4//47012995/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-40/4-4-4//47012995/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 679.828 / [81 81 81].

kmesh = [4 4 4]
Input parent grid mesh = [11, 11, 11], ke_cutoff =  38.92
Final parent grid size = [11 11 11]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  10.00
Parent grid mesh = [11 11 11], grid size = 1331

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    353.54 sec, wall time      5.56 sec
Pivoted Cholesky rank = 1331, nip = 1040, estimated error = 2.90e-02
Number of interpolation points = 1040, effective CISDF =  10.00
    CPU time for building left-hand side     36.53 sec, wall time      0.88 sec

kpt = 64, ngrid = 9261, nao = 104
ngrid = 9261, blksize = 45991, nip = 1040
required disk space = 9 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-40/4-4-4/47012995/c6su9fut
blksize = 45991, memory for aoR_loop = 48978 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side    173.62 sec, wall time     11.92 sec
w[  0], rank = 1040 / 1040
    CPU time for w[  0]     44.75 sec, wall time      0.83 sec
w[  1], rank = 1040 / 1040
    CPU time for w[  1]     46.53 sec, wall time      0.83 sec
w[  2], rank = 1040 / 1040
    CPU time for w[  2]     47.44 sec, wall time      0.85 sec
w[  3], rank = 1040 / 1040
    CPU time for w[  3]     46.94 sec, wall time      0.80 sec
w[  4], rank = 1040 / 1040
    CPU time for w[  4]     46.88 sec, wall time      0.83 sec
w[  5], rank = 1040 / 1040
    CPU time for w[  5]    138.54 sec, wall time      2.37 sec
w[  6], rank = 1040 / 1040
    CPU time for w[  6]    181.22 sec, wall time      3.15 sec
w[  7], rank = 1040 / 1040
    CPU time for w[  7]     44.90 sec, wall time      0.77 sec
w[  8], rank = 1040 / 1040
    CPU time for w[  8]     44.46 sec, wall time      0.78 sec
w[  9], rank = 1040 / 1040
    CPU time for w[  9]     44.77 sec, wall time      0.76 sec
w[ 10], rank = 1040 / 1040
    CPU time for w[ 10]     90.99 sec, wall time      1.60 sec
w[ 11], rank = 1040 / 1040
    CPU time for w[ 11]     50.65 sec, wall time      0.98 sec
w[ 12], rank = 1040 / 1040
    CPU time for w[ 12]     47.43 sec, wall time      0.78 sec
w[ 13], rank = 1040 / 1040
    CPU time for w[ 13]    547.24 sec, wall time      8.99 sec
w[ 14], rank = 1040 / 1040
    CPU time for w[ 14]     56.78 sec, wall time      1.07 sec
w[ 15], rank = 1040 / 1040
    CPU time for w[ 15]    137.47 sec, wall time      2.25 sec
w[ 16], rank = 1040 / 1040
    CPU time for w[ 16]     50.82 sec, wall time      0.99 sec
w[ 17], rank = 1040 / 1040
    CPU time for w[ 17]     44.56 sec, wall time      0.79 sec
w[ 18], rank = 1040 / 1040
    CPU time for w[ 18]     44.12 sec, wall time      0.77 sec
w[ 19], rank = 1040 / 1040
    CPU time for w[ 19]     46.19 sec, wall time      0.82 sec
w[ 20], rank = 1040 / 1040
    CPU time for w[ 20]     43.98 sec, wall time      0.72 sec
w[ 21], rank = 1040 / 1040
    CPU time for w[ 21]    282.57 sec, wall time      4.73 sec
w[ 22], rank = 1040 / 1040
    CPU time for w[ 22]     44.33 sec, wall time      0.74 sec
w[ 23], rank = 1040 / 1040
    CPU time for w[ 23]     69.29 sec, wall time      1.27 sec
w[ 24], rank = 1040 / 1040
    CPU time for w[ 24]     62.88 sec, wall time      1.02 sec
w[ 25], rank = 1040 / 1040
    CPU time for w[ 25]     50.19 sec, wall time      0.93 sec
w[ 26], rank = 1040 / 1040
    CPU time for w[ 26]     44.47 sec, wall time      0.74 sec
w[ 27], rank = 1040 / 1040
    CPU time for w[ 27]     45.66 sec, wall time      0.78 sec
w[ 28], rank = 1040 / 1040
    CPU time for w[ 28]     47.80 sec, wall time      0.83 sec
w[ 29], rank = 1040 / 1040
    CPU time for w[ 29]   1479.65 sec, wall time     23.66 sec
w[ 30], rank = 1040 / 1040
    CPU time for w[ 30]     44.14 sec, wall time      0.72 sec
w[ 31], rank = 1040 / 1040
    CPU time for w[ 31]    260.28 sec, wall time      4.20 sec
w[ 32], rank = 1040 / 1040
    CPU time for w[ 32]     48.12 sec, wall time      0.83 sec
w[ 33], rank = 1040 / 1040
    CPU time for w[ 33]    107.34 sec, wall time      1.93 sec
w[ 34], rank = 1040 / 1040
    CPU time for w[ 34]     43.95 sec, wall time      0.73 sec
w[ 35], rank = 1040 / 1040
    CPU time for w[ 35]    576.62 sec, wall time      9.58 sec
w[ 36], rank = 1040 / 1040
    CPU time for w[ 36]     49.41 sec, wall time      0.81 sec
w[ 37], rank = 1040 / 1040
    CPU time for w[ 37]    150.78 sec, wall time      2.48 sec
w[ 38], rank = 1040 / 1040
    CPU time for w[ 38]     44.66 sec, wall time      0.74 sec
w[ 39], rank = 1040 / 1040
    CPU time for w[ 39]   1513.56 sec, wall time     24.24 sec
w[ 40], rank = 1040 / 1040
    CPU time for w[ 40]     44.03 sec, wall time      0.73 sec
w[ 41], rank = 1040 / 1040
    CPU time for w[ 41]     46.40 sec, wall time      0.82 sec
w[ 42], rank = 1040 / 1040
    CPU time for w[ 42]     44.74 sec, wall time      0.75 sec
w[ 43], rank = 1040 / 1040
    CPU time for w[ 43]     89.26 sec, wall time      1.68 sec
w[ 44], rank = 1040 / 1040
    CPU time for w[ 44]     45.16 sec, wall time      0.75 sec
w[ 45], rank = 1040 / 1040
    CPU time for w[ 45]    481.51 sec, wall time      7.87 sec
w[ 46], rank = 1040 / 1040
    CPU time for w[ 46]     45.02 sec, wall time      0.75 sec
w[ 47], rank = 1040 / 1040
    CPU time for w[ 47]    311.22 sec, wall time      5.23 sec
w[ 48], rank = 1040 / 1040
    CPU time for w[ 48]    134.61 sec, wall time      2.39 sec
w[ 49], rank = 1040 / 1040
    CPU time for w[ 49]     43.87 sec, wall time      0.77 sec
w[ 50], rank = 1040 / 1040
    CPU time for w[ 50]    564.20 sec, wall time      9.22 sec
w[ 51], rank = 1040 / 1040
    CPU time for w[ 51]     45.87 sec, wall time      0.78 sec
w[ 52], rank = 1040 / 1040
    CPU time for w[ 52]     46.59 sec, wall time      0.81 sec
w[ 53], rank = 1040 / 1040
    CPU time for w[ 53]    220.20 sec, wall time      3.72 sec
w[ 54], rank = 1040 / 1040
    CPU time for w[ 54]    440.77 sec, wall time      7.26 sec
w[ 55], rank = 1040 / 1040
    CPU time for w[ 55]     46.80 sec, wall time      0.82 sec
w[ 56], rank = 1040 / 1040
    CPU time for w[ 56]     47.70 sec, wall time      0.81 sec
w[ 57], rank = 1040 / 1040
    CPU time for w[ 57]     45.33 sec, wall time      0.78 sec
w[ 58], rank = 1040 / 1040
    CPU time for w[ 58]    604.58 sec, wall time     10.08 sec
w[ 59], rank = 1040 / 1040
    CPU time for w[ 59]     45.45 sec, wall time      0.80 sec
w[ 60], rank = 1040 / 1040
    CPU time for w[ 60]     44.51 sec, wall time      0.73 sec
w[ 61], rank = 1040 / 1040
    CPU time for w[ 61]    169.90 sec, wall time      2.83 sec
w[ 62], rank = 1040 / 1040
    CPU time for w[ 62]     46.22 sec, wall time      0.80 sec
w[ 63], rank = 1040 / 1040
    CPU time for w[ 63]    447.31 sec, wall time      7.39 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-conv/gth-dzvp-molopt-sr/fftisdf-yang-10-40/4-4-4//47012995/tmp.chk
    CPU time for building ISDF  11496.07 sec, wall time    200.65 sec
