OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-200/fftisdf-yang-20-21-21-21/4-4-4//46975612/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-200/fftisdf-yang-20-21-21-21/4-4-4//46975612/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh m0 tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.041 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [21, 21, 21], ke_cutoff = 155.69
Final parent grid size = [21 21 21]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  20.00
Parent grid mesh = [21 21 21], grid size = 9261
    CPU time for select interpolation points   1126.90 sec, wall time     26.63 sec
Pivoted Cholesky rank = 4485, nip = 2080, estimated error = 7.13e-03
Number of interpolation points = 2080, effective CISDF =  20.00
    CPU time for building left-hand side     93.28 sec, wall time      3.60 sec

kpt = 64, ngrid = 91125, nao = 104
ngrid = 91125, blksize = 22838, nip = 2080
required disk space = 194 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-dzvp-molopt-sr-200/fftisdf-yang-20-21-21-21/4-4-4/46975612/bfulso68
blksize = 22838, memory for aoR_loop = 48643 MB
finished aoR_loop[       0:   22838]
finished aoR_loop[   22838:   45676]
finished aoR_loop[   45676:   68514]
finished aoR_loop[   68514:   91125]
    CPU time for building right-hand side   1840.33 sec, wall time    212.29 sec
w[  0], rank = 2080 / 2080
    CPU time for w[  0]    881.15 sec, wall time     26.02 sec
w[  1], rank = 2080 / 2080
    CPU time for w[  1]    915.82 sec, wall time     22.88 sec
w[  2], rank = 2080 / 2080
    CPU time for w[  2]   1108.67 sec, wall time     24.38 sec
w[  3], rank = 2080 / 2080
    CPU time for w[  3]    676.24 sec, wall time     18.40 sec
w[  4], rank = 2080 / 2080
    CPU time for w[  4]    728.78 sec, wall time     19.21 sec
w[  5], rank = 2080 / 2080
    CPU time for w[  5]    971.73 sec, wall time     23.37 sec
w[  6], rank = 2080 / 2080
    CPU time for w[  6]    704.24 sec, wall time     18.72 sec
w[  7], rank = 2080 / 2080
    CPU time for w[  7]    842.80 sec, wall time     21.11 sec
w[  8], rank = 2080 / 2080
    CPU time for w[  8]    719.71 sec, wall time     18.06 sec
w[  9], rank = 2080 / 2080
    CPU time for w[  9]    876.30 sec, wall time     21.54 sec
w[ 10], rank = 2080 / 2080
    CPU time for w[ 10]   2363.54 sec, wall time     44.34 sec
w[ 11], rank = 2080 / 2080
    CPU time for w[ 11]    772.92 sec, wall time     19.93 sec
w[ 12], rank = 2080 / 2080
    CPU time for w[ 12]    818.19 sec, wall time     20.84 sec
w[ 13], rank = 2080 / 2080
    CPU time for w[ 13]    779.17 sec, wall time     20.22 sec
w[ 14], rank = 2080 / 2080
    CPU time for w[ 14]    722.44 sec, wall time     18.95 sec
w[ 15], rank = 2080 / 2080
    CPU time for w[ 15]    736.01 sec, wall time     19.43 sec
w[ 16], rank = 2080 / 2080
    CPU time for w[ 16]    793.09 sec, wall time     20.37 sec
w[ 17], rank = 2080 / 2080
    CPU time for w[ 17]    717.67 sec, wall time     19.15 sec
w[ 18], rank = 2080 / 2080
    CPU time for w[ 18]    932.42 sec, wall time     22.48 sec
w[ 19], rank = 2080 / 2080
    CPU time for w[ 19]    988.47 sec, wall time     24.24 sec
w[ 20], rank = 2080 / 2080
    CPU time for w[ 20]    772.27 sec, wall time     20.09 sec
w[ 21], rank = 2080 / 2080
    CPU time for w[ 21]    718.70 sec, wall time     19.30 sec
w[ 22], rank = 2080 / 2080
    CPU time for w[ 22]    724.17 sec, wall time     19.17 sec
w[ 23], rank = 2080 / 2080
    CPU time for w[ 23]    723.55 sec, wall time     19.52 sec
w[ 24], rank = 2080 / 2080
    CPU time for w[ 24]    785.99 sec, wall time     20.20 sec
w[ 25], rank = 2080 / 2080
    CPU time for w[ 25]    723.32 sec, wall time     19.13 sec
w[ 26], rank = 2080 / 2080
    CPU time for w[ 26]    721.39 sec, wall time     18.86 sec
w[ 27], rank = 2080 / 2080
    CPU time for w[ 27]    742.09 sec, wall time     20.10 sec
w[ 28], rank = 2080 / 2080
    CPU time for w[ 28]    780.23 sec, wall time     20.21 sec
w[ 29], rank = 2080 / 2080
    CPU time for w[ 29]    731.74 sec, wall time     19.45 sec
w[ 30], rank = 2080 / 2080
    CPU time for w[ 30]    736.41 sec, wall time     19.31 sec
w[ 31], rank = 2080 / 2080
    CPU time for w[ 31]    721.06 sec, wall time     19.02 sec
w[ 32], rank = 2080 / 2080
    CPU time for w[ 32]    726.95 sec, wall time     18.25 sec
w[ 33], rank = 2080 / 2080
    CPU time for w[ 33]    744.54 sec, wall time     19.32 sec
w[ 34], rank = 2080 / 2080
    CPU time for w[ 34]    721.25 sec, wall time     18.05 sec
w[ 35], rank = 2080 / 2080
    CPU time for w[ 35]    723.60 sec, wall time     18.80 sec
w[ 36], rank = 2080 / 2080
    CPU time for w[ 36]    716.44 sec, wall time     18.91 sec
w[ 37], rank = 2080 / 2080
    CPU time for w[ 37]   1084.77 sec, wall time     24.97 sec
w[ 38], rank = 2080 / 2080
    CPU time for w[ 38]    725.29 sec, wall time     19.01 sec
w[ 39], rank = 2080 / 2080
    CPU time for w[ 39]    732.28 sec, wall time     19.37 sec
w[ 40], rank = 2080 / 2080
    CPU time for w[ 40]    715.52 sec, wall time     17.91 sec
w[ 41], rank = 2080 / 2080
    CPU time for w[ 41]    718.72 sec, wall time     18.74 sec
w[ 42], rank = 2080 / 2080
    CPU time for w[ 42]    735.06 sec, wall time     18.24 sec
w[ 43], rank = 2080 / 2080
    CPU time for w[ 43]    801.32 sec, wall time     20.15 sec
w[ 44], rank = 2080 / 2080
    CPU time for w[ 44]   1689.46 sec, wall time     34.60 sec
w[ 45], rank = 2080 / 2080
    CPU time for w[ 45]    731.24 sec, wall time     19.37 sec
w[ 46], rank = 2080 / 2080
    CPU time for w[ 46]    945.58 sec, wall time     22.58 sec
w[ 47], rank = 2080 / 2080
    CPU time for w[ 47]    725.90 sec, wall time     19.22 sec
w[ 48], rank = 2080 / 2080
    CPU time for w[ 48]    753.11 sec, wall time     19.35 sec
w[ 49], rank = 2080 / 2080
    CPU time for w[ 49]    797.68 sec, wall time     20.26 sec
w[ 50], rank = 2080 / 2080
    CPU time for w[ 50]    723.82 sec, wall time     19.13 sec
w[ 51], rank = 2080 / 2080
    CPU time for w[ 51]    721.98 sec, wall time     19.16 sec
w[ 52], rank = 2080 / 2080
    CPU time for w[ 52]    808.20 sec, wall time     20.56 sec
w[ 53], rank = 2080 / 2080
    CPU time for w[ 53]    725.27 sec, wall time     19.42 sec
w[ 54], rank = 2080 / 2080
    CPU time for w[ 54]    720.94 sec, wall time     19.25 sec
w[ 55], rank = 2080 / 2080
    CPU time for w[ 55]    732.86 sec, wall time     19.61 sec
w[ 56], rank = 2080 / 2080
    CPU time for w[ 56]    736.44 sec, wall time     19.21 sec
w[ 57], rank = 2080 / 2080
    CPU time for w[ 57]    948.76 sec, wall time     22.95 sec
w[ 58], rank = 2080 / 2080
    CPU time for w[ 58]    739.39 sec, wall time     19.38 sec
w[ 59], rank = 2080 / 2080
    CPU time for w[ 59]    736.46 sec, wall time     19.43 sec
w[ 60], rank = 2080 / 2080
    CPU time for w[ 60]    732.84 sec, wall time     19.39 sec
w[ 61], rank = 2080 / 2080
    CPU time for w[ 61]    796.62 sec, wall time     20.49 sec
w[ 62], rank = 2080 / 2080
    CPU time for w[ 62]    721.72 sec, wall time     19.24 sec
w[ 63], rank = 2080 / 2080
    CPU time for w[ 63]    817.87 sec, wall time     20.91 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-200/fftisdf-yang-20-21-21-21/4-4-4//46975612/tmp.chk
    CPU time for building ISDF  55469.91 sec, wall time   1569.60 sec
