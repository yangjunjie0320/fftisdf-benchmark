OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-40/fftisdf-yang-10/4-4-4//47008597/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-40/fftisdf-yang-10/4-4-4//47008597/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [11, 11, 11], ke_cutoff =  38.92
Final parent grid size = [11 11 11]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  10.00
Parent grid mesh = [11 11 11], grid size = 1331

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    270.25 sec, wall time      4.26 sec
Pivoted Cholesky rank = 1331, nip = 1040, estimated error = 2.90e-02
Number of interpolation points = 1040, effective CISDF =  10.00
    CPU time for building left-hand side     79.37 sec, wall time      1.61 sec

kpt = 64, ngrid = 9261, nao = 104
ngrid = 9261, blksize = 46002, nip = 1040
required disk space = 9 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-conv/gth-dzvp-molopt-sr-40/fftisdf-yang-10/4-4-4/47008597/l6m85im1
blksize = 46002, memory for aoR_loop = 48990 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side    142.21 sec, wall time     10.73 sec
w[  0], rank = 1040 / 1040
    CPU time for w[  0]     41.55 sec, wall time      0.78 sec
w[  1], rank = 1040 / 1040
    CPU time for w[  1]     92.57 sec, wall time      1.51 sec
w[  2], rank = 1040 / 1040
    CPU time for w[  2]    175.26 sec, wall time      2.86 sec
w[  3], rank = 1040 / 1040
    CPU time for w[  3]    273.58 sec, wall time      4.45 sec
w[  4], rank = 1040 / 1040
    CPU time for w[  4]     44.52 sec, wall time      0.74 sec
w[  5], rank = 1040 / 1040
    CPU time for w[  5]    305.63 sec, wall time      5.06 sec
w[  6], rank = 1040 / 1040
    CPU time for w[  6]     43.94 sec, wall time      0.74 sec
w[  7], rank = 1040 / 1040
    CPU time for w[  7]     44.18 sec, wall time      0.77 sec
w[  8], rank = 1040 / 1040
    CPU time for w[  8]    272.04 sec, wall time      4.42 sec
w[  9], rank = 1040 / 1040
    CPU time for w[  9]    446.77 sec, wall time      7.45 sec
w[ 10], rank = 1040 / 1040
    CPU time for w[ 10]     44.74 sec, wall time      0.77 sec
w[ 11], rank = 1040 / 1040
    CPU time for w[ 11]     45.11 sec, wall time      0.75 sec
w[ 12], rank = 1040 / 1040
    CPU time for w[ 12]     44.92 sec, wall time      0.74 sec
w[ 13], rank = 1040 / 1040
    CPU time for w[ 13]     45.14 sec, wall time      0.76 sec
w[ 14], rank = 1040 / 1040
    CPU time for w[ 14]    169.90 sec, wall time      2.94 sec
w[ 15], rank = 1040 / 1040
    CPU time for w[ 15]     44.10 sec, wall time      0.75 sec
w[ 16], rank = 1040 / 1040
    CPU time for w[ 16]     56.41 sec, wall time      1.03 sec
w[ 17], rank = 1040 / 1040
    CPU time for w[ 17]     56.85 sec, wall time      1.03 sec
w[ 18], rank = 1040 / 1040
    CPU time for w[ 18]     43.49 sec, wall time      0.77 sec
w[ 19], rank = 1040 / 1040
    CPU time for w[ 19]     43.99 sec, wall time      0.76 sec
w[ 20], rank = 1040 / 1040
    CPU time for w[ 20]    587.11 sec, wall time      9.55 sec
w[ 21], rank = 1040 / 1040
    CPU time for w[ 21]    279.56 sec, wall time      4.59 sec
w[ 22], rank = 1040 / 1040
    CPU time for w[ 22]     43.83 sec, wall time      0.72 sec
w[ 23], rank = 1040 / 1040
    CPU time for w[ 23]   1287.84 sec, wall time     20.85 sec
w[ 24], rank = 1040 / 1040
    CPU time for w[ 24]     44.51 sec, wall time      0.72 sec
w[ 25], rank = 1040 / 1040
    CPU time for w[ 25]     45.19 sec, wall time      0.76 sec
w[ 26], rank = 1040 / 1040
    CPU time for w[ 26]    543.45 sec, wall time      8.94 sec
w[ 27], rank = 1040 / 1040
    CPU time for w[ 27]     45.39 sec, wall time      0.79 sec
w[ 28], rank = 1040 / 1040
    CPU time for w[ 28]     43.11 sec, wall time      0.72 sec
w[ 29], rank = 1040 / 1040
    CPU time for w[ 29]     43.00 sec, wall time      0.73 sec
w[ 30], rank = 1040 / 1040
    CPU time for w[ 30]     44.19 sec, wall time      0.75 sec
w[ 31], rank = 1040 / 1040
    CPU time for w[ 31]     42.81 sec, wall time      0.74 sec
w[ 32], rank = 1040 / 1040
    CPU time for w[ 32]     55.23 sec, wall time      1.03 sec
w[ 33], rank = 1040 / 1040
    CPU time for w[ 33]     42.25 sec, wall time      0.74 sec
w[ 34], rank = 1040 / 1040
    CPU time for w[ 34]     43.04 sec, wall time      0.72 sec
w[ 35], rank = 1040 / 1040
    CPU time for w[ 35]     48.79 sec, wall time      0.91 sec
w[ 36], rank = 1040 / 1040
    CPU time for w[ 36]     44.74 sec, wall time      0.75 sec
w[ 37], rank = 1040 / 1040
    CPU time for w[ 37]     43.20 sec, wall time      0.71 sec
w[ 38], rank = 1040 / 1040
    CPU time for w[ 38]   1641.17 sec, wall time     26.16 sec
w[ 39], rank = 1040 / 1040
    CPU time for w[ 39]     43.39 sec, wall time      0.71 sec
w[ 40], rank = 1040 / 1040
    CPU time for w[ 40]     43.09 sec, wall time      0.72 sec
w[ 41], rank = 1040 / 1040
    CPU time for w[ 41]     44.69 sec, wall time      0.76 sec
w[ 42], rank = 1040 / 1040
    CPU time for w[ 42]    405.04 sec, wall time      6.99 sec
w[ 43], rank = 1040 / 1040
    CPU time for w[ 43]     42.93 sec, wall time      0.73 sec
w[ 44], rank = 1040 / 1040
    CPU time for w[ 44]    281.10 sec, wall time      4.73 sec
w[ 45], rank = 1040 / 1040
    CPU time for w[ 45]     44.41 sec, wall time      0.73 sec
w[ 46], rank = 1040 / 1040
    CPU time for w[ 46]   2436.69 sec, wall time     39.17 sec
w[ 47], rank = 1040 / 1040
    CPU time for w[ 47]     44.59 sec, wall time      0.74 sec
w[ 48], rank = 1040 / 1040
    CPU time for w[ 48]    992.78 sec, wall time     15.99 sec
w[ 49], rank = 1040 / 1040
    CPU time for w[ 49]    678.49 sec, wall time     10.90 sec
w[ 50], rank = 1040 / 1040
    CPU time for w[ 50]     43.33 sec, wall time      0.72 sec
w[ 51], rank = 1040 / 1040
    CPU time for w[ 51]     44.77 sec, wall time      0.76 sec
w[ 52], rank = 1040 / 1040
    CPU time for w[ 52]     53.82 sec, wall time      1.02 sec
w[ 53], rank = 1040 / 1040
    CPU time for w[ 53]     43.76 sec, wall time      0.72 sec
w[ 54], rank = 1040 / 1040
    CPU time for w[ 54]    244.94 sec, wall time      4.33 sec
w[ 55], rank = 1040 / 1040
    CPU time for w[ 55]    114.01 sec, wall time      1.92 sec
w[ 56], rank = 1040 / 1040
    CPU time for w[ 56]     44.88 sec, wall time      0.75 sec
w[ 57], rank = 1040 / 1040
    CPU time for w[ 57]     45.56 sec, wall time      0.75 sec
w[ 58], rank = 1040 / 1040
    CPU time for w[ 58]     45.03 sec, wall time      0.78 sec
w[ 59], rank = 1040 / 1040
    CPU time for w[ 59]     49.76 sec, wall time      0.94 sec
w[ 60], rank = 1040 / 1040
    CPU time for w[ 60]     43.21 sec, wall time      0.74 sec
w[ 61], rank = 1040 / 1040
    CPU time for w[ 61]    116.85 sec, wall time      2.11 sec
w[ 62], rank = 1040 / 1040
    CPU time for w[ 62]     43.60 sec, wall time      0.72 sec
w[ 63], rank = 1040 / 1040
    CPU time for w[ 63]    252.71 sec, wall time      4.49 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-conv/gth-dzvp-molopt-sr-40/fftisdf-yang-10/4-4-4//47008597/tmp.chk
    CPU time for building ISDF  14058.23 sec, wall time    240.46 sec
