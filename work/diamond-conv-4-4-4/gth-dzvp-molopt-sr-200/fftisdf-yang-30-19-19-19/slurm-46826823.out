OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46826823/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46826823/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh c0 m0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.041 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  30.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    496.82 sec, wall time     17.38 sec
Pivoted Cholesky rank = 4231, nip = 3120, estimated error = 7.33e-04
Number of interpolation points = 3120, effective CISDF =  30.00
    CPU time for building left-hand side     74.44 sec, wall time      6.62 sec

kpt = 64, ngrid = 91125, nao = 104
ngrid = 91125, blksize = 7357, nip = 3120
required disk space = 291 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-30-19-19-19/46826823/kknwuzok
blksize = 7357, memory for aoR_loop = 23504 MB
finished aoR_loop[       0:    7357]
finished aoR_loop[    7357:   14714]
finished aoR_loop[   14714:   22071]
finished aoR_loop[   22071:   29428]
finished aoR_loop[   29428:   36785]
finished aoR_loop[   36785:   44142]
finished aoR_loop[   44142:   51499]
finished aoR_loop[   51499:   58856]
finished aoR_loop[   58856:   66213]
finished aoR_loop[   66213:   73570]
finished aoR_loop[   73570:   80927]
finished aoR_loop[   80927:   88284]
finished aoR_loop[   88284:   91125]
    CPU time for building right-hand side   2206.67 sec, wall time    327.00 sec
w[  0], rank = 3120 / 3120
    CPU time for w[  0]    788.87 sec, wall time     40.07 sec
w[  1], rank = 3120 / 3120
    CPU time for w[  1]    785.95 sec, wall time     35.49 sec
w[  2], rank = 3120 / 3120
    CPU time for w[  2]    785.99 sec, wall time     34.31 sec
w[  3], rank = 3120 / 3120
    CPU time for w[  3]    786.62 sec, wall time     35.55 sec
w[  4], rank = 3120 / 3120
    CPU time for w[  4]    783.16 sec, wall time     35.55 sec
w[  5], rank = 3120 / 3120
    CPU time for w[  5]    785.43 sec, wall time     35.68 sec
w[  6], rank = 3120 / 3120
    CPU time for w[  6]    784.21 sec, wall time     35.52 sec
w[  7], rank = 3120 / 3120
    CPU time for w[  7]    783.39 sec, wall time     37.19 sec
w[  8], rank = 3120 / 3120
    CPU time for w[  8]    788.01 sec, wall time     35.26 sec
w[  9], rank = 3120 / 3120
    CPU time for w[  9]    802.22 sec, wall time     35.99 sec
w[ 10], rank = 3120 / 3120
    CPU time for w[ 10]    778.58 sec, wall time     33.91 sec
w[ 11], rank = 3120 / 3120
    CPU time for w[ 11]    784.40 sec, wall time     35.22 sec
w[ 12], rank = 3120 / 3120
    CPU time for w[ 12]   1143.81 sec, wall time     49.10 sec
w[ 13], rank = 3120 / 3120
    CPU time for w[ 13]   1827.58 sec, wall time     71.77 sec
w[ 14], rank = 3120 / 3120
    CPU time for w[ 14]   2480.33 sec, wall time     93.18 sec
w[ 15], rank = 3120 / 3120
    CPU time for w[ 15]   4707.81 sec, wall time    167.10 sec
w[ 16], rank = 3120 / 3120
    CPU time for w[ 16]   3717.78 sec, wall time    133.49 sec
w[ 17], rank = 3120 / 3120
    CPU time for w[ 17]   4410.34 sec, wall time    159.40 sec
w[ 18], rank = 3120 / 3120
    CPU time for w[ 18]   4479.83 sec, wall time    161.71 sec
w[ 19], rank = 3120 / 3120
    CPU time for w[ 19]   3303.61 sec, wall time    121.09 sec
w[ 20], rank = 3120 / 3120
    CPU time for w[ 20]   3825.59 sec, wall time    138.39 sec
w[ 21], rank = 3120 / 3120
    CPU time for w[ 21]   1848.33 sec, wall time     72.23 sec
w[ 22], rank = 3120 / 3120
    CPU time for w[ 22]    854.24 sec, wall time     40.26 sec
w[ 23], rank = 3120 / 3120
    CPU time for w[ 23]    796.84 sec, wall time     37.98 sec
w[ 24], rank = 3120 / 3120
    CPU time for w[ 24]    801.94 sec, wall time     37.23 sec
w[ 25], rank = 3120 / 3120
    CPU time for w[ 25]    813.88 sec, wall time     37.36 sec
w[ 26], rank = 3120 / 3120
    CPU time for w[ 26]    788.98 sec, wall time     36.48 sec
w[ 27], rank = 3120 / 3120
    CPU time for w[ 27]    789.30 sec, wall time     35.90 sec
w[ 28], rank = 3120 / 3120
    CPU time for w[ 28]    799.55 sec, wall time     37.03 sec
w[ 29], rank = 3120 / 3120
    CPU time for w[ 29]    824.15 sec, wall time     38.58 sec
w[ 30], rank = 3120 / 3120
    CPU time for w[ 30]   1971.07 sec, wall time     76.89 sec
w[ 31], rank = 3120 / 3120
    CPU time for w[ 31]   4848.81 sec, wall time    172.46 sec
w[ 32], rank = 3120 / 3120
    CPU time for w[ 32]   2210.66 sec, wall time     82.68 sec
w[ 33], rank = 3120 / 3120
    CPU time for w[ 33]   2395.38 sec, wall time     90.87 sec
w[ 34], rank = 3120 / 3120
    CPU time for w[ 34]   3488.05 sec, wall time    124.06 sec
w[ 35], rank = 3120 / 3120
    CPU time for w[ 35]   3143.73 sec, wall time    114.97 sec
w[ 36], rank = 3120 / 3120
    CPU time for w[ 36]   2536.16 sec, wall time     94.92 sec
w[ 37], rank = 3120 / 3120
    CPU time for w[ 37]   4945.25 sec, wall time    178.31 sec
w[ 38], rank = 3120 / 3120
    CPU time for w[ 38]   4669.58 sec, wall time    169.43 sec
w[ 39], rank = 3120 / 3120
    CPU time for w[ 39]    987.59 sec, wall time     42.57 sec
w[ 40], rank = 3120 / 3120
    CPU time for w[ 40]    789.38 sec, wall time     34.67 sec
w[ 41], rank = 3120 / 3120
    CPU time for w[ 41]    788.81 sec, wall time     35.65 sec
w[ 42], rank = 3120 / 3120
    CPU time for w[ 42]    787.09 sec, wall time     34.49 sec
w[ 43], rank = 3120 / 3120
    CPU time for w[ 43]    792.91 sec, wall time     35.77 sec
w[ 44], rank = 3120 / 3120
    CPU time for w[ 44]    788.69 sec, wall time     35.83 sec
w[ 45], rank = 3120 / 3120
    CPU time for w[ 45]    795.22 sec, wall time     36.27 sec
w[ 46], rank = 3120 / 3120
    CPU time for w[ 46]    790.19 sec, wall time     35.84 sec
w[ 47], rank = 3120 / 3120
    CPU time for w[ 47]    791.29 sec, wall time     36.10 sec
w[ 48], rank = 3120 / 3120
    CPU time for w[ 48]    789.58 sec, wall time     35.96 sec
w[ 49], rank = 3120 / 3120
    CPU time for w[ 49]    789.16 sec, wall time     35.98 sec
w[ 50], rank = 3120 / 3120
    CPU time for w[ 50]    789.06 sec, wall time     35.85 sec
w[ 51], rank = 3120 / 3120
    CPU time for w[ 51]    788.76 sec, wall time     36.53 sec
w[ 52], rank = 3120 / 3120
    CPU time for w[ 52]    791.22 sec, wall time     36.29 sec
w[ 53], rank = 3120 / 3120
    CPU time for w[ 53]    795.29 sec, wall time     36.32 sec
w[ 54], rank = 3120 / 3120
    CPU time for w[ 54]    800.39 sec, wall time     36.54 sec
w[ 55], rank = 3120 / 3120
    CPU time for w[ 55]    793.51 sec, wall time     36.27 sec
w[ 56], rank = 3120 / 3120
    CPU time for w[ 56]    803.80 sec, wall time     36.38 sec
w[ 57], rank = 3120 / 3120
    CPU time for w[ 57]    797.98 sec, wall time     36.32 sec
w[ 58], rank = 3120 / 3120
    CPU time for w[ 58]    796.81 sec, wall time     36.02 sec
w[ 59], rank = 3120 / 3120
    CPU time for w[ 59]    795.51 sec, wall time     36.12 sec
w[ 60], rank = 3120 / 3120
    CPU time for w[ 60]    797.16 sec, wall time     36.28 sec
w[ 61], rank = 3120 / 3120
    CPU time for w[ 61]    808.32 sec, wall time     36.57 sec
w[ 62], rank = 3120 / 3120
    CPU time for w[ 62]    799.18 sec, wall time     36.39 sec
w[ 63], rank = 3120 / 3120
    CPU time for w[ 63]    800.47 sec, wall time     36.27 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46826823/tmp.chk
    CPU time for building ISDF 100707.94 sec, wall time   4266.17 sec
