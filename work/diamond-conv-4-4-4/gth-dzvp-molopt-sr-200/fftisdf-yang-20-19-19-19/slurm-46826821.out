OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826821/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826821/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  c0 tol m0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.041 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  20.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    511.05 sec, wall time     18.88 sec
Pivoted Cholesky rank = 4231, nip = 2080, estimated error = 6.04e-03
Number of interpolation points = 2080, effective CISDF =  20.00
    CPU time for building left-hand side     38.44 sec, wall time      2.99 sec

kpt = 64, ngrid = 91125, nao = 104
ngrid = 91125, blksize = 11301, nip = 2080
required disk space = 194 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-19-19-19/46826821/o4wjwhsu
blksize = 11301, memory for aoR_loop = 24070 MB
finished aoR_loop[       0:   11301]
finished aoR_loop[   11301:   22602]
finished aoR_loop[   22602:   33903]
finished aoR_loop[   33903:   45204]
finished aoR_loop[   45204:   56505]
finished aoR_loop[   56505:   67806]
finished aoR_loop[   67806:   79107]
finished aoR_loop[   79107:   90408]
finished aoR_loop[   90408:   91125]
    CPU time for building right-hand side   1337.48 sec, wall time    217.18 sec
w[  0], rank = 2080 / 2080
    CPU time for w[  0]    393.06 sec, wall time     32.17 sec
w[  1], rank = 2080 / 2080
    CPU time for w[  1]    387.93 sec, wall time     19.37 sec
w[  2], rank = 2080 / 2080
    CPU time for w[  2]    381.53 sec, wall time     18.36 sec
w[  3], rank = 2080 / 2080
    CPU time for w[  3]    387.64 sec, wall time     19.36 sec
w[  4], rank = 2080 / 2080
    CPU time for w[  4]    389.77 sec, wall time     19.52 sec
w[  5], rank = 2080 / 2080
    CPU time for w[  5]    388.26 sec, wall time     19.54 sec
w[  6], rank = 2080 / 2080
    CPU time for w[  6]    391.29 sec, wall time     19.51 sec
w[  7], rank = 2080 / 2080
    CPU time for w[  7]    385.21 sec, wall time     19.43 sec
w[  8], rank = 2080 / 2080
    CPU time for w[  8]    387.02 sec, wall time     18.52 sec
w[  9], rank = 2080 / 2080
    CPU time for w[  9]    387.75 sec, wall time     19.30 sec
w[ 10], rank = 2080 / 2080
    CPU time for w[ 10]    385.69 sec, wall time     18.53 sec
w[ 11], rank = 2080 / 2080
    CPU time for w[ 11]    388.43 sec, wall time     19.37 sec
w[ 12], rank = 2080 / 2080
    CPU time for w[ 12]    384.18 sec, wall time     19.30 sec
w[ 13], rank = 2080 / 2080
    CPU time for w[ 13]    389.25 sec, wall time     19.51 sec
w[ 14], rank = 2080 / 2080
    CPU time for w[ 14]    388.91 sec, wall time     19.43 sec
w[ 15], rank = 2080 / 2080
    CPU time for w[ 15]    385.34 sec, wall time     19.40 sec
w[ 16], rank = 2080 / 2080
    CPU time for w[ 16]    386.72 sec, wall time     19.51 sec
w[ 17], rank = 2080 / 2080
    CPU time for w[ 17]    389.57 sec, wall time     19.64 sec
w[ 18], rank = 2080 / 2080
    CPU time for w[ 18]    390.25 sec, wall time     19.56 sec
w[ 19], rank = 2080 / 2080
    CPU time for w[ 19]    399.35 sec, wall time     19.97 sec
w[ 20], rank = 2080 / 2080
    CPU time for w[ 20]    390.41 sec, wall time     19.83 sec
w[ 21], rank = 2080 / 2080
    CPU time for w[ 21]    389.72 sec, wall time     19.74 sec
w[ 22], rank = 2080 / 2080
    CPU time for w[ 22]    390.76 sec, wall time     19.79 sec
w[ 23], rank = 2080 / 2080
    CPU time for w[ 23]    387.17 sec, wall time     19.53 sec
w[ 24], rank = 2080 / 2080
    CPU time for w[ 24]    385.61 sec, wall time     19.31 sec
w[ 25], rank = 2080 / 2080
    CPU time for w[ 25]    393.77 sec, wall time     20.67 sec
w[ 26], rank = 2080 / 2080
    CPU time for w[ 26]    395.15 sec, wall time     19.82 sec
w[ 27], rank = 2080 / 2080
    CPU time for w[ 27]    405.41 sec, wall time     21.63 sec
w[ 28], rank = 2080 / 2080
    CPU time for w[ 28]    414.29 sec, wall time     21.23 sec
w[ 29], rank = 2080 / 2080
    CPU time for w[ 29]    406.51 sec, wall time     20.69 sec
w[ 30], rank = 2080 / 2080
    CPU time for w[ 30]    403.03 sec, wall time     20.35 sec
w[ 31], rank = 2080 / 2080
    CPU time for w[ 31]    402.29 sec, wall time     20.20 sec
w[ 32], rank = 2080 / 2080
    CPU time for w[ 32]    401.39 sec, wall time     19.26 sec
w[ 33], rank = 2080 / 2080
    CPU time for w[ 33]    411.74 sec, wall time     20.34 sec
w[ 34], rank = 2080 / 2080
    CPU time for w[ 34]    414.03 sec, wall time     19.80 sec
w[ 35], rank = 2080 / 2080
    CPU time for w[ 35]    413.87 sec, wall time     20.37 sec
w[ 36], rank = 2080 / 2080
    CPU time for w[ 36]    443.22 sec, wall time     21.40 sec
w[ 37], rank = 2080 / 2080
    CPU time for w[ 37]    409.42 sec, wall time     20.24 sec
w[ 38], rank = 2080 / 2080
    CPU time for w[ 38]    416.40 sec, wall time     20.48 sec
w[ 39], rank = 2080 / 2080
    CPU time for w[ 39]    412.36 sec, wall time     20.54 sec
w[ 40], rank = 2080 / 2080
    CPU time for w[ 40]    418.43 sec, wall time     19.91 sec
w[ 41], rank = 2080 / 2080
    CPU time for w[ 41]    404.77 sec, wall time     20.20 sec
w[ 42], rank = 2080 / 2080
    CPU time for w[ 42]    402.09 sec, wall time     19.33 sec
w[ 43], rank = 2080 / 2080
    CPU time for w[ 43]    402.13 sec, wall time     19.99 sec
w[ 44], rank = 2080 / 2080
    CPU time for w[ 44]    403.86 sec, wall time     20.29 sec
w[ 45], rank = 2080 / 2080
    CPU time for w[ 45]    404.33 sec, wall time     20.31 sec
w[ 46], rank = 2080 / 2080
    CPU time for w[ 46]    405.46 sec, wall time     20.31 sec
w[ 47], rank = 2080 / 2080
    CPU time for w[ 47]    406.65 sec, wall time     20.50 sec
w[ 48], rank = 2080 / 2080
    CPU time for w[ 48]    407.58 sec, wall time     20.48 sec
w[ 49], rank = 2080 / 2080
    CPU time for w[ 49]    407.90 sec, wall time     20.57 sec
w[ 50], rank = 2080 / 2080
    CPU time for w[ 50]    407.63 sec, wall time     20.40 sec
w[ 51], rank = 2080 / 2080
    CPU time for w[ 51]    403.54 sec, wall time     20.30 sec
w[ 52], rank = 2080 / 2080
    CPU time for w[ 52]    403.22 sec, wall time     20.31 sec
w[ 53], rank = 2080 / 2080
    CPU time for w[ 53]    403.63 sec, wall time     20.47 sec
w[ 54], rank = 2080 / 2080
    CPU time for w[ 54]    403.77 sec, wall time     20.40 sec
w[ 55], rank = 2080 / 2080
    CPU time for w[ 55]    405.24 sec, wall time     20.56 sec
w[ 56], rank = 2080 / 2080
    CPU time for w[ 56]    403.24 sec, wall time     20.21 sec
w[ 57], rank = 2080 / 2080
    CPU time for w[ 57]    402.00 sec, wall time     20.30 sec
w[ 58], rank = 2080 / 2080
    CPU time for w[ 58]    404.65 sec, wall time     20.25 sec
w[ 59], rank = 2080 / 2080
    CPU time for w[ 59]    400.69 sec, wall time     20.20 sec
w[ 60], rank = 2080 / 2080
    CPU time for w[ 60]    401.31 sec, wall time     20.30 sec
w[ 61], rank = 2080 / 2080
    CPU time for w[ 61]    403.67 sec, wall time     20.38 sec
w[ 62], rank = 2080 / 2080
    CPU time for w[ 62]    404.19 sec, wall time     20.43 sec
w[ 63], rank = 2080 / 2080
    CPU time for w[ 63]    402.21 sec, wall time     20.34 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826821/tmp.chk
    CPU time for building ISDF  27469.86 sec, wall time   1533.58 sec
