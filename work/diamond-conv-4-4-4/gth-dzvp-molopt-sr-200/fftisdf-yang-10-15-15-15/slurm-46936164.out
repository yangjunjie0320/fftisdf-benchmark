OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936164/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936164/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  tol m0 kmesh c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.041 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [15, 15, 15], ke_cutoff =  76.29
Final parent grid size = [15 15 15]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  10.00
Parent grid mesh = [15 15 15], grid size = 3375
    CPU time for select interpolation points    503.84 sec, wall time      8.22 sec
Pivoted Cholesky rank = 3186, nip = 1040, estimated error = 6.88e-02
Number of interpolation points = 1040, effective CISDF =  10.00
    CPU time for building left-hand side     38.96 sec, wall time      0.94 sec

kpt = 64, ngrid = 91125, nao = 104
ngrid = 91125, blksize = 45995, nip = 1040
required disk space = 97 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936164/lhaequ5r
blksize = 45995, memory for aoR_loop = 48982 MB
finished aoR_loop[       0:   45995]
finished aoR_loop[   45995:   91125]
    CPU time for building right-hand side   1064.24 sec, wall time    108.24 sec
w[  0], rank = 1040 / 1040
    CPU time for w[  0]    272.22 sec, wall time      9.03 sec
w[  1], rank = 1040 / 1040
    CPU time for w[  1]    295.18 sec, wall time      8.43 sec
w[  2], rank = 1040 / 1040
    CPU time for w[  2]    259.55 sec, wall time      7.38 sec
w[  3], rank = 1040 / 1040
    CPU time for w[  3]    348.58 sec, wall time      9.30 sec
w[  4], rank = 1040 / 1040
    CPU time for w[  4]    280.35 sec, wall time      7.96 sec
w[  5], rank = 1040 / 1040
    CPU time for w[  5]    266.78 sec, wall time      7.83 sec
w[  6], rank = 1040 / 1040
    CPU time for w[  6]    285.25 sec, wall time      8.06 sec
w[  7], rank = 1040 / 1040
    CPU time for w[  7]    268.20 sec, wall time      7.88 sec
w[  8], rank = 1040 / 1040
    CPU time for w[  8]    265.82 sec, wall time      7.44 sec
w[  9], rank = 1040 / 1040
    CPU time for w[  9]    343.15 sec, wall time      9.02 sec
w[ 10], rank = 1040 / 1040
    CPU time for w[ 10]    262.51 sec, wall time      7.29 sec
w[ 11], rank = 1040 / 1040
    CPU time for w[ 11]    398.58 sec, wall time      9.95 sec
w[ 12], rank = 1040 / 1040
    CPU time for w[ 12]    276.39 sec, wall time      8.02 sec
w[ 13], rank = 1040 / 1040
    CPU time for w[ 13]    267.32 sec, wall time      7.91 sec
w[ 14], rank = 1040 / 1040
    CPU time for w[ 14]    261.61 sec, wall time      7.69 sec
w[ 15], rank = 1040 / 1040
    CPU time for w[ 15]    275.38 sec, wall time      8.12 sec
w[ 16], rank = 1040 / 1040
    CPU time for w[ 16]    267.71 sec, wall time      7.74 sec
w[ 17], rank = 1040 / 1040
    CPU time for w[ 17]    337.72 sec, wall time      9.12 sec
w[ 18], rank = 1040 / 1040
    CPU time for w[ 18]    269.38 sec, wall time      7.91 sec
w[ 19], rank = 1040 / 1040
    CPU time for w[ 19]    265.33 sec, wall time      7.84 sec
w[ 20], rank = 1040 / 1040
    CPU time for w[ 20]    260.77 sec, wall time      7.78 sec
w[ 21], rank = 1040 / 1040
    CPU time for w[ 21]    260.26 sec, wall time      7.79 sec
w[ 22], rank = 1040 / 1040
    CPU time for w[ 22]    260.95 sec, wall time      7.81 sec
w[ 23], rank = 1040 / 1040
    CPU time for w[ 23]    296.17 sec, wall time      8.41 sec
w[ 24], rank = 1040 / 1040
    CPU time for w[ 24]    265.32 sec, wall time      7.82 sec
w[ 25], rank = 1040 / 1040
    CPU time for w[ 25]    278.59 sec, wall time      8.24 sec
w[ 26], rank = 1040 / 1040
    CPU time for w[ 26]    266.82 sec, wall time      7.83 sec
w[ 27], rank = 1040 / 1040
    CPU time for w[ 27]    411.47 sec, wall time     10.46 sec
w[ 28], rank = 1040 / 1040
    CPU time for w[ 28]    264.01 sec, wall time      7.88 sec
w[ 29], rank = 1040 / 1040
    CPU time for w[ 29]    368.77 sec, wall time      9.65 sec
w[ 30], rank = 1040 / 1040
    CPU time for w[ 30]    295.09 sec, wall time      8.44 sec
w[ 31], rank = 1040 / 1040
    CPU time for w[ 31]    263.05 sec, wall time      7.85 sec
w[ 32], rank = 1040 / 1040
    CPU time for w[ 32]    261.42 sec, wall time      7.28 sec
w[ 33], rank = 1040 / 1040
    CPU time for w[ 33]    262.81 sec, wall time      7.76 sec
w[ 34], rank = 1040 / 1040
    CPU time for w[ 34]    276.72 sec, wall time      7.62 sec
w[ 35], rank = 1040 / 1040
    CPU time for w[ 35]    262.33 sec, wall time      7.70 sec
w[ 36], rank = 1040 / 1040
    CPU time for w[ 36]    263.02 sec, wall time      7.68 sec
w[ 37], rank = 1040 / 1040
    CPU time for w[ 37]    416.61 sec, wall time     10.33 sec
w[ 38], rank = 1040 / 1040
    CPU time for w[ 38]    265.03 sec, wall time      7.66 sec
w[ 39], rank = 1040 / 1040
    CPU time for w[ 39]    261.39 sec, wall time      7.75 sec
w[ 40], rank = 1040 / 1040
    CPU time for w[ 40]    258.88 sec, wall time      7.22 sec
w[ 41], rank = 1040 / 1040
    CPU time for w[ 41]    265.56 sec, wall time      7.69 sec
w[ 42], rank = 1040 / 1040
    CPU time for w[ 42]    258.49 sec, wall time      7.24 sec
w[ 43], rank = 1040 / 1040
    CPU time for w[ 43]    258.05 sec, wall time      7.59 sec
w[ 44], rank = 1040 / 1040
    CPU time for w[ 44]    262.11 sec, wall time      7.63 sec
w[ 45], rank = 1040 / 1040
    CPU time for w[ 45]    267.10 sec, wall time      7.83 sec
w[ 46], rank = 1040 / 1040
    CPU time for w[ 46]    291.66 sec, wall time      8.16 sec
w[ 47], rank = 1040 / 1040
    CPU time for w[ 47]    269.71 sec, wall time      8.01 sec
w[ 48], rank = 1040 / 1040
    CPU time for w[ 48]   1418.64 sec, wall time     26.11 sec
w[ 49], rank = 1040 / 1040
    CPU time for w[ 49]    263.59 sec, wall time      7.78 sec
w[ 50], rank = 1040 / 1040
    CPU time for w[ 50]    262.70 sec, wall time      7.74 sec
w[ 51], rank = 1040 / 1040
    CPU time for w[ 51]    264.35 sec, wall time      7.88 sec
w[ 52], rank = 1040 / 1040
    CPU time for w[ 52]    369.22 sec, wall time      9.69 sec
w[ 53], rank = 1040 / 1040
    CPU time for w[ 53]    328.77 sec, wall time      9.07 sec
w[ 54], rank = 1040 / 1040
    CPU time for w[ 54]    266.31 sec, wall time      8.00 sec
w[ 55], rank = 1040 / 1040
    CPU time for w[ 55]    266.87 sec, wall time      7.93 sec
w[ 56], rank = 1040 / 1040
    CPU time for w[ 56]    294.56 sec, wall time      8.57 sec
w[ 57], rank = 1040 / 1040
    CPU time for w[ 57]    261.27 sec, wall time      7.80 sec
w[ 58], rank = 1040 / 1040
    CPU time for w[ 58]    295.61 sec, wall time      8.43 sec
w[ 59], rank = 1040 / 1040
    CPU time for w[ 59]    280.96 sec, wall time      8.33 sec
w[ 60], rank = 1040 / 1040
    CPU time for w[ 60]    263.57 sec, wall time      7.85 sec
w[ 61], rank = 1040 / 1040
    CPU time for w[ 61]    267.41 sec, wall time      8.03 sec
w[ 62], rank = 1040 / 1040
    CPU time for w[ 62]    288.51 sec, wall time      8.39 sec
w[ 63], rank = 1040 / 1040
    CPU time for w[ 63]    262.89 sec, wall time      7.88 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-10-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936164/tmp.chk
    CPU time for building ISDF  20939.42 sec, wall time    657.39 sec
