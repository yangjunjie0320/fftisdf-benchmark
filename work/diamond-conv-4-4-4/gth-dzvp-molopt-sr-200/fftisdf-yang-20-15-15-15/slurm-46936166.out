OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936166/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936166/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  c0 m0 tol kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.041 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [15, 15, 15], ke_cutoff =  76.29
Final parent grid size = [15 15 15]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  20.00
Parent grid mesh = [15 15 15], grid size = 3375
    CPU time for select interpolation points    473.09 sec, wall time      7.63 sec
Pivoted Cholesky rank = 3186, nip = 2080, estimated error = 3.27e-03
Number of interpolation points = 2080, effective CISDF =  20.00
    CPU time for building left-hand side    104.45 sec, wall time      3.54 sec

kpt = 64, ngrid = 91125, nao = 104
ngrid = 91125, blksize = 22833, nip = 2080
required disk space = 194 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936166/muf8agrc
blksize = 22833, memory for aoR_loop = 48632 MB
finished aoR_loop[       0:   22833]
finished aoR_loop[   22833:   45666]
finished aoR_loop[   45666:   68499]
finished aoR_loop[   68499:   91125]
    CPU time for building right-hand side   1816.07 sec, wall time    210.90 sec
w[  0], rank = 2080 / 2080
    CPU time for w[  0]    711.23 sec, wall time     24.54 sec
w[  1], rank = 2080 / 2080
    CPU time for w[  1]    711.63 sec, wall time     18.73 sec
w[  2], rank = 2080 / 2080
    CPU time for w[  2]    711.57 sec, wall time     17.83 sec
w[  3], rank = 2080 / 2080
    CPU time for w[  3]    710.56 sec, wall time     18.70 sec
w[  4], rank = 2080 / 2080
    CPU time for w[  4]    711.57 sec, wall time     18.68 sec
w[  5], rank = 2080 / 2080
    CPU time for w[  5]    716.33 sec, wall time     19.01 sec
w[  6], rank = 2080 / 2080
    CPU time for w[  6]    720.27 sec, wall time     19.00 sec
w[  7], rank = 2080 / 2080
    CPU time for w[  7]    792.59 sec, wall time     20.30 sec
w[  8], rank = 2080 / 2080
    CPU time for w[  8]    902.10 sec, wall time     21.20 sec
w[  9], rank = 2080 / 2080
    CPU time for w[  9]    811.11 sec, wall time     20.56 sec
w[ 10], rank = 2080 / 2080
    CPU time for w[ 10]    834.76 sec, wall time     20.07 sec
w[ 11], rank = 2080 / 2080
    CPU time for w[ 11]    788.77 sec, wall time     20.26 sec
w[ 12], rank = 2080 / 2080
    CPU time for w[ 12]    703.76 sec, wall time     19.24 sec
w[ 13], rank = 2080 / 2080
    CPU time for w[ 13]    717.97 sec, wall time     19.16 sec
w[ 14], rank = 2080 / 2080
    CPU time for w[ 14]    855.02 sec, wall time     21.29 sec
w[ 15], rank = 2080 / 2080
    CPU time for w[ 15]    708.38 sec, wall time     19.01 sec
w[ 16], rank = 2080 / 2080
    CPU time for w[ 16]    728.22 sec, wall time     19.12 sec
w[ 17], rank = 2080 / 2080
    CPU time for w[ 17]   1085.88 sec, wall time     25.06 sec
w[ 18], rank = 2080 / 2080
    CPU time for w[ 18]    779.10 sec, wall time     19.96 sec
w[ 19], rank = 2080 / 2080
    CPU time for w[ 19]   2591.96 sec, wall time     49.77 sec
w[ 20], rank = 2080 / 2080
    CPU time for w[ 20]    722.53 sec, wall time     19.30 sec
w[ 21], rank = 2080 / 2080
    CPU time for w[ 21]    726.41 sec, wall time     19.14 sec
w[ 22], rank = 2080 / 2080
    CPU time for w[ 22]    722.19 sec, wall time     19.08 sec
w[ 23], rank = 2080 / 2080
    CPU time for w[ 23]    721.92 sec, wall time     19.21 sec
w[ 24], rank = 2080 / 2080
    CPU time for w[ 24]    711.54 sec, wall time     18.66 sec
w[ 25], rank = 2080 / 2080
    CPU time for w[ 25]    728.02 sec, wall time     19.33 sec
w[ 26], rank = 2080 / 2080
    CPU time for w[ 26]    960.45 sec, wall time     22.96 sec
w[ 27], rank = 2080 / 2080
    CPU time for w[ 27]    731.55 sec, wall time     19.39 sec
w[ 28], rank = 2080 / 2080
    CPU time for w[ 28]    714.81 sec, wall time     18.98 sec
w[ 29], rank = 2080 / 2080
    CPU time for w[ 29]    718.32 sec, wall time     19.10 sec
w[ 30], rank = 2080 / 2080
    CPU time for w[ 30]    714.11 sec, wall time     19.00 sec
w[ 31], rank = 2080 / 2080
    CPU time for w[ 31]    710.69 sec, wall time     18.88 sec
w[ 32], rank = 2080 / 2080
    CPU time for w[ 32]    721.25 sec, wall time     17.99 sec
w[ 33], rank = 2080 / 2080
    CPU time for w[ 33]    718.25 sec, wall time     18.89 sec
w[ 34], rank = 2080 / 2080
    CPU time for w[ 34]    724.23 sec, wall time     18.17 sec
w[ 35], rank = 2080 / 2080
    CPU time for w[ 35]    723.76 sec, wall time     19.02 sec
w[ 36], rank = 2080 / 2080
    CPU time for w[ 36]    769.14 sec, wall time     20.47 sec
w[ 37], rank = 2080 / 2080
    CPU time for w[ 37]   4297.56 sec, wall time     77.26 sec
w[ 38], rank = 2080 / 2080
    CPU time for w[ 38]    711.31 sec, wall time     18.62 sec
w[ 39], rank = 2080 / 2080
    CPU time for w[ 39]    716.73 sec, wall time     18.90 sec
w[ 40], rank = 2080 / 2080
    CPU time for w[ 40]    799.73 sec, wall time     19.26 sec
w[ 41], rank = 2080 / 2080
    CPU time for w[ 41]    718.60 sec, wall time     18.81 sec
w[ 42], rank = 2080 / 2080
    CPU time for w[ 42]    685.31 sec, wall time     17.70 sec
w[ 43], rank = 2080 / 2080
    CPU time for w[ 43]    700.88 sec, wall time     18.57 sec
w[ 44], rank = 2080 / 2080
    CPU time for w[ 44]    711.66 sec, wall time     18.69 sec
w[ 45], rank = 2080 / 2080
    CPU time for w[ 45]    710.64 sec, wall time     18.75 sec
w[ 46], rank = 2080 / 2080
    CPU time for w[ 46]    714.00 sec, wall time     18.70 sec
w[ 47], rank = 2080 / 2080
    CPU time for w[ 47]    719.27 sec, wall time     19.12 sec
w[ 48], rank = 2080 / 2080
    CPU time for w[ 48]    791.84 sec, wall time     19.91 sec
w[ 49], rank = 2080 / 2080
    CPU time for w[ 49]    719.01 sec, wall time     18.95 sec
w[ 50], rank = 2080 / 2080
    CPU time for w[ 50]    783.27 sec, wall time     19.98 sec
w[ 51], rank = 2080 / 2080
    CPU time for w[ 51]    718.43 sec, wall time     19.13 sec
w[ 52], rank = 2080 / 2080
    CPU time for w[ 52]    714.74 sec, wall time     18.87 sec
w[ 53], rank = 2080 / 2080
    CPU time for w[ 53]    711.79 sec, wall time     18.93 sec
w[ 54], rank = 2080 / 2080
    CPU time for w[ 54]    717.13 sec, wall time     19.12 sec
w[ 55], rank = 2080 / 2080
    CPU time for w[ 55]    705.49 sec, wall time     18.95 sec
w[ 56], rank = 2080 / 2080
    CPU time for w[ 56]    778.69 sec, wall time     19.98 sec
w[ 57], rank = 2080 / 2080
    CPU time for w[ 57]    713.53 sec, wall time     18.89 sec
w[ 58], rank = 2080 / 2080
    CPU time for w[ 58]    765.43 sec, wall time     19.82 sec
w[ 59], rank = 2080 / 2080
    CPU time for w[ 59]    732.96 sec, wall time     19.26 sec
w[ 60], rank = 2080 / 2080
    CPU time for w[ 60]    775.13 sec, wall time     20.12 sec
w[ 61], rank = 2080 / 2080
    CPU time for w[ 61]    730.25 sec, wall time     19.26 sec
w[ 62], rank = 2080 / 2080
    CPU time for w[ 62]    889.00 sec, wall time     21.88 sec
w[ 63], rank = 2080 / 2080
    CPU time for w[ 63]    870.70 sec, wall time     21.96 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-15-15-15-diamond-conv-4-4-4-gth-dzvp-molopt-sr/46936166/tmp.chk
    CPU time for building ISDF  55854.37 sec, wall time   1563.93 sec
