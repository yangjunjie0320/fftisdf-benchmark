OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905041/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905041/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  m0 kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 15 Eh.
Recommended ke_cutoff/mesh are 529.952 / [71 71 71].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  10.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    484.26 sec, wall time     18.58 sec
Pivoted Cholesky rank = 2083, nip = 320, estimated error = 1.35e-01
Number of interpolation points = 320, effective CISDF =  10.00
    CPU time for building left-hand side     19.22 sec, wall time      0.62 sec

kpt = 64, ngrid = 3375, nao = 32
ngrid = 3375, blksize = 74909, nip = 320
required disk space = 1 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-19-19-19/46905041/iujkd2vm
blksize = 74909, memory for aoR_loop = 24546 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side     32.56 sec, wall time      2.02 sec
w[  0], rank =  320 /  320
    CPU time for w[  0]     12.89 sec, wall time      0.41 sec
w[  1], rank =  320 /  320
    CPU time for w[  1]      4.94 sec, wall time      0.16 sec
w[  2], rank =  320 /  320
    CPU time for w[  2]      4.91 sec, wall time      0.15 sec
w[  3], rank =  320 /  320
    CPU time for w[  3]      4.91 sec, wall time      0.15 sec
w[  4], rank =  320 /  320
    CPU time for w[  4]      4.84 sec, wall time      0.15 sec
w[  5], rank =  320 /  320
    CPU time for w[  5]      4.81 sec, wall time      0.15 sec
w[  6], rank =  320 /  320
    CPU time for w[  6]     14.47 sec, wall time      0.47 sec
w[  7], rank =  320 /  320
    CPU time for w[  7]     37.92 sec, wall time      1.22 sec
w[  8], rank =  320 /  320
    CPU time for w[  8]      4.81 sec, wall time      0.15 sec
w[  9], rank =  320 /  320
    CPU time for w[  9]      4.78 sec, wall time      0.15 sec
w[ 10], rank =  320 /  320
    CPU time for w[ 10]      4.75 sec, wall time      0.15 sec
w[ 11], rank =  320 /  320
    CPU time for w[ 11]      4.88 sec, wall time      0.15 sec
w[ 12], rank =  320 /  320
    CPU time for w[ 12]      4.91 sec, wall time      0.15 sec
w[ 13], rank =  320 /  320
    CPU time for w[ 13]      4.97 sec, wall time      0.16 sec
w[ 14], rank =  320 /  320
    CPU time for w[ 14]      4.97 sec, wall time      0.16 sec
w[ 15], rank =  320 /  320
    CPU time for w[ 15]      4.91 sec, wall time      0.15 sec
w[ 16], rank =  320 /  320
    CPU time for w[ 16]      4.88 sec, wall time      0.15 sec
w[ 17], rank =  320 /  320
    CPU time for w[ 17]      4.88 sec, wall time      0.15 sec
w[ 18], rank =  320 /  320
    CPU time for w[ 18]      4.91 sec, wall time      0.15 sec
w[ 19], rank =  320 /  320
    CPU time for w[ 19]      4.84 sec, wall time      0.15 sec
w[ 20], rank =  320 /  320
    CPU time for w[ 20]      4.94 sec, wall time      0.15 sec
w[ 21], rank =  320 /  320
    CPU time for w[ 21]      4.91 sec, wall time      0.15 sec
w[ 22], rank =  320 /  320
    CPU time for w[ 22]      4.94 sec, wall time      0.15 sec
w[ 23], rank =  320 /  320
    CPU time for w[ 23]      4.91 sec, wall time      0.15 sec
w[ 24], rank =  320 /  320
    CPU time for w[ 24]      4.91 sec, wall time      0.15 sec
w[ 25], rank =  320 /  320
    CPU time for w[ 25]      5.07 sec, wall time      0.16 sec
w[ 26], rank =  320 /  320
    CPU time for w[ 26]      5.81 sec, wall time      0.18 sec
w[ 27], rank =  320 /  320
    CPU time for w[ 27]      4.84 sec, wall time      0.15 sec
w[ 28], rank =  320 /  320
    CPU time for w[ 28]      5.00 sec, wall time      0.16 sec
w[ 29], rank =  320 /  320
    CPU time for w[ 29]      4.91 sec, wall time      0.15 sec
w[ 30], rank =  320 /  320
    CPU time for w[ 30]      5.02 sec, wall time      0.16 sec
w[ 31], rank =  320 /  320
    CPU time for w[ 31]      5.06 sec, wall time      0.16 sec
w[ 32], rank =  320 /  320
    CPU time for w[ 32]      4.77 sec, wall time      0.15 sec
w[ 33], rank =  320 /  320
    CPU time for w[ 33]      4.85 sec, wall time      0.15 sec
w[ 34], rank =  320 /  320
    CPU time for w[ 34]      4.78 sec, wall time      0.15 sec
w[ 35], rank =  320 /  320
    CPU time for w[ 35]      4.88 sec, wall time      0.15 sec
w[ 36], rank =  320 /  320
    CPU time for w[ 36]      5.04 sec, wall time      0.16 sec
w[ 37], rank =  320 /  320
    CPU time for w[ 37]      4.84 sec, wall time      0.15 sec
w[ 38], rank =  320 /  320
    CPU time for w[ 38]      4.81 sec, wall time      0.15 sec
w[ 39], rank =  320 /  320
    CPU time for w[ 39]      4.88 sec, wall time      0.15 sec
w[ 40], rank =  320 /  320
    CPU time for w[ 40]      4.75 sec, wall time      0.15 sec
w[ 41], rank =  320 /  320
    CPU time for w[ 41]      4.78 sec, wall time      0.15 sec
w[ 42], rank =  320 /  320
    CPU time for w[ 42]      4.78 sec, wall time      0.15 sec
w[ 43], rank =  320 /  320
    CPU time for w[ 43]      4.88 sec, wall time      0.15 sec
w[ 44], rank =  320 /  320
    CPU time for w[ 44]      4.91 sec, wall time      0.15 sec
w[ 45], rank =  320 /  320
    CPU time for w[ 45]      4.91 sec, wall time      0.15 sec
w[ 46], rank =  320 /  320
    CPU time for w[ 46]      5.04 sec, wall time      0.16 sec
w[ 47], rank =  320 /  320
    CPU time for w[ 47]      4.81 sec, wall time      0.15 sec
w[ 48], rank =  320 /  320
    CPU time for w[ 48]      4.81 sec, wall time      0.15 sec
w[ 49], rank =  320 /  320
    CPU time for w[ 49]      4.94 sec, wall time      0.15 sec
w[ 50], rank =  320 /  320
    CPU time for w[ 50]      4.91 sec, wall time      0.15 sec
w[ 51], rank =  320 /  320
    CPU time for w[ 51]      4.88 sec, wall time      0.15 sec
w[ 52], rank =  320 /  320
    CPU time for w[ 52]      5.10 sec, wall time      0.16 sec
w[ 53], rank =  320 /  320
    CPU time for w[ 53]      4.91 sec, wall time      0.15 sec
w[ 54], rank =  320 /  320
    CPU time for w[ 54]      9.84 sec, wall time      0.32 sec
w[ 55], rank =  320 /  320
    CPU time for w[ 55]      4.53 sec, wall time      0.14 sec
w[ 56], rank =  320 /  320
    CPU time for w[ 56]      4.65 sec, wall time      0.15 sec
w[ 57], rank =  320 /  320
    CPU time for w[ 57]      4.43 sec, wall time      0.14 sec
w[ 58], rank =  320 /  320
    CPU time for w[ 58]      6.38 sec, wall time      0.20 sec
w[ 59], rank =  320 /  320
    CPU time for w[ 59]      4.37 sec, wall time      0.14 sec
w[ 60], rank =  320 /  320
    CPU time for w[ 60]      4.49 sec, wall time      0.14 sec
w[ 61], rank =  320 /  320
    CPU time for w[ 61]      4.49 sec, wall time      0.14 sec
w[ 62], rank =  320 /  320
    CPU time for w[ 62]      4.37 sec, wall time      0.14 sec
w[ 63], rank =  320 /  320
    CPU time for w[ 63]      4.53 sec, wall time      0.14 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905041/tmp.chk
    CPU time for building ISDF    909.14 sec, wall time     33.19 sec
