OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905073/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905073/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh tol m0 c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 29 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  20.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    549.10 sec, wall time     20.71 sec
Pivoted Cholesky rank = 4231, nip = 2080, estimated error = 6.04e-03
Number of interpolation points = 2080, effective CISDF =  20.00
    CPU time for building left-hand side     43.64 sec, wall time      3.62 sec

kpt = 64, ngrid = 3375, nao = 104
ngrid = 3375, blksize = 11306, nip = 2080
required disk space = 7 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-19-19-19/46905073/usf1fozn
blksize = 11306, memory for aoR_loop = 24080 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side     73.54 sec, wall time      9.04 sec
w[  0], rank = 2080 / 2080
    CPU time for w[  0]     49.09 sec, wall time      1.79 sec
w[  1], rank = 2080 / 2080
    CPU time for w[  1]     47.87 sec, wall time      1.77 sec
w[  2], rank = 2080 / 2080
    CPU time for w[  2]     44.18 sec, wall time      1.63 sec
w[  3], rank = 2080 / 2080
    CPU time for w[  3]     46.36 sec, wall time      1.74 sec
w[  4], rank = 2080 / 2080
    CPU time for w[  4]     44.88 sec, wall time      1.66 sec
w[  5], rank = 2080 / 2080
    CPU time for w[  5]     47.06 sec, wall time      1.79 sec
w[  6], rank = 2080 / 2080
    CPU time for w[  6]     48.21 sec, wall time      1.79 sec
w[  7], rank = 2080 / 2080
    CPU time for w[  7]     50.21 sec, wall time      1.94 sec
w[  8], rank = 2080 / 2080
    CPU time for w[  8]     49.71 sec, wall time      1.79 sec
w[  9], rank = 2080 / 2080
    CPU time for w[  9]     48.23 sec, wall time      1.71 sec
w[ 10], rank = 2080 / 2080
    CPU time for w[ 10]     46.49 sec, wall time      1.64 sec
w[ 11], rank = 2080 / 2080
    CPU time for w[ 11]     49.01 sec, wall time      1.80 sec
w[ 12], rank = 2080 / 2080
    CPU time for w[ 12]     48.75 sec, wall time      1.82 sec
w[ 13], rank = 2080 / 2080
    CPU time for w[ 13]     44.04 sec, wall time      1.58 sec
w[ 14], rank = 2080 / 2080
    CPU time for w[ 14]     48.51 sec, wall time      1.81 sec
w[ 15], rank = 2080 / 2080
    CPU time for w[ 15]     41.41 sec, wall time      1.65 sec
w[ 16], rank = 2080 / 2080
    CPU time for w[ 16]     44.72 sec, wall time      1.61 sec
w[ 17], rank = 2080 / 2080
    CPU time for w[ 17]     45.31 sec, wall time      1.68 sec
w[ 18], rank = 2080 / 2080
    CPU time for w[ 18]     45.08 sec, wall time      1.60 sec
w[ 19], rank = 2080 / 2080
    CPU time for w[ 19]     48.83 sec, wall time      1.90 sec
w[ 20], rank = 2080 / 2080
    CPU time for w[ 20]     44.54 sec, wall time      1.68 sec
w[ 21], rank = 2080 / 2080
    CPU time for w[ 21]     46.43 sec, wall time      1.72 sec
w[ 22], rank = 2080 / 2080
    CPU time for w[ 22]     44.25 sec, wall time      1.56 sec
w[ 23], rank = 2080 / 2080
    CPU time for w[ 23]     63.07 sec, wall time      2.19 sec
w[ 24], rank = 2080 / 2080
    CPU time for w[ 24]     44.34 sec, wall time      1.54 sec
w[ 25], rank = 2080 / 2080
    CPU time for w[ 25]     45.96 sec, wall time      1.62 sec
w[ 26], rank = 2080 / 2080
    CPU time for w[ 26]     43.53 sec, wall time      1.70 sec
w[ 27], rank = 2080 / 2080
    CPU time for w[ 27]     44.44 sec, wall time      1.67 sec
w[ 28], rank = 2080 / 2080
    CPU time for w[ 28]     43.97 sec, wall time      1.60 sec
w[ 29], rank = 2080 / 2080
    CPU time for w[ 29]     46.47 sec, wall time      1.73 sec
w[ 30], rank = 2080 / 2080
    CPU time for w[ 30]     42.59 sec, wall time      1.58 sec
w[ 31], rank = 2080 / 2080
    CPU time for w[ 31]     45.38 sec, wall time      1.77 sec
w[ 32], rank = 2080 / 2080
    CPU time for w[ 32]     39.95 sec, wall time      1.41 sec
w[ 33], rank = 2080 / 2080
    CPU time for w[ 33]     41.53 sec, wall time      1.46 sec
w[ 34], rank = 2080 / 2080
    CPU time for w[ 34]     42.02 sec, wall time      1.49 sec
w[ 35], rank = 2080 / 2080
    CPU time for w[ 35]     54.19 sec, wall time      1.92 sec
w[ 36], rank = 2080 / 2080
    CPU time for w[ 36]     45.64 sec, wall time      1.66 sec
w[ 37], rank = 2080 / 2080
    CPU time for w[ 37]     53.19 sec, wall time      1.91 sec
w[ 38], rank = 2080 / 2080
    CPU time for w[ 38]     42.40 sec, wall time      1.53 sec
w[ 39], rank = 2080 / 2080
    CPU time for w[ 39]     48.00 sec, wall time      1.69 sec
w[ 40], rank = 2080 / 2080
    CPU time for w[ 40]     43.35 sec, wall time      1.46 sec
w[ 41], rank = 2080 / 2080
    CPU time for w[ 41]     50.66 sec, wall time      1.78 sec
w[ 42], rank = 2080 / 2080
    CPU time for w[ 42]     43.44 sec, wall time      1.49 sec
w[ 43], rank = 2080 / 2080
    CPU time for w[ 43]     44.26 sec, wall time      1.56 sec
w[ 44], rank = 2080 / 2080
    CPU time for w[ 44]     44.96 sec, wall time      1.66 sec
w[ 45], rank = 2080 / 2080
    CPU time for w[ 45]     43.80 sec, wall time      1.53 sec
w[ 46], rank = 2080 / 2080
    CPU time for w[ 46]     44.20 sec, wall time      1.54 sec
w[ 47], rank = 2080 / 2080
    CPU time for w[ 47]     48.14 sec, wall time      1.69 sec
w[ 48], rank = 2080 / 2080
    CPU time for w[ 48]     44.36 sec, wall time      1.62 sec
w[ 49], rank = 2080 / 2080
    CPU time for w[ 49]     48.64 sec, wall time      1.87 sec
w[ 50], rank = 2080 / 2080
    CPU time for w[ 50]     43.14 sec, wall time      1.55 sec
w[ 51], rank = 2080 / 2080
    CPU time for w[ 51]     46.53 sec, wall time      1.74 sec
w[ 52], rank = 2080 / 2080
    CPU time for w[ 52]     44.26 sec, wall time      1.55 sec
w[ 53], rank = 2080 / 2080
    CPU time for w[ 53]     45.90 sec, wall time      1.65 sec
w[ 54], rank = 2080 / 2080
    CPU time for w[ 54]     41.85 sec, wall time      1.68 sec
w[ 55], rank = 2080 / 2080
    CPU time for w[ 55]     45.76 sec, wall time      1.73 sec
w[ 56], rank = 2080 / 2080
    CPU time for w[ 56]     43.38 sec, wall time      1.56 sec
w[ 57], rank = 2080 / 2080
    CPU time for w[ 57]     42.84 sec, wall time      1.54 sec
w[ 58], rank = 2080 / 2080
    CPU time for w[ 58]     42.76 sec, wall time      1.52 sec
w[ 59], rank = 2080 / 2080
    CPU time for w[ 59]     43.23 sec, wall time      1.57 sec
w[ 60], rank = 2080 / 2080
    CPU time for w[ 60]     43.82 sec, wall time      1.56 sec
w[ 61], rank = 2080 / 2080
    CPU time for w[ 61]     44.17 sec, wall time      1.58 sec
w[ 62], rank = 2080 / 2080
    CPU time for w[ 62]     51.21 sec, wall time      1.88 sec
w[ 63], rank = 2080 / 2080
    CPU time for w[ 63]     44.27 sec, wall time      1.67 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905073/tmp.chk
    CPU time for building ISDF   3621.41 sec, wall time    143.64 sec
