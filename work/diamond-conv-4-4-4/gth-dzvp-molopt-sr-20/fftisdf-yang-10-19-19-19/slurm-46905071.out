OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905071/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905071/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  m0 tol kmesh c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 29 Eh.
Recommended ke_cutoff/mesh are 569.817 / [75 75 75].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 104, c0 =  10.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    548.17 sec, wall time     20.79 sec
Pivoted Cholesky rank = 4231, nip = 1040, estimated error = 9.24e-02
Number of interpolation points = 1040, effective CISDF =  10.00
    CPU time for building left-hand side     20.19 sec, wall time      1.01 sec

kpt = 64, ngrid = 3375, nao = 104
ngrid = 3375, blksize = 22934, nip = 1040
required disk space = 3 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-19-19-19/46905071/pw5j97z6
blksize = 22934, memory for aoR_loop = 24423 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side     59.22 sec, wall time      5.05 sec
w[  0], rank = 1040 / 1040
    CPU time for w[  0]     24.31 sec, wall time      0.83 sec
w[  1], rank = 1040 / 1040
    CPU time for w[  1]     19.90 sec, wall time      0.64 sec
w[  2], rank = 1040 / 1040
    CPU time for w[  2]     16.36 sec, wall time      0.51 sec
w[  3], rank = 1040 / 1040
    CPU time for w[  3]     21.72 sec, wall time      0.71 sec
w[  4], rank = 1040 / 1040
    CPU time for w[  4]     16.76 sec, wall time      0.53 sec
w[  5], rank = 1040 / 1040
    CPU time for w[  5]     16.88 sec, wall time      0.53 sec
w[  6], rank = 1040 / 1040
    CPU time for w[  6]     17.32 sec, wall time      0.54 sec
w[  7], rank = 1040 / 1040
    CPU time for w[  7]     17.90 sec, wall time      0.56 sec
w[  8], rank = 1040 / 1040
    CPU time for w[  8]     16.84 sec, wall time      0.53 sec
w[  9], rank = 1040 / 1040
    CPU time for w[  9]     17.70 sec, wall time      0.55 sec
w[ 10], rank = 1040 / 1040
    CPU time for w[ 10]     16.22 sec, wall time      0.51 sec
w[ 11], rank = 1040 / 1040
    CPU time for w[ 11]     20.59 sec, wall time      0.67 sec
w[ 12], rank = 1040 / 1040
    CPU time for w[ 12]     25.03 sec, wall time      0.85 sec
w[ 13], rank = 1040 / 1040
    CPU time for w[ 13]     15.89 sec, wall time      0.50 sec
w[ 14], rank = 1040 / 1040
    CPU time for w[ 14]     15.82 sec, wall time      0.50 sec
w[ 15], rank = 1040 / 1040
    CPU time for w[ 15]     16.11 sec, wall time      0.51 sec
w[ 16], rank = 1040 / 1040
    CPU time for w[ 16]     16.01 sec, wall time      0.50 sec
w[ 17], rank = 1040 / 1040
    CPU time for w[ 17]     16.32 sec, wall time      0.53 sec
w[ 18], rank = 1040 / 1040
    CPU time for w[ 18]     15.28 sec, wall time      0.48 sec
w[ 19], rank = 1040 / 1040
    CPU time for w[ 19]     15.46 sec, wall time      0.48 sec
w[ 20], rank = 1040 / 1040
    CPU time for w[ 20]     15.52 sec, wall time      0.49 sec
w[ 21], rank = 1040 / 1040
    CPU time for w[ 21]     15.71 sec, wall time      0.49 sec
w[ 22], rank = 1040 / 1040
    CPU time for w[ 22]     17.21 sec, wall time      0.59 sec
w[ 23], rank = 1040 / 1040
    CPU time for w[ 23]     16.33 sec, wall time      0.51 sec
w[ 24], rank = 1040 / 1040
    CPU time for w[ 24]     16.91 sec, wall time      0.53 sec
w[ 25], rank = 1040 / 1040
    CPU time for w[ 25]     17.07 sec, wall time      0.53 sec
w[ 26], rank = 1040 / 1040
    CPU time for w[ 26]     17.52 sec, wall time      0.55 sec
w[ 27], rank = 1040 / 1040
    CPU time for w[ 27]     18.29 sec, wall time      0.59 sec
w[ 28], rank = 1040 / 1040
    CPU time for w[ 28]     18.06 sec, wall time      0.58 sec
w[ 29], rank = 1040 / 1040
    CPU time for w[ 29]     18.34 sec, wall time      0.59 sec
w[ 30], rank = 1040 / 1040
    CPU time for w[ 30]     18.16 sec, wall time      0.58 sec
w[ 31], rank = 1040 / 1040
    CPU time for w[ 31]     18.18 sec, wall time      0.58 sec
w[ 32], rank = 1040 / 1040
    CPU time for w[ 32]     16.78 sec, wall time      0.53 sec
w[ 33], rank = 1040 / 1040
    CPU time for w[ 33]     18.21 sec, wall time      0.58 sec
w[ 34], rank = 1040 / 1040
    CPU time for w[ 34]     17.26 sec, wall time      0.54 sec
w[ 35], rank = 1040 / 1040
    CPU time for w[ 35]     18.24 sec, wall time      0.58 sec
w[ 36], rank = 1040 / 1040
    CPU time for w[ 36]     18.15 sec, wall time      0.57 sec
w[ 37], rank = 1040 / 1040
    CPU time for w[ 37]     17.86 sec, wall time      0.57 sec
w[ 38], rank = 1040 / 1040
    CPU time for w[ 38]     17.99 sec, wall time      0.57 sec
w[ 39], rank = 1040 / 1040
    CPU time for w[ 39]     17.70 sec, wall time      0.56 sec
w[ 40], rank = 1040 / 1040
    CPU time for w[ 40]     16.68 sec, wall time      0.52 sec
w[ 41], rank = 1040 / 1040
    CPU time for w[ 41]     17.39 sec, wall time      0.55 sec
w[ 42], rank = 1040 / 1040
    CPU time for w[ 42]     16.62 sec, wall time      0.52 sec
w[ 43], rank = 1040 / 1040
    CPU time for w[ 43]     16.59 sec, wall time      0.52 sec
w[ 44], rank = 1040 / 1040
    CPU time for w[ 44]     16.81 sec, wall time      0.53 sec
w[ 45], rank = 1040 / 1040
    CPU time for w[ 45]     24.59 sec, wall time      0.79 sec
w[ 46], rank = 1040 / 1040
    CPU time for w[ 46]     18.66 sec, wall time      0.59 sec
w[ 47], rank = 1040 / 1040
    CPU time for w[ 47]     18.04 sec, wall time      0.57 sec
w[ 48], rank = 1040 / 1040
    CPU time for w[ 48]     17.80 sec, wall time      0.56 sec
w[ 49], rank = 1040 / 1040
    CPU time for w[ 49]     17.86 sec, wall time      0.56 sec
w[ 50], rank = 1040 / 1040
    CPU time for w[ 50]     17.58 sec, wall time      0.55 sec
w[ 51], rank = 1040 / 1040
    CPU time for w[ 51]     17.93 sec, wall time      0.56 sec
w[ 52], rank = 1040 / 1040
    CPU time for w[ 52]     17.42 sec, wall time      0.55 sec
w[ 53], rank = 1040 / 1040
    CPU time for w[ 53]     17.95 sec, wall time      0.56 sec
w[ 54], rank = 1040 / 1040
    CPU time for w[ 54]     17.59 sec, wall time      0.55 sec
w[ 55], rank = 1040 / 1040
    CPU time for w[ 55]     18.17 sec, wall time      0.57 sec
w[ 56], rank = 1040 / 1040
    CPU time for w[ 56]     17.64 sec, wall time      0.55 sec
w[ 57], rank = 1040 / 1040
    CPU time for w[ 57]     16.93 sec, wall time      0.53 sec
w[ 58], rank = 1040 / 1040
    CPU time for w[ 58]     17.89 sec, wall time      0.56 sec
w[ 59], rank = 1040 / 1040
    CPU time for w[ 59]     18.00 sec, wall time      0.57 sec
w[ 60], rank = 1040 / 1040
    CPU time for w[ 60]     17.83 sec, wall time      0.56 sec
w[ 61], rank = 1040 / 1040
    CPU time for w[ 61]     17.72 sec, wall time      0.56 sec
w[ 62], rank = 1040 / 1040
    CPU time for w[ 62]     17.96 sec, wall time      0.56 sec
w[ 63], rank = 1040 / 1040
    CPU time for w[ 63]     18.00 sec, wall time      0.56 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905071/tmp.chk
    CPU time for building ISDF   1777.87 sec, wall time     64.15 sec
