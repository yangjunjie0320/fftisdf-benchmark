OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826791/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826791/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [45 45 45] (91125 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.31120088e-17 -1.31120088e-17  2.33442606e-01]
 [-2.62240176e-17 -2.62240176e-17  4.66885213e-01]
 [-3.93360265e-17 -3.93360265e-17  7.00327819e-01]
 [ 0.00000000e+00  2.33442606e-01  0.00000000e+00]
 [-1.31120088e-17  2.33442606e-01  2.33442606e-01]
 [-2.62240176e-17  2.33442606e-01  4.66885213e-01]
 [-3.93360265e-17  2.33442606e-01  7.00327819e-01]
 [ 0.00000000e+00  4.66885213e-01  0.00000000e+00]
 [-1.31120088e-17  4.66885213e-01  2.33442606e-01]
 [-2.62240176e-17  4.66885213e-01  4.66885213e-01]
 [-3.93360265e-17  4.66885213e-01  7.00327819e-01]
 [ 0.00000000e+00  7.00327819e-01  0.00000000e+00]
 [-1.31120088e-17  7.00327819e-01  2.33442606e-01]
 [-2.62240176e-17  7.00327819e-01  4.66885213e-01]
 [-3.93360265e-17  7.00327819e-01  7.00327819e-01]
 [ 2.33442606e-01  1.31120088e-17  0.00000000e+00]
 [ 2.33442606e-01  0.00000000e+00  2.33442606e-01]
 [ 2.33442606e-01 -1.31120088e-17  4.66885213e-01]
 [ 2.33442606e-01 -2.62240176e-17  7.00327819e-01]
 [ 2.33442606e-01  2.33442606e-01  0.00000000e+00]
 [ 2.33442606e-01  2.33442606e-01  2.33442606e-01]
 [ 2.33442606e-01  2.33442606e-01  4.66885213e-01]
 [ 2.33442606e-01  2.33442606e-01  7.00327819e-01]
 [ 2.33442606e-01  4.66885213e-01  0.00000000e+00]
 [ 2.33442606e-01  4.66885213e-01  2.33442606e-01]
 [ 2.33442606e-01  4.66885213e-01  4.66885213e-01]
 [ 2.33442606e-01  4.66885213e-01  7.00327819e-01]
 [ 2.33442606e-01  7.00327819e-01  0.00000000e+00]
 [ 2.33442606e-01  7.00327819e-01  2.33442606e-01]
 [ 2.33442606e-01  7.00327819e-01  4.66885213e-01]
 [ 2.33442606e-01  7.00327819e-01  7.00327819e-01]
 [ 4.66885213e-01  2.62240176e-17  0.00000000e+00]
 [ 4.66885213e-01  1.31120088e-17  2.33442606e-01]
 [ 4.66885213e-01  0.00000000e+00  4.66885213e-01]
 [ 4.66885213e-01 -1.31120088e-17  7.00327819e-01]
 [ 4.66885213e-01  2.33442606e-01  0.00000000e+00]
 [ 4.66885213e-01  2.33442606e-01  2.33442606e-01]
 [ 4.66885213e-01  2.33442606e-01  4.66885213e-01]
 [ 4.66885213e-01  2.33442606e-01  7.00327819e-01]
 [ 4.66885213e-01  4.66885213e-01  0.00000000e+00]
 [ 4.66885213e-01  4.66885213e-01  2.33442606e-01]
 [ 4.66885213e-01  4.66885213e-01  4.66885213e-01]
 [ 4.66885213e-01  4.66885213e-01  7.00327819e-01]
 [ 4.66885213e-01  7.00327819e-01  0.00000000e+00]
 [ 4.66885213e-01  7.00327819e-01  2.33442606e-01]
 [ 4.66885213e-01  7.00327819e-01  4.66885213e-01]
 [ 4.66885213e-01  7.00327819e-01  7.00327819e-01]
 [ 7.00327819e-01  3.93360265e-17  0.00000000e+00]
 [ 7.00327819e-01  2.62240176e-17  2.33442606e-01]
 [ 7.00327819e-01  1.31120088e-17  4.66885213e-01]
 [ 7.00327819e-01 -1.54074396e-33  7.00327819e-01]
 [ 7.00327819e-01  2.33442606e-01  0.00000000e+00]
 [ 7.00327819e-01  2.33442606e-01  2.33442606e-01]
 [ 7.00327819e-01  2.33442606e-01  4.66885213e-01]
 [ 7.00327819e-01  2.33442606e-01  7.00327819e-01]
 [ 7.00327819e-01  4.66885213e-01  0.00000000e+00]
 [ 7.00327819e-01  4.66885213e-01  2.33442606e-01]
 [ 7.00327819e-01  4.66885213e-01  4.66885213e-01]
 [ 7.00327819e-01  4.66885213e-01  7.00327819e-01]
 [ 7.00327819e-01  7.00327819e-01  0.00000000e+00]
 [ 7.00327819e-01  7.00327819e-01  2.33442606e-01]
 [ 7.00327819e-01  7.00327819e-01  4.66885213e-01]
 [ 7.00327819e-01  7.00327819e-01  7.00327819e-01]]
Overwritten attributes  kmesh m0 tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [45 45 45]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.016 Eh.
Recommended ke_cutoff/mesh are 529.952 / [71 71 71].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff = 126.11
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 32, c0 =  20.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    449.12 sec, wall time     15.71 sec
Pivoted Cholesky rank = 2083, nip = 640, estimated error = 1.95e-02
Number of interpolation points = 640, effective CISDF =  20.00
    CPU time for building left-hand side     16.13 sec, wall time      0.51 sec

kpt = 64, ngrid = 91125, nao = 32
ngrid = 91125, blksize = 37382, nip = 640
required disk space = 59 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-19-19-19/46826791/52cy8372
blksize = 37382, memory for aoR_loop = 24498 MB
finished aoR_loop[       0:   37382]
finished aoR_loop[   37382:   74764]
finished aoR_loop[   74764:   91125]
    CPU time for building right-hand side    366.87 sec, wall time     66.72 sec
w[  0], rank =  640 /  640
    CPU time for w[  0]     89.26 sec, wall time      4.82 sec
w[  1], rank =  640 /  640
    CPU time for w[  1]     87.94 sec, wall time      4.78 sec
w[  2], rank =  640 /  640
    CPU time for w[  2]     89.41 sec, wall time      4.76 sec
w[  3], rank =  640 /  640
    CPU time for w[  3]     87.79 sec, wall time      4.59 sec
w[  4], rank =  640 /  640
    CPU time for w[  4]     87.58 sec, wall time      4.55 sec
w[  5], rank =  640 /  640
    CPU time for w[  5]     87.47 sec, wall time      4.63 sec
w[  6], rank =  640 /  640
    CPU time for w[  6]     87.18 sec, wall time      4.52 sec
w[  7], rank =  640 /  640
    CPU time for w[  7]     87.52 sec, wall time      4.64 sec
w[  8], rank =  640 /  640
    CPU time for w[  8]     87.10 sec, wall time      4.35 sec
w[  9], rank =  640 /  640
    CPU time for w[  9]     87.03 sec, wall time      4.54 sec
w[ 10], rank =  640 /  640
    CPU time for w[ 10]     87.29 sec, wall time      4.37 sec
w[ 11], rank =  640 /  640
    CPU time for w[ 11]     87.41 sec, wall time      4.55 sec
w[ 12], rank =  640 /  640
    CPU time for w[ 12]     87.73 sec, wall time      4.53 sec
w[ 13], rank =  640 /  640
    CPU time for w[ 13]     86.96 sec, wall time      4.61 sec
w[ 14], rank =  640 /  640
    CPU time for w[ 14]     87.09 sec, wall time      4.52 sec
w[ 15], rank =  640 /  640
    CPU time for w[ 15]     87.55 sec, wall time      4.63 sec
w[ 16], rank =  640 /  640
    CPU time for w[ 16]     89.66 sec, wall time      4.58 sec
w[ 17], rank =  640 /  640
    CPU time for w[ 17]     87.10 sec, wall time      4.62 sec
w[ 18], rank =  640 /  640
    CPU time for w[ 18]     87.48 sec, wall time      4.53 sec
w[ 19], rank =  640 /  640
    CPU time for w[ 19]     87.26 sec, wall time      4.62 sec
w[ 20], rank =  640 /  640
    CPU time for w[ 20]     87.66 sec, wall time      4.60 sec
w[ 21], rank =  640 /  640
    CPU time for w[ 21]     87.31 sec, wall time      4.66 sec
w[ 22], rank =  640 /  640
    CPU time for w[ 22]     87.44 sec, wall time      4.62 sec
w[ 23], rank =  640 /  640
    CPU time for w[ 23]     87.37 sec, wall time      4.66 sec
w[ 24], rank =  640 /  640
    CPU time for w[ 24]     87.35 sec, wall time      4.52 sec
w[ 25], rank =  640 /  640
    CPU time for w[ 25]     87.01 sec, wall time      4.62 sec
w[ 26], rank =  640 /  640
    CPU time for w[ 26]     87.77 sec, wall time      4.58 sec
w[ 27], rank =  640 /  640
    CPU time for w[ 27]     88.24 sec, wall time      4.69 sec
w[ 28], rank =  640 /  640
    CPU time for w[ 28]     87.68 sec, wall time      4.64 sec
w[ 29], rank =  640 /  640
    CPU time for w[ 29]     87.98 sec, wall time      4.74 sec
w[ 30], rank =  640 /  640
    CPU time for w[ 30]     88.25 sec, wall time      5.02 sec
w[ 31], rank =  640 /  640
    CPU time for w[ 31]     87.52 sec, wall time      4.75 sec
w[ 32], rank =  640 /  640
    CPU time for w[ 32]    103.45 sec, wall time      4.96 sec
w[ 33], rank =  640 /  640
    CPU time for w[ 33]     96.80 sec, wall time      4.95 sec
w[ 34], rank =  640 /  640
    CPU time for w[ 34]     91.84 sec, wall time      4.63 sec
w[ 35], rank =  640 /  640
    CPU time for w[ 35]     85.50 sec, wall time      4.61 sec
w[ 36], rank =  640 /  640
    CPU time for w[ 36]     88.04 sec, wall time      4.58 sec
w[ 37], rank =  640 /  640
    CPU time for w[ 37]     88.30 sec, wall time      4.69 sec
w[ 38], rank =  640 /  640
    CPU time for w[ 38]     88.47 sec, wall time      4.61 sec
w[ 39], rank =  640 /  640
    CPU time for w[ 39]     87.90 sec, wall time      4.67 sec
w[ 40], rank =  640 /  640
    CPU time for w[ 40]     87.65 sec, wall time      4.40 sec
w[ 41], rank =  640 /  640
    CPU time for w[ 41]     87.83 sec, wall time      4.60 sec
w[ 42], rank =  640 /  640
    CPU time for w[ 42]     87.91 sec, wall time      4.41 sec
w[ 43], rank =  640 /  640
    CPU time for w[ 43]     88.12 sec, wall time      4.61 sec
w[ 44], rank =  640 /  640
    CPU time for w[ 44]     88.10 sec, wall time      4.57 sec
w[ 45], rank =  640 /  640
    CPU time for w[ 45]     88.11 sec, wall time      4.69 sec
w[ 46], rank =  640 /  640
    CPU time for w[ 46]     88.16 sec, wall time      4.60 sec
w[ 47], rank =  640 /  640
    CPU time for w[ 47]     88.22 sec, wall time      4.69 sec
w[ 48], rank =  640 /  640
    CPU time for w[ 48]     88.26 sec, wall time      4.57 sec
w[ 49], rank =  640 /  640
    CPU time for w[ 49]     88.34 sec, wall time      4.69 sec
w[ 50], rank =  640 /  640
    CPU time for w[ 50]     88.16 sec, wall time      4.59 sec
w[ 51], rank =  640 /  640
    CPU time for w[ 51]     88.70 sec, wall time      4.70 sec
w[ 52], rank =  640 /  640
    CPU time for w[ 52]     88.61 sec, wall time      4.67 sec
w[ 53], rank =  640 /  640
    CPU time for w[ 53]     87.95 sec, wall time      4.71 sec
w[ 54], rank =  640 /  640
    CPU time for w[ 54]     88.43 sec, wall time      4.68 sec
w[ 55], rank =  640 /  640
    CPU time for w[ 55]     88.12 sec, wall time      4.72 sec
w[ 56], rank =  640 /  640
    CPU time for w[ 56]     88.10 sec, wall time      4.58 sec
w[ 57], rank =  640 /  640
    CPU time for w[ 57]     88.21 sec, wall time      4.69 sec
w[ 58], rank =  640 /  640
    CPU time for w[ 58]     88.86 sec, wall time      4.63 sec
w[ 59], rank =  640 /  640
    CPU time for w[ 59]     88.06 sec, wall time      4.70 sec
w[ 60], rank =  640 /  640
    CPU time for w[ 60]     88.02 sec, wall time      4.65 sec
w[ 61], rank =  640 /  640
    CPU time for w[ 61]     88.09 sec, wall time      4.71 sec
w[ 62], rank =  640 /  640
    CPU time for w[ 62]     88.29 sec, wall time      4.67 sec
w[ 63], rank =  640 /  640
    CPU time for w[ 63]     88.22 sec, wall time      4.72 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46826791/tmp.chk
    CPU time for building ISDF   6489.38 sec, wall time    380.65 sec
