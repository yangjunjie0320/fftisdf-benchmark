OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46829501/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46829501/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [53 53 53] (148877 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  kmesh m0 tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (200 / [53 53 53]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 26 Eh.
Recommended ke_cutoff/mesh are 1167.63 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff =  91.23
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  10.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    485.20 sec, wall time     19.47 sec
Pivoted Cholesky rank = 2814, nip = 560, estimated error = 8.45e-02
Number of interpolation points = 560, effective CISDF =  10.00
    CPU time for building left-hand side     41.16 sec, wall time      1.36 sec

kpt = 64, ngrid = 148877, nao = 56
ngrid = 148877, blksize = 42738, nip = 560
required disk space = 85 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-19-19-19/46829501/d7l1y03u
blksize = 42738, memory for aoR_loop = 24507 MB
finished aoR_loop[       0:   42738]
finished aoR_loop[   42738:   85476]
finished aoR_loop[   85476:  128214]
finished aoR_loop[  128214:  148877]
    CPU time for building right-hand side    746.49 sec, wall time    129.45 sec
w[  0], rank =  560 /  560
    CPU time for w[  0]   1026.04 sec, wall time     37.90 sec
w[  1], rank =  560 /  560
    CPU time for w[  1]   1245.46 sec, wall time     43.92 sec
w[  2], rank =  560 /  560
    CPU time for w[  2]   1083.70 sec, wall time     38.47 sec
w[  3], rank =  560 /  560
    CPU time for w[  3]   1024.97 sec, wall time     36.97 sec
w[  4], rank =  560 /  560
    CPU time for w[  4]   1050.11 sec, wall time     37.85 sec
w[  5], rank =  560 /  560
    CPU time for w[  5]   1037.80 sec, wall time     37.71 sec
w[  6], rank =  560 /  560
    CPU time for w[  6]   1295.21 sec, wall time     45.84 sec
w[  7], rank =  560 /  560
    CPU time for w[  7]   1261.62 sec, wall time     44.77 sec
w[  8], rank =  560 /  560
    CPU time for w[  8]    957.66 sec, wall time     34.34 sec
w[  9], rank =  560 /  560
    CPU time for w[  9]   1103.13 sec, wall time     39.02 sec
w[ 10], rank =  560 /  560
    CPU time for w[ 10]   1057.62 sec, wall time     37.28 sec
w[ 11], rank =  560 /  560
    CPU time for w[ 11]   1111.39 sec, wall time     39.71 sec
w[ 12], rank =  560 /  560
    CPU time for w[ 12]   1230.48 sec, wall time     43.72 sec
w[ 13], rank =  560 /  560
    CPU time for w[ 13]   1001.58 sec, wall time     35.82 sec
w[ 14], rank =  560 /  560
    CPU time for w[ 14]   1022.80 sec, wall time     37.04 sec
w[ 15], rank =  560 /  560
    CPU time for w[ 15]   1070.81 sec, wall time     38.56 sec
w[ 16], rank =  560 /  560
    CPU time for w[ 16]   1128.99 sec, wall time     40.34 sec
w[ 17], rank =  560 /  560
    CPU time for w[ 17]   1282.83 sec, wall time     45.77 sec
w[ 18], rank =  560 /  560
    CPU time for w[ 18]    974.64 sec, wall time     35.01 sec
w[ 19], rank =  560 /  560
    CPU time for w[ 19]    928.18 sec, wall time     34.20 sec
w[ 20], rank =  560 /  560
    CPU time for w[ 20]   1036.36 sec, wall time     37.46 sec
w[ 21], rank =  560 /  560
    CPU time for w[ 21]    996.13 sec, wall time     36.33 sec
w[ 22], rank =  560 /  560
    CPU time for w[ 22]    992.49 sec, wall time     36.25 sec
w[ 23], rank =  560 /  560
    CPU time for w[ 23]   1002.61 sec, wall time     36.59 sec
w[ 24], rank =  560 /  560
    CPU time for w[ 24]   1074.53 sec, wall time     38.52 sec
w[ 25], rank =  560 /  560
    CPU time for w[ 25]   1129.88 sec, wall time     40.32 sec
w[ 26], rank =  560 /  560
    CPU time for w[ 26]   1046.78 sec, wall time     37.31 sec
w[ 27], rank =  560 /  560
    CPU time for w[ 27]    990.34 sec, wall time     35.41 sec
w[ 28], rank =  560 /  560
    CPU time for w[ 28]   1108.32 sec, wall time     39.69 sec
w[ 29], rank =  560 /  560
    CPU time for w[ 29]   1003.61 sec, wall time     36.44 sec
w[ 30], rank =  560 /  560
    CPU time for w[ 30]    970.55 sec, wall time     34.96 sec
w[ 31], rank =  560 /  560
    CPU time for w[ 31]    972.37 sec, wall time     35.90 sec
w[ 32], rank =  560 /  560
    CPU time for w[ 32]    943.71 sec, wall time     33.77 sec
w[ 33], rank =  560 /  560
    CPU time for w[ 33]   1023.81 sec, wall time     36.38 sec
w[ 34], rank =  560 /  560
    CPU time for w[ 34]   1215.67 sec, wall time     42.94 sec
w[ 35], rank =  560 /  560
    CPU time for w[ 35]    978.72 sec, wall time     35.74 sec
w[ 36], rank =  560 /  560
    CPU time for w[ 36]   1019.42 sec, wall time     36.70 sec
w[ 37], rank =  560 /  560
    CPU time for w[ 37]   1023.72 sec, wall time     36.85 sec
w[ 38], rank =  560 /  560
    CPU time for w[ 38]   1013.10 sec, wall time     36.09 sec
w[ 39], rank =  560 /  560
    CPU time for w[ 39]   1047.78 sec, wall time     37.56 sec
w[ 40], rank =  560 /  560
    CPU time for w[ 40]   1069.31 sec, wall time     38.88 sec
w[ 41], rank =  560 /  560
    CPU time for w[ 41]   1017.67 sec, wall time     36.88 sec
w[ 42], rank =  560 /  560
    CPU time for w[ 42]   1020.07 sec, wall time     36.47 sec
w[ 43], rank =  560 /  560
    CPU time for w[ 43]   1000.69 sec, wall time     35.94 sec
w[ 44], rank =  560 /  560
    CPU time for w[ 44]   1035.64 sec, wall time     37.72 sec
w[ 45], rank =  560 /  560
    CPU time for w[ 45]   1009.32 sec, wall time     36.89 sec
w[ 46], rank =  560 /  560
    CPU time for w[ 46]   1045.25 sec, wall time     37.59 sec
w[ 47], rank =  560 /  560
    CPU time for w[ 47]   1543.13 sec, wall time     58.25 sec
w[ 48], rank =  560 /  560
    CPU time for w[ 48]   1409.87 sec, wall time     52.09 sec
w[ 49], rank =  560 /  560
    CPU time for w[ 49]   1184.61 sec, wall time     42.77 sec
w[ 50], rank =  560 /  560
    CPU time for w[ 50]    965.65 sec, wall time     35.31 sec
w[ 51], rank =  560 /  560
    CPU time for w[ 51]   1369.71 sec, wall time     49.99 sec
w[ 52], rank =  560 /  560
    CPU time for w[ 52]   1027.75 sec, wall time     36.62 sec
w[ 53], rank =  560 /  560
    CPU time for w[ 53]   1225.07 sec, wall time     43.52 sec
w[ 54], rank =  560 /  560
    CPU time for w[ 54]   1000.72 sec, wall time     36.23 sec
w[ 55], rank =  560 /  560
    CPU time for w[ 55]   1114.55 sec, wall time     39.81 sec
w[ 56], rank =  560 /  560
    CPU time for w[ 56]   1048.22 sec, wall time     37.56 sec
w[ 57], rank =  560 /  560
    CPU time for w[ 57]   1011.70 sec, wall time     36.95 sec
w[ 58], rank =  560 /  560
    CPU time for w[ 58]   1023.62 sec, wall time     36.66 sec
w[ 59], rank =  560 /  560
    CPU time for w[ 59]   1321.31 sec, wall time     47.88 sec
w[ 60], rank =  560 /  560
    CPU time for w[ 60]   1183.20 sec, wall time     41.96 sec
w[ 61], rank =  560 /  560
    CPU time for w[ 61]   1015.07 sec, wall time     36.97 sec
w[ 62], rank =  560 /  560
    CPU time for w[ 62]   1080.07 sec, wall time     38.61 sec
w[ 63], rank =  560 /  560
    CPU time for w[ 63]   1091.21 sec, wall time     39.30 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46829501/tmp.chk
    CPU time for building ISDF  70575.11 sec, wall time   2647.21 sec
