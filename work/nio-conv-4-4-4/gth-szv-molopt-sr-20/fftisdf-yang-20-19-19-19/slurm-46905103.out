OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905103/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905103/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [17 17 17] (4913 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  tol kmesh c0 m0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [17 17 17]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff =  91.23
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  20.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    464.85 sec, wall time     17.11 sec
Pivoted Cholesky rank = 2938, nip = 1120, estimated error = 1.08e-02
Number of interpolation points = 1120, effective CISDF =  20.00
    CPU time for building left-hand side     21.81 sec, wall time      1.10 sec

kpt = 64, ngrid = 4913, nao = 56
ngrid = 4913, blksize = 21290, nip = 1120
required disk space = 5 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-19-19-19/46905103/qjagmnps
blksize = 21290, memory for aoR_loop = 24417 MB
finished aoR_loop[       0:    4913]
    CPU time for building right-hand side     52.08 sec, wall time      6.15 sec
w[  0], rank = 1120 / 1120
    CPU time for w[  0]    122.61 sec, wall time      3.86 sec
w[  1], rank = 1120 / 1120
    CPU time for w[  1]    130.57 sec, wall time      4.14 sec
w[  2], rank = 1120 / 1120
    CPU time for w[  2]    130.70 sec, wall time      4.12 sec
w[  3], rank = 1120 / 1120
    CPU time for w[  3]    123.41 sec, wall time      3.91 sec
w[  4], rank = 1120 / 1120
    CPU time for w[  4]    131.05 sec, wall time      4.15 sec
w[  5], rank = 1120 / 1120
    CPU time for w[  5]    137.60 sec, wall time      4.37 sec
w[  6], rank = 1120 / 1120
    CPU time for w[  6]    137.43 sec, wall time      4.36 sec
w[  7], rank = 1120 / 1120
    CPU time for w[  7]    131.75 sec, wall time      4.19 sec
w[  8], rank = 1120 / 1120
    CPU time for w[  8]    138.70 sec, wall time      4.36 sec
w[  9], rank = 1120 / 1120
    CPU time for w[  9]    135.03 sec, wall time      4.27 sec
w[ 10], rank = 1120 / 1120
    CPU time for w[ 10]    131.18 sec, wall time      4.13 sec
w[ 11], rank = 1120 / 1120
    CPU time for w[ 11]    125.35 sec, wall time      3.98 sec
w[ 12], rank = 1120 / 1120
    CPU time for w[ 12]    124.77 sec, wall time      3.95 sec
w[ 13], rank = 1120 / 1120
    CPU time for w[ 13]    131.18 sec, wall time      4.17 sec
w[ 14], rank = 1120 / 1120
    CPU time for w[ 14]    134.00 sec, wall time      4.25 sec
w[ 15], rank = 1120 / 1120
    CPU time for w[ 15]    124.93 sec, wall time      3.97 sec
w[ 16], rank = 1120 / 1120
    CPU time for w[ 16]    126.96 sec, wall time      4.02 sec
w[ 17], rank = 1120 / 1120
    CPU time for w[ 17]    127.61 sec, wall time      4.07 sec
w[ 18], rank = 1120 / 1120
    CPU time for w[ 18]    127.68 sec, wall time      4.04 sec
w[ 19], rank = 1120 / 1120
    CPU time for w[ 19]    134.11 sec, wall time      4.26 sec
w[ 20], rank = 1120 / 1120
    CPU time for w[ 20]    137.58 sec, wall time      4.38 sec
w[ 21], rank = 1120 / 1120
    CPU time for w[ 21]    137.41 sec, wall time      4.36 sec
w[ 22], rank = 1120 / 1120
    CPU time for w[ 22]    136.87 sec, wall time      4.34 sec
w[ 23], rank = 1120 / 1120
    CPU time for w[ 23]    133.02 sec, wall time      4.23 sec
w[ 24], rank = 1120 / 1120
    CPU time for w[ 24]    137.01 sec, wall time      4.33 sec
w[ 25], rank = 1120 / 1120
    CPU time for w[ 25]    140.73 sec, wall time      4.46 sec
w[ 26], rank = 1120 / 1120
    CPU time for w[ 26]    139.23 sec, wall time      4.41 sec
w[ 27], rank = 1120 / 1120
    CPU time for w[ 27]    138.41 sec, wall time      4.39 sec
w[ 28], rank = 1120 / 1120
    CPU time for w[ 28]    136.21 sec, wall time      4.31 sec
w[ 29], rank = 1120 / 1120
    CPU time for w[ 29]    134.93 sec, wall time      4.27 sec
w[ 30], rank = 1120 / 1120
    CPU time for w[ 30]    136.72 sec, wall time      4.33 sec
w[ 31], rank = 1120 / 1120
    CPU time for w[ 31]    137.35 sec, wall time      4.35 sec
w[ 32], rank = 1120 / 1120
    CPU time for w[ 32]    137.20 sec, wall time      4.32 sec
w[ 33], rank = 1120 / 1120
    CPU time for w[ 33]    140.08 sec, wall time      4.43 sec
w[ 34], rank = 1120 / 1120
    CPU time for w[ 34]    142.90 sec, wall time      4.49 sec
w[ 35], rank = 1120 / 1120
    CPU time for w[ 35]    137.18 sec, wall time      4.34 sec
w[ 36], rank = 1120 / 1120
    CPU time for w[ 36]    145.26 sec, wall time      4.59 sec
w[ 37], rank = 1120 / 1120
    CPU time for w[ 37]    137.44 sec, wall time      4.36 sec
w[ 38], rank = 1120 / 1120
    CPU time for w[ 38]    136.47 sec, wall time      4.32 sec
w[ 39], rank = 1120 / 1120
    CPU time for w[ 39]    135.77 sec, wall time      4.31 sec
w[ 40], rank = 1120 / 1120
    CPU time for w[ 40]    134.24 sec, wall time      4.24 sec
w[ 41], rank = 1120 / 1120
    CPU time for w[ 41]    132.41 sec, wall time      4.20 sec
w[ 42], rank = 1120 / 1120
    CPU time for w[ 42]    134.69 sec, wall time      4.24 sec
w[ 43], rank = 1120 / 1120
    CPU time for w[ 43]    134.59 sec, wall time      4.26 sec
w[ 44], rank = 1120 / 1120
    CPU time for w[ 44]    138.84 sec, wall time      4.39 sec
w[ 45], rank = 1120 / 1120
    CPU time for w[ 45]    136.45 sec, wall time      4.33 sec
w[ 46], rank = 1120 / 1120
    CPU time for w[ 46]    145.69 sec, wall time      4.61 sec
w[ 47], rank = 1120 / 1120
    CPU time for w[ 47]    136.41 sec, wall time      4.32 sec
w[ 48], rank = 1120 / 1120
    CPU time for w[ 48]    130.84 sec, wall time      4.15 sec
w[ 49], rank = 1120 / 1120
    CPU time for w[ 49]    127.26 sec, wall time      4.05 sec
w[ 50], rank = 1120 / 1120
    CPU time for w[ 50]    131.20 sec, wall time      4.15 sec
w[ 51], rank = 1120 / 1120
    CPU time for w[ 51]    133.69 sec, wall time      4.24 sec
w[ 52], rank = 1120 / 1120
    CPU time for w[ 52]    130.93 sec, wall time      4.17 sec
w[ 53], rank = 1120 / 1120
    CPU time for w[ 53]    124.15 sec, wall time      3.95 sec
w[ 54], rank = 1120 / 1120
    CPU time for w[ 54]    134.67 sec, wall time      4.27 sec
w[ 55], rank = 1120 / 1120
    CPU time for w[ 55]    139.33 sec, wall time      4.42 sec
w[ 56], rank = 1120 / 1120
    CPU time for w[ 56]    141.07 sec, wall time      4.46 sec
w[ 57], rank = 1120 / 1120
    CPU time for w[ 57]    138.06 sec, wall time      4.38 sec
w[ 58], rank = 1120 / 1120
    CPU time for w[ 58]    145.99 sec, wall time      4.61 sec
w[ 59], rank = 1120 / 1120
    CPU time for w[ 59]    136.79 sec, wall time      4.36 sec
w[ 60], rank = 1120 / 1120
    CPU time for w[ 60]    139.44 sec, wall time      4.42 sec
w[ 61], rank = 1120 / 1120
    CPU time for w[ 61]    133.05 sec, wall time      4.23 sec
w[ 62], rank = 1120 / 1120
    CPU time for w[ 62]    126.50 sec, wall time      4.02 sec
w[ 63], rank = 1120 / 1120
    CPU time for w[ 63]    131.12 sec, wall time      4.17 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905103/tmp.chk
    CPU time for building ISDF   9151.36 sec, wall time    298.02 sec
