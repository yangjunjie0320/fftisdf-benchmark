OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46905105/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46905105/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [17 17 17] (4913 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  kmesh tol m0 c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [17 17 17]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff =  91.23
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  30.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    466.91 sec, wall time     17.22 sec
Pivoted Cholesky rank = 2938, nip = 1680, estimated error = 1.91e-03
Number of interpolation points = 1680, effective CISDF =  30.00
    CPU time for building left-hand side     30.69 sec, wall time      1.96 sec

kpt = 64, ngrid = 4913, nao = 56
ngrid = 4913, blksize = 14094, nip = 1680
required disk space = 8 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-30-19-19-19/46905105/opaxzyvl
blksize = 14094, memory for aoR_loop = 24246 MB
finished aoR_loop[       0:    4913]
    CPU time for building right-hand side     70.75 sec, wall time      8.85 sec
w[  0], rank = 1680 / 1680
    CPU time for w[  0]    205.09 sec, wall time      6.46 sec
w[  1], rank = 1680 / 1680
    CPU time for w[  1]    196.74 sec, wall time      6.29 sec
w[  2], rank = 1680 / 1680
    CPU time for w[  2]    190.74 sec, wall time      6.06 sec
w[  3], rank = 1680 / 1680
    CPU time for w[  3]    197.52 sec, wall time      6.31 sec
w[  4], rank = 1680 / 1680
    CPU time for w[  4]    202.79 sec, wall time      6.49 sec
w[  5], rank = 1680 / 1680
    CPU time for w[  5]    185.59 sec, wall time      5.96 sec
w[  6], rank = 1680 / 1680
    CPU time for w[  6]    203.52 sec, wall time      6.50 sec
w[  7], rank = 1680 / 1680
    CPU time for w[  7]    201.55 sec, wall time      6.46 sec
w[  8], rank = 1680 / 1680
    CPU time for w[  8]    193.89 sec, wall time      6.17 sec
w[  9], rank = 1680 / 1680
    CPU time for w[  9]    184.73 sec, wall time      5.92 sec
w[ 10], rank = 1680 / 1680
    CPU time for w[ 10]    186.92 sec, wall time      5.95 sec
w[ 11], rank = 1680 / 1680
    CPU time for w[ 11]    198.20 sec, wall time      6.34 sec
w[ 12], rank = 1680 / 1680
    CPU time for w[ 12]    195.62 sec, wall time      6.25 sec
w[ 13], rank = 1680 / 1680
    CPU time for w[ 13]    184.24 sec, wall time      5.91 sec
w[ 14], rank = 1680 / 1680
    CPU time for w[ 14]    203.22 sec, wall time      6.50 sec
w[ 15], rank = 1680 / 1680
    CPU time for w[ 15]    206.74 sec, wall time      6.62 sec
w[ 16], rank = 1680 / 1680
    CPU time for w[ 16]    191.16 sec, wall time      6.11 sec
w[ 17], rank = 1680 / 1680
    CPU time for w[ 17]    206.84 sec, wall time      6.62 sec
w[ 18], rank = 1680 / 1680
    CPU time for w[ 18]    209.23 sec, wall time      6.70 sec
w[ 19], rank = 1680 / 1680
    CPU time for w[ 19]    208.41 sec, wall time      6.68 sec
w[ 20], rank = 1680 / 1680
    CPU time for w[ 20]    205.00 sec, wall time      6.57 sec
w[ 21], rank = 1680 / 1680
    CPU time for w[ 21]    197.22 sec, wall time      6.32 sec
w[ 22], rank = 1680 / 1680
    CPU time for w[ 22]    194.60 sec, wall time      6.24 sec
w[ 23], rank = 1680 / 1680
    CPU time for w[ 23]    207.93 sec, wall time      6.66 sec
w[ 24], rank = 1680 / 1680
    CPU time for w[ 24]    194.93 sec, wall time      6.27 sec
w[ 25], rank = 1680 / 1680
    CPU time for w[ 25]    208.20 sec, wall time      6.68 sec
w[ 26], rank = 1680 / 1680
    CPU time for w[ 26]    200.33 sec, wall time      6.41 sec
w[ 27], rank = 1680 / 1680
    CPU time for w[ 27]    202.14 sec, wall time      6.48 sec
w[ 28], rank = 1680 / 1680
    CPU time for w[ 28]    198.19 sec, wall time      6.36 sec
w[ 29], rank = 1680 / 1680
    CPU time for w[ 29]    194.62 sec, wall time      6.25 sec
w[ 30], rank = 1680 / 1680
    CPU time for w[ 30]    197.69 sec, wall time      6.34 sec
w[ 31], rank = 1680 / 1680
    CPU time for w[ 31]    204.34 sec, wall time      6.55 sec
w[ 32], rank = 1680 / 1680
    CPU time for w[ 32]    193.32 sec, wall time      6.15 sec
w[ 33], rank = 1680 / 1680
    CPU time for w[ 33]    189.93 sec, wall time      6.09 sec
w[ 34], rank = 1680 / 1680
    CPU time for w[ 34]    197.44 sec, wall time      6.28 sec
w[ 35], rank = 1680 / 1680
    CPU time for w[ 35]    197.84 sec, wall time      6.33 sec
w[ 36], rank = 1680 / 1680
    CPU time for w[ 36]    205.93 sec, wall time      6.58 sec
w[ 37], rank = 1680 / 1680
    CPU time for w[ 37]    198.35 sec, wall time      6.36 sec
w[ 38], rank = 1680 / 1680
    CPU time for w[ 38]    188.34 sec, wall time      6.04 sec
w[ 39], rank = 1680 / 1680
    CPU time for w[ 39]    187.77 sec, wall time      6.50 sec
w[ 40], rank = 1680 / 1680
    CPU time for w[ 40]    199.72 sec, wall time      6.34 sec
w[ 41], rank = 1680 / 1680
    CPU time for w[ 41]    212.08 sec, wall time      6.80 sec
w[ 42], rank = 1680 / 1680
    CPU time for w[ 42]    206.77 sec, wall time      6.57 sec
w[ 43], rank = 1680 / 1680
    CPU time for w[ 43]    196.25 sec, wall time      6.30 sec
w[ 44], rank = 1680 / 1680
    CPU time for w[ 44]    200.66 sec, wall time      6.43 sec
w[ 45], rank = 1680 / 1680
    CPU time for w[ 45]    208.16 sec, wall time      6.66 sec
w[ 46], rank = 1680 / 1680
    CPU time for w[ 46]    214.39 sec, wall time      6.84 sec
w[ 47], rank = 1680 / 1680
    CPU time for w[ 47]    203.79 sec, wall time      6.55 sec
w[ 48], rank = 1680 / 1680
    CPU time for w[ 48]    198.08 sec, wall time      6.34 sec
w[ 49], rank = 1680 / 1680
    CPU time for w[ 49]    201.16 sec, wall time      6.47 sec
w[ 50], rank = 1680 / 1680
    CPU time for w[ 50]    204.48 sec, wall time      6.53 sec
w[ 51], rank = 1680 / 1680
    CPU time for w[ 51]    200.25 sec, wall time      6.42 sec
w[ 52], rank = 1680 / 1680
    CPU time for w[ 52]    200.79 sec, wall time      6.43 sec
w[ 53], rank = 1680 / 1680
    CPU time for w[ 53]    198.79 sec, wall time      6.39 sec
w[ 54], rank = 1680 / 1680
    CPU time for w[ 54]    208.76 sec, wall time      6.69 sec
w[ 55], rank = 1680 / 1680
    CPU time for w[ 55]    217.54 sec, wall time      6.97 sec
w[ 56], rank = 1680 / 1680
    CPU time for w[ 56]    206.07 sec, wall time      6.59 sec
w[ 57], rank = 1680 / 1680
    CPU time for w[ 57]    216.11 sec, wall time      6.91 sec
w[ 58], rank = 1680 / 1680
    CPU time for w[ 58]    194.73 sec, wall time      6.28 sec
w[ 59], rank = 1680 / 1680
    CPU time for w[ 59]    190.75 sec, wall time      6.13 sec
w[ 60], rank = 1680 / 1680
    CPU time for w[ 60]    197.05 sec, wall time      6.32 sec
w[ 61], rank = 1680 / 1680
    CPU time for w[ 61]    199.72 sec, wall time      6.40 sec
w[ 62], rank = 1680 / 1680
    CPU time for w[ 62]    198.45 sec, wall time      6.36 sec
w[ 63], rank = 1680 / 1680
    CPU time for w[ 63]    213.10 sec, wall time      6.82 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-30-19-19-19/46905105/tmp.chk
    CPU time for building ISDF  13383.95 sec, wall time    440.11 sec
