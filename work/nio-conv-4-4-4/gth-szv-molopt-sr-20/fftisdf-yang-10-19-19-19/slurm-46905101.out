OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905101/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905101/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [17 17 17] (4913 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  tol m0 c0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [17 17 17]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff =  91.23
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 56, c0 =  10.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    470.85 sec, wall time     17.66 sec
Pivoted Cholesky rank = 2938, nip = 560, estimated error = 1.16e-01
Number of interpolation points = 560, effective CISDF =  10.00
    CPU time for building left-hand side     15.21 sec, wall time      0.49 sec

kpt = 64, ngrid = 4913, nao = 56
ngrid = 4913, blksize = 42744, nip = 560
required disk space = 2 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-10-19-19-19/46905101/s14r99xm
blksize = 42744, memory for aoR_loop = 24511 MB
finished aoR_loop[       0:    4913]
    CPU time for building right-hand side     37.86 sec, wall time      3.69 sec
w[  0], rank =  560 /  560
    CPU time for w[  0]     68.27 sec, wall time      2.15 sec
w[  1], rank =  560 /  560
    CPU time for w[  1]     62.01 sec, wall time      1.95 sec
w[  2], rank =  560 /  560
    CPU time for w[  2]     64.98 sec, wall time      2.04 sec
w[  3], rank =  560 /  560
    CPU time for w[  3]     65.96 sec, wall time      2.07 sec
w[  4], rank =  560 /  560
    CPU time for w[  4]     71.47 sec, wall time      2.24 sec
w[  5], rank =  560 /  560
    CPU time for w[  5]     71.46 sec, wall time      2.24 sec
w[  6], rank =  560 /  560
    CPU time for w[  6]     72.64 sec, wall time      2.28 sec
w[  7], rank =  560 /  560
    CPU time for w[  7]     69.23 sec, wall time      2.17 sec
w[  8], rank =  560 /  560
    CPU time for w[  8]     66.06 sec, wall time      2.07 sec
w[  9], rank =  560 /  560
    CPU time for w[  9]     66.60 sec, wall time      2.09 sec
w[ 10], rank =  560 /  560
    CPU time for w[ 10]     64.68 sec, wall time      2.03 sec
w[ 11], rank =  560 /  560
    CPU time for w[ 11]     66.71 sec, wall time      2.09 sec
w[ 12], rank =  560 /  560
    CPU time for w[ 12]     68.89 sec, wall time      2.16 sec
w[ 13], rank =  560 /  560
    CPU time for w[ 13]     73.44 sec, wall time      2.31 sec
w[ 14], rank =  560 /  560
    CPU time for w[ 14]     67.21 sec, wall time      2.11 sec
w[ 15], rank =  560 /  560
    CPU time for w[ 15]     62.48 sec, wall time      1.96 sec
w[ 16], rank =  560 /  560
    CPU time for w[ 16]     63.96 sec, wall time      2.01 sec
w[ 17], rank =  560 /  560
    CPU time for w[ 17]     63.54 sec, wall time      1.99 sec
w[ 18], rank =  560 /  560
    CPU time for w[ 18]     61.47 sec, wall time      1.93 sec
w[ 19], rank =  560 /  560
    CPU time for w[ 19]     66.92 sec, wall time      2.10 sec
w[ 20], rank =  560 /  560
    CPU time for w[ 20]     65.66 sec, wall time      2.07 sec
w[ 21], rank =  560 /  560
    CPU time for w[ 21]     68.43 sec, wall time      2.15 sec
w[ 22], rank =  560 /  560
    CPU time for w[ 22]     71.06 sec, wall time      2.23 sec
w[ 23], rank =  560 /  560
    CPU time for w[ 23]     69.17 sec, wall time      2.17 sec
w[ 24], rank =  560 /  560
    CPU time for w[ 24]     67.93 sec, wall time      2.13 sec
w[ 25], rank =  560 /  560
    CPU time for w[ 25]     65.96 sec, wall time      2.07 sec
w[ 26], rank =  560 /  560
    CPU time for w[ 26]     68.23 sec, wall time      2.14 sec
w[ 27], rank =  560 /  560
    CPU time for w[ 27]     68.42 sec, wall time      2.15 sec
w[ 28], rank =  560 /  560
    CPU time for w[ 28]     68.58 sec, wall time      2.15 sec
w[ 29], rank =  560 /  560
    CPU time for w[ 29]     64.64 sec, wall time      2.03 sec
w[ 30], rank =  560 /  560
    CPU time for w[ 30]     64.28 sec, wall time      2.02 sec
w[ 31], rank =  560 /  560
    CPU time for w[ 31]     65.77 sec, wall time      2.07 sec
w[ 32], rank =  560 /  560
    CPU time for w[ 32]     63.01 sec, wall time      1.98 sec
w[ 33], rank =  560 /  560
    CPU time for w[ 33]     65.21 sec, wall time      2.05 sec
w[ 34], rank =  560 /  560
    CPU time for w[ 34]     65.89 sec, wall time      2.07 sec
w[ 35], rank =  560 /  560
    CPU time for w[ 35]     66.18 sec, wall time      2.08 sec
w[ 36], rank =  560 /  560
    CPU time for w[ 36]     66.92 sec, wall time      2.10 sec
w[ 37], rank =  560 /  560
    CPU time for w[ 37]     65.29 sec, wall time      2.05 sec
w[ 38], rank =  560 /  560
    CPU time for w[ 38]     66.80 sec, wall time      2.10 sec
w[ 39], rank =  560 /  560
    CPU time for w[ 39]     70.49 sec, wall time      2.21 sec
w[ 40], rank =  560 /  560
    CPU time for w[ 40]     71.72 sec, wall time      2.25 sec
w[ 41], rank =  560 /  560
    CPU time for w[ 41]     70.50 sec, wall time      2.21 sec
w[ 42], rank =  560 /  560
    CPU time for w[ 42]     71.44 sec, wall time      2.24 sec
w[ 43], rank =  560 /  560
    CPU time for w[ 43]     64.15 sec, wall time      2.01 sec
w[ 44], rank =  560 /  560
    CPU time for w[ 44]     70.06 sec, wall time      2.20 sec
w[ 45], rank =  560 /  560
    CPU time for w[ 45]     70.64 sec, wall time      2.22 sec
w[ 46], rank =  560 /  560
    CPU time for w[ 46]     68.01 sec, wall time      2.13 sec
w[ 47], rank =  560 /  560
    CPU time for w[ 47]     68.43 sec, wall time      2.15 sec
w[ 48], rank =  560 /  560
    CPU time for w[ 48]     59.78 sec, wall time      1.88 sec
w[ 49], rank =  560 /  560
    CPU time for w[ 49]     80.51 sec, wall time      2.54 sec
w[ 50], rank =  560 /  560
    CPU time for w[ 50]     66.03 sec, wall time      2.07 sec
w[ 51], rank =  560 /  560
    CPU time for w[ 51]     68.62 sec, wall time      2.15 sec
w[ 52], rank =  560 /  560
    CPU time for w[ 52]     62.22 sec, wall time      1.95 sec
w[ 53], rank =  560 /  560
    CPU time for w[ 53]     62.89 sec, wall time      1.97 sec
w[ 54], rank =  560 /  560
    CPU time for w[ 54]     66.36 sec, wall time      2.08 sec
w[ 55], rank =  560 /  560
    CPU time for w[ 55]     67.73 sec, wall time      2.12 sec
w[ 56], rank =  560 /  560
    CPU time for w[ 56]     69.63 sec, wall time      2.18 sec
w[ 57], rank =  560 /  560
    CPU time for w[ 57]     71.44 sec, wall time      2.24 sec
w[ 58], rank =  560 /  560
    CPU time for w[ 58]     69.24 sec, wall time      2.17 sec
w[ 59], rank =  560 /  560
    CPU time for w[ 59]     64.40 sec, wall time      2.02 sec
w[ 60], rank =  560 /  560
    CPU time for w[ 60]     65.39 sec, wall time      2.05 sec
w[ 61], rank =  560 /  560
    CPU time for w[ 61]     66.84 sec, wall time      2.11 sec
w[ 62], rank =  560 /  560
    CPU time for w[ 62]     70.99 sec, wall time      2.25 sec
w[ 63], rank =  560 /  560
    CPU time for w[ 63]     63.94 sec, wall time      2.02 sec
Saving FFTISDF results to /central/scratch/yangjunjie//fftisdf-yang-10-19-19-19/46905101/tmp.chk
    CPU time for building ISDF   4838.81 sec, wall time    157.71 sec
