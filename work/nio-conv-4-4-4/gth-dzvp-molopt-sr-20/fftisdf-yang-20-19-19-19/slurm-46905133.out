OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905133/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-yang-20-19-19-19/46905133/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [17 17 17] (4913 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.42289801e-17 -1.42289801e-17  1.98557713e-01]
 [-2.84579601e-17 -2.84579601e-17  3.97115427e-01]
 [-4.26869402e-17 -4.26869402e-17  5.95673140e-01]
 [ 0.00000000e+00  1.98557713e-01  0.00000000e+00]
 [-1.42289801e-17  1.98557713e-01  1.98557713e-01]
 [-2.84579601e-17  1.98557713e-01  3.97115427e-01]
 [-4.26869402e-17  1.98557713e-01  5.95673140e-01]
 [ 0.00000000e+00  3.97115427e-01  0.00000000e+00]
 [-1.42289801e-17  3.97115427e-01  1.98557713e-01]
 [-2.84579601e-17  3.97115427e-01  3.97115427e-01]
 [-4.26869402e-17  3.97115427e-01  5.95673140e-01]
 [ 0.00000000e+00  5.95673140e-01  0.00000000e+00]
 [-1.42289801e-17  5.95673140e-01  1.98557713e-01]
 [-2.84579601e-17  5.95673140e-01  3.97115427e-01]
 [-4.26869402e-17  5.95673140e-01  5.95673140e-01]
 [ 1.98557713e-01  1.42289801e-17  0.00000000e+00]
 [ 1.98557713e-01  0.00000000e+00  1.98557713e-01]
 [ 1.98557713e-01 -1.42289801e-17  3.97115427e-01]
 [ 1.98557713e-01 -2.84579601e-17  5.95673140e-01]
 [ 1.98557713e-01  1.98557713e-01  0.00000000e+00]
 [ 1.98557713e-01  1.98557713e-01  1.98557713e-01]
 [ 1.98557713e-01  1.98557713e-01  3.97115427e-01]
 [ 1.98557713e-01  1.98557713e-01  5.95673140e-01]
 [ 1.98557713e-01  3.97115427e-01  0.00000000e+00]
 [ 1.98557713e-01  3.97115427e-01  1.98557713e-01]
 [ 1.98557713e-01  3.97115427e-01  3.97115427e-01]
 [ 1.98557713e-01  3.97115427e-01  5.95673140e-01]
 [ 1.98557713e-01  5.95673140e-01  0.00000000e+00]
 [ 1.98557713e-01  5.95673140e-01  1.98557713e-01]
 [ 1.98557713e-01  5.95673140e-01  3.97115427e-01]
 [ 1.98557713e-01  5.95673140e-01  5.95673140e-01]
 [ 3.97115427e-01  2.84579601e-17  0.00000000e+00]
 [ 3.97115427e-01  1.42289801e-17  1.98557713e-01]
 [ 3.97115427e-01  0.00000000e+00  3.97115427e-01]
 [ 3.97115427e-01 -1.42289801e-17  5.95673140e-01]
 [ 3.97115427e-01  1.98557713e-01  0.00000000e+00]
 [ 3.97115427e-01  1.98557713e-01  1.98557713e-01]
 [ 3.97115427e-01  1.98557713e-01  3.97115427e-01]
 [ 3.97115427e-01  1.98557713e-01  5.95673140e-01]
 [ 3.97115427e-01  3.97115427e-01  0.00000000e+00]
 [ 3.97115427e-01  3.97115427e-01  1.98557713e-01]
 [ 3.97115427e-01  3.97115427e-01  3.97115427e-01]
 [ 3.97115427e-01  3.97115427e-01  5.95673140e-01]
 [ 3.97115427e-01  5.95673140e-01  0.00000000e+00]
 [ 3.97115427e-01  5.95673140e-01  1.98557713e-01]
 [ 3.97115427e-01  5.95673140e-01  3.97115427e-01]
 [ 3.97115427e-01  5.95673140e-01  5.95673140e-01]
 [ 5.95673140e-01  4.26869402e-17  0.00000000e+00]
 [ 5.95673140e-01  2.84579601e-17  1.98557713e-01]
 [ 5.95673140e-01  1.42289801e-17  3.97115427e-01]
 [ 5.95673140e-01  0.00000000e+00  5.95673140e-01]
 [ 5.95673140e-01  1.98557713e-01  0.00000000e+00]
 [ 5.95673140e-01  1.98557713e-01  1.98557713e-01]
 [ 5.95673140e-01  1.98557713e-01  3.97115427e-01]
 [ 5.95673140e-01  1.98557713e-01  5.95673140e-01]
 [ 5.95673140e-01  3.97115427e-01  0.00000000e+00]
 [ 5.95673140e-01  3.97115427e-01  1.98557713e-01]
 [ 5.95673140e-01  3.97115427e-01  3.97115427e-01]
 [ 5.95673140e-01  3.97115427e-01  5.95673140e-01]
 [ 5.95673140e-01  5.95673140e-01  0.00000000e+00]
 [ 5.95673140e-01  5.95673140e-01  1.98557713e-01]
 [ 5.95673140e-01  5.95673140e-01  3.97115427e-01]
 [ 5.95673140e-01  5.95673140e-01  5.95673140e-01]]
Overwritten attributes  m0 c0 kmesh tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (20 / [17 17 17]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [123 123 123].

kmesh = [4 4 4]
Input parent grid mesh = [19, 19, 19], ke_cutoff =  91.23
Final parent grid size = [19 19 19]

Selecting interpolation points
nkpts = 64, nao = 156, c0 =  20.00
Parent grid mesh = [19 19 19], grid size = 6859
    CPU time for select interpolation points    553.05 sec, wall time     19.54 sec
Pivoted Cholesky rank = 5121, nip = 3120, estimated error = 3.46e-03
Number of interpolation points = 3120, effective CISDF =  20.00
    CPU time for building left-hand side     89.70 sec, wall time      7.05 sec

kpt = 64, ngrid = 4913, nao = 156
ngrid = 4913, blksize = 7353, nip = 3120
required disk space = 15 GB
finished creating fswp: /central/scratch/yangjunjie/fftisdf-yang-20-19-19-19/46905133/byhmbus1
blksize = 7353, memory for aoR_loop = 23491 MB
finished aoR_loop[       0:    4913]
    CPU time for building right-hand side    140.15 sec, wall time     16.94 sec
w[  0], rank = 3120 / 3120
    CPU time for w[  0]    417.21 sec, wall time     13.39 sec
w[  1], rank = 3120 / 3120
    CPU time for w[  1]    441.36 sec, wall time     14.38 sec
w[  2], rank = 3120 / 3120
    CPU time for w[  2]   3279.47 sec, wall time    106.06 sec
w[  3], rank = 3120 / 3120
    CPU time for w[  3]    449.53 sec, wall time     14.65 sec
w[  4], rank = 3120 / 3120
    CPU time for w[  4]    443.65 sec, wall time     14.56 sec
w[  5], rank = 3120 / 3120
    CPU time for w[  5]    417.86 sec, wall time     13.67 sec
w[  6], rank = 3120 / 3120
    CPU time for w[  6]    427.79 sec, wall time     13.97 sec
w[  7], rank = 3120 / 3120
    CPU time for w[  7]    441.07 sec, wall time     14.53 sec
w[  8], rank = 3120 / 3120
    CPU time for w[  8]    724.04 sec, wall time     23.47 sec
w[  9], rank = 3120 / 3120
    CPU time for w[  9]    433.28 sec, wall time     14.10 sec
w[ 10], rank = 3120 / 3120
    CPU time for w[ 10]    418.44 sec, wall time     13.50 sec
w[ 11], rank = 3120 / 3120
    CPU time for w[ 11]    400.71 sec, wall time     13.08 sec
w[ 12], rank = 3120 / 3120
    CPU time for w[ 12]    432.36 sec, wall time     14.11 sec
w[ 13], rank = 3120 / 3120
    CPU time for w[ 13]    429.40 sec, wall time     14.03 sec
w[ 14], rank = 3120 / 3120
    CPU time for w[ 14]    436.38 sec, wall time     14.22 sec
w[ 15], rank = 3120 / 3120
    CPU time for w[ 15]    549.79 sec, wall time     18.01 sec
w[ 16], rank = 3120 / 3120
    CPU time for w[ 16]    421.43 sec, wall time     13.77 sec
w[ 17], rank = 3120 / 3120
    CPU time for w[ 17]   1323.88 sec, wall time     43.03 sec
w[ 18], rank = 3120 / 3120
    CPU time for w[ 18]    469.25 sec, wall time     15.22 sec
w[ 19], rank = 3120 / 3120
    CPU time for w[ 19]    449.74 sec, wall time     14.68 sec
w[ 20], rank = 3120 / 3120
    CPU time for w[ 20]    459.57 sec, wall time     15.10 sec
w[ 21], rank = 3120 / 3120
    CPU time for w[ 21]    443.28 sec, wall time     14.67 sec
w[ 22], rank = 3120 / 3120
    CPU time for w[ 22]    427.90 sec, wall time     14.14 sec
w[ 23], rank = 3120 / 3120
    CPU time for w[ 23]    761.64 sec, wall time     24.83 sec
w[ 24], rank = 3120 / 3120
    CPU time for w[ 24]    630.46 sec, wall time     20.54 sec
w[ 25], rank = 3120 / 3120
    CPU time for w[ 25]    435.57 sec, wall time     14.24 sec
w[ 26], rank = 3120 / 3120
    CPU time for w[ 26]    446.41 sec, wall time     14.54 sec
w[ 27], rank = 3120 / 3120
    CPU time for w[ 27]    685.66 sec, wall time     22.36 sec
w[ 28], rank = 3120 / 3120
    CPU time for w[ 28]    439.53 sec, wall time     14.36 sec
w[ 29], rank = 3120 / 3120
    CPU time for w[ 29]    421.54 sec, wall time     13.85 sec
w[ 30], rank = 3120 / 3120
    CPU time for w[ 30]   4017.51 sec, wall time    130.27 sec
w[ 31], rank = 3120 / 3120
    CPU time for w[ 31]    431.48 sec, wall time     14.12 sec
w[ 32], rank = 3120 / 3120
    CPU time for w[ 32]    437.30 sec, wall time     14.12 sec
w[ 33], rank = 3120 / 3120
    CPU time for w[ 33]    434.38 sec, wall time     14.18 sec
w[ 34], rank = 3120 / 3120
    CPU time for w[ 34]    997.58 sec, wall time     32.38 sec
w[ 35], rank = 3120 / 3120
    CPU time for w[ 35]    983.94 sec, wall time     32.01 sec
w[ 36], rank = 3120 / 3120
    CPU time for w[ 36]    420.49 sec, wall time     13.77 sec
w[ 37], rank = 3120 / 3120
    CPU time for w[ 37]    541.00 sec, wall time     17.78 sec
w[ 38], rank = 3120 / 3120
    CPU time for w[ 38]    587.80 sec, wall time     19.59 sec
w[ 39], rank = 3120 / 3120
    CPU time for w[ 39]    839.59 sec, wall time     27.39 sec
w[ 40], rank = 3120 / 3120
    CPU time for w[ 40]    427.29 sec, wall time     13.80 sec
w[ 41], rank = 3120 / 3120
    CPU time for w[ 41]    450.70 sec, wall time     14.70 sec
w[ 42], rank = 3120 / 3120
    CPU time for w[ 42]    443.64 sec, wall time     14.36 sec
w[ 43], rank = 3120 / 3120
    CPU time for w[ 43]    447.13 sec, wall time     14.53 sec
w[ 44], rank = 3120 / 3120
    CPU time for w[ 44]    865.86 sec, wall time     28.16 sec
w[ 45], rank = 3120 / 3120
    CPU time for w[ 45]    411.57 sec, wall time     13.52 sec
w[ 46], rank = 3120 / 3120
    CPU time for w[ 46]    411.16 sec, wall time     13.44 sec
w[ 47], rank = 3120 / 3120
    CPU time for w[ 47]    424.74 sec, wall time     13.93 sec
w[ 48], rank = 3120 / 3120
    CPU time for w[ 48]    453.01 sec, wall time     14.73 sec
w[ 49], rank = 3120 / 3120
    CPU time for w[ 49]    432.71 sec, wall time     14.13 sec
w[ 50], rank = 3120 / 3120
    CPU time for w[ 50]    435.94 sec, wall time     14.26 sec
w[ 51], rank = 3120 / 3120
    CPU time for w[ 51]   1007.38 sec, wall time     32.83 sec
w[ 52], rank = 3120 / 3120
    CPU time for w[ 52]    441.31 sec, wall time     14.40 sec
