OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46836071/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46836071/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  20.00
       get_partition wall time:     7.386894 CPU time:     7.368585
len of partition[   0] =  22632
len of partition[   1] =  22632
len of partition[   2] =  22632
len of partition[   3] =  22632
len of partition[   4] =  22441
len of partition[   5] =  22521
len of partition[   6] =  22438
len of partition[   7] =  22352
len of partition[   8] =  21688
len of partition[   9] =  21626
len of partition[  10] =  21626
len of partition[  11] =  21564
len of partition[  12] =  25929
len of partition[  13] =  25736
len of partition[  14] =  25788
len of partition[  15] =  25788
len of partition[  16] =  22632
len of partition[  17] =  22632
len of partition[  18] =  22632
len of partition[  19] =  22632
len of partition[  20] =  22441
len of partition[  21] =  22521
len of partition[  22] =  22438
len of partition[  23] =  22352
len of partition[  24] =  21688
len of partition[  25] =  21626
len of partition[  26] =  21626
len of partition[  27] =  21564
len of partition[  28] =  25929
len of partition[  29] =  25736
len of partition[  30] =  25788
len of partition[  31] =  25788
len of partition[  32] =  22632
len of partition[  33] =  22632
len of partition[  34] =  22632
len of partition[  35] =  22632
len of partition[  36] =  22441
len of partition[  37] =  22521
len of partition[  38] =  22438
len of partition[  39] =  22352
len of partition[  40] =  21688
len of partition[  41] =  21626
len of partition[  42] =  21626
len of partition[  43] =  21564
len of partition[  44] =  25929
len of partition[  45] =  25736
len of partition[  46] =  25788
len of partition[  47] =  25788
len of partition[  48] =  22632
len of partition[  49] =  22632
len of partition[  50] =  22632
len of partition[  51] =  22632
len of partition[  52] =  22441
len of partition[  53] =  22521
len of partition[  54] =  22438
len of partition[  55] =  22352
len of partition[  56] =  21688
len of partition[  57] =  21626
len of partition[  58] =  21626
len of partition[  59] =  21564
len of partition[  60] =  25929
len of partition[  61] =  25736
len of partition[  62] =  25788
len of partition[  63] =  25788
len of partition[  64] =  22632
len of partition[  65] =  22632
len of partition[  66] =  22632
len of partition[  67] =  22632
len of partition[  68] =  22441
len of partition[  69] =  22521
len of partition[  70] =  22438
len of partition[  71] =  22352
len of partition[  72] =  21688
len of partition[  73] =  21626
len of partition[  74] =  21626
len of partition[  75] =  21564
len of partition[  76] =  25929
len of partition[  77] =  25736
len of partition[  78] =  25788
len of partition[  79] =  25788
len of partition[  80] =  22632
len of partition[  81] =  22632
len of partition[  82] =  22632
len of partition[  83] =  22632
len of partition[  84] =  22441
len of partition[  85] =  22521
len of partition[  86] =  22438
len of partition[  87] =  22352
len of partition[  88] =  21688
len of partition[  89] =  21626
len of partition[  90] =  21626
len of partition[  91] =  21564
len of partition[  92] =  25929
len of partition[  93] =  25736
len of partition[  94] =  25788
len of partition[  95] =  25788
len of partition[  96] =  22632
len of partition[  97] =  22632
len of partition[  98] =  22632
len of partition[  99] =  22632
len of partition[ 100] =  22441
len of partition[ 101] =  22521
len of partition[ 102] =  22438
len of partition[ 103] =  22352
len of partition[ 104] =  21688
len of partition[ 105] =  21626
len of partition[ 106] =  21626
len of partition[ 107] =  21564
len of partition[ 108] =  25929
len of partition[ 109] =  25736
len of partition[ 110] =  25788
len of partition[ 111] =  25788
len of partition[ 112] =  22632
len of partition[ 113] =  22632
len of partition[ 114] =  22632
len of partition[ 115] =  22632
len of partition[ 116] =  22441
len of partition[ 117] =  22521
len of partition[ 118] =  22438
len of partition[ 119] =  22352
len of partition[ 120] =  21688
len of partition[ 121] =  21626
len of partition[ 122] =  21626
len of partition[ 123] =  21564
len of partition[ 124] =  25929
len of partition[ 125] =  25736
len of partition[ 126] =  25788
len of partition[ 127] =  25788
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     7.842855 CPU time:   216.398911
In _build_buffer: ISDF Local size of buffer = 773.326 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  216
select_IP_local_atm: npt_found =  217
select_IP_local_atm: npt_found =  224
select_IP_local_atm: npt_found =  221
select_IP_local_atm: npt_found =  164
select_IP_local_atm: npt_found =  166
select_IP_local_atm: npt_found =  163
select_IP_local_atm: npt_found =  165
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  169
select_IP_local_atm: npt_found =  225
select_IP_local_atm: npt_found =  221
select_IP_local_atm: npt_found =  225
select_IP_local_atm: npt_found =  225
select_IP_local_step1 wall time:     5.608647 CPU time:   174.021489
 build_aoRg_possible wall time:     0.049263 CPU time:     1.594011
select_IP_local_step2 wall time:     0.000238 CPU time:     0.000251
select_IP_local_step3 wall time:     0.001746 CPU time:     0.063588
Memory usage for aoR  :   1867.238 MB
Memory usage for aoRg :     15.768 MB
            build_IP wall time:     5.659894 CPU time:   175.679338
build_aux_basis_local wall time:     2.897741 CPU time:    83.165480
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]      9.91 sec, wall time      5.41 sec
    CPU time for gen W [   2|[  32:  64]      9.55 sec, wall time      5.08 sec
    CPU time for gen W [   3|[  64:  96]      7.31 sec, wall time      4.44 sec
    CPU time for gen W [   4|[  96: 128]      8.60 sec, wall time      4.78 sec
    CPU time for gen W [   5|[ 128: 160]      8.81 sec, wall time      4.98 sec
    CPU time for gen W [   6|[ 160: 192]      9.04 sec, wall time      5.17 sec
    CPU time for gen W [   7|[ 192: 216]      7.38 sec, wall time      3.92 sec
    CPU time for gen W [   8|[   0:  32]      9.51 sec, wall time      5.61 sec
    CPU time for gen W [   9|[  32:  64]      8.61 sec, wall time      4.92 sec
    CPU time for gen W [  10|[  64:  96]      8.75 sec, wall time      4.91 sec
    CPU time for gen W [  11|[  96: 128]      8.83 sec, wall time      4.98 sec
    CPU time for gen W [  12|[ 128: 160]      8.74 sec, wall time      4.92 sec
    CPU time for gen W [  13|[ 160: 192]      8.63 sec, wall time      4.88 sec
    CPU time for gen W [  14|[ 192: 217]      7.43 sec, wall time      3.84 sec
    CPU time for gen W [  15|[   0:  32]      8.77 sec, wall time      5.00 sec
    CPU time for gen W [  16|[  32:  64]      8.67 sec, wall time      4.86 sec
    CPU time for gen W [  17|[  64:  96]      8.76 sec, wall time      4.91 sec
    CPU time for gen W [  18|[  96: 128]      8.88 sec, wall time      4.97 sec
    CPU time for gen W [  19|[ 128: 160]      8.70 sec, wall time      4.92 sec
    CPU time for gen W [  20|[ 160: 192]      8.75 sec, wall time      4.86 sec
    CPU time for gen W [  21|[ 192: 224]      8.63 sec, wall time      4.89 sec
    CPU time for gen W [  22|[   0:  32]      9.02 sec, wall time      5.29 sec
    CPU time for gen W [  23|[  32:  64]      8.86 sec, wall time      5.02 sec
    CPU time for gen W [  24|[  64:  96]      9.04 sec, wall time      5.15 sec
    CPU time for gen W [  25|[  96: 128]      9.12 sec, wall time      5.19 sec
    CPU time for gen W [  26|[ 128: 160]      9.47 sec, wall time      5.44 sec
    CPU time for gen W [  27|[ 160: 192]      9.86 sec, wall time      5.69 sec
    CPU time for gen W [  28|[ 192: 221]      8.82 sec, wall time      5.09 sec
    CPU time for gen W [  29|[   0:  32]     10.03 sec, wall time      6.08 sec
    CPU time for gen W [  30|[  32:  64]      8.35 sec, wall time      4.70 sec
    CPU time for gen W [  31|[  64:  96]      8.49 sec, wall time      4.68 sec
    CPU time for gen W [  32|[  96: 128]      8.30 sec, wall time      4.68 sec
    CPU time for gen W [  33|[ 128: 160]      8.29 sec, wall time      4.68 sec
    CPU time for gen W [  34|[ 160: 164]      2.73 sec, wall time      0.71 sec
    CPU time for gen W [  35|[   0:  32]      8.99 sec, wall time      5.24 sec
    CPU time for gen W [  36|[  32:  64]      8.70 sec, wall time      4.83 sec
    CPU time for gen W [  37|[  64:  96]      8.69 sec, wall time      4.87 sec
    CPU time for gen W [  38|[  96: 128]      8.77 sec, wall time      4.93 sec
    CPU time for gen W [  39|[ 128: 160]      9.05 sec, wall time      5.14 sec
    CPU time for gen W [  40|[ 160: 166]      3.43 sec, wall time      1.11 sec
    CPU time for gen W [  41|[   0:  32]      9.82 sec, wall time      5.85 sec
    CPU time for gen W [  42|[  32:  64]      9.02 sec, wall time      5.15 sec
    CPU time for gen W [  43|[  64:  96]      8.82 sec, wall time      5.01 sec
    CPU time for gen W [  44|[  96: 128]      9.36 sec, wall time      5.29 sec
    CPU time for gen W [  45|[ 128: 160]      8.96 sec, wall time      5.14 sec
    CPU time for gen W [  46|[ 160: 163]      2.54 sec, wall time      0.60 sec
    CPU time for gen W [  47|[   0:  32]      8.93 sec, wall time      5.02 sec
    CPU time for gen W [  48|[  32:  64]      9.17 sec, wall time      5.21 sec
    CPU time for gen W [  49|[  64:  96]      9.20 sec, wall time      5.31 sec
    CPU time for gen W [  50|[  96: 128]      9.01 sec, wall time      5.17 sec
    CPU time for gen W [  51|[ 128: 160]      8.86 sec, wall time      5.01 sec
    CPU time for gen W [  52|[ 160: 165]      3.12 sec, wall time      0.92 sec
    CPU time for gen W [  53|[   0:  32]      9.36 sec, wall time      5.53 sec
    CPU time for gen W [  54|[  32:  64]      8.81 sec, wall time      5.00 sec
    CPU time for gen W [  55|[  64:  96]      8.47 sec, wall time      4.86 sec
    CPU time for gen W [  56|[  96: 128]      8.29 sec, wall time      4.64 sec
    CPU time for gen W [  57|[ 128: 160]      8.23 sec, wall time      4.65 sec
    CPU time for gen W [  58|[ 160: 169]      3.95 sec, wall time      1.44 sec
    CPU time for gen W [  59|[   0:  32]      9.01 sec, wall time      5.25 sec
    CPU time for gen W [  60|[  32:  64]      8.39 sec, wall time      4.71 sec
    CPU time for gen W [  61|[  64:  96]      8.37 sec, wall time      4.73 sec
    CPU time for gen W [  62|[  96: 128]      8.47 sec, wall time      4.72 sec
    CPU time for gen W [  63|[ 128: 160]      8.69 sec, wall time      4.83 sec
    CPU time for gen W [  64|[ 160: 169]      4.07 sec, wall time      1.50 sec
    CPU time for gen W [  65|[   0:  32]      9.08 sec, wall time      5.31 sec
    CPU time for gen W [  66|[  32:  64]      8.55 sec, wall time      4.80 sec
    CPU time for gen W [  67|[  64:  96]      8.83 sec, wall time      5.00 sec
    CPU time for gen W [  68|[  96: 128]      8.67 sec, wall time      4.88 sec
    CPU time for gen W [  69|[ 128: 160]      8.72 sec, wall time      4.95 sec
    CPU time for gen W [  70|[ 160: 169]      4.06 sec, wall time      1.51 sec
    CPU time for gen W [  71|[   0:  32]      9.20 sec, wall time      5.33 sec
    CPU time for gen W [  72|[  32:  64]      8.75 sec, wall time      4.91 sec
    CPU time for gen W [  73|[  64:  96]      8.78 sec, wall time      4.89 sec
    CPU time for gen W [  74|[  96: 128]      8.65 sec, wall time      4.97 sec
    CPU time for gen W [  75|[ 128: 160]      9.16 sec, wall time      5.15 sec
    CPU time for gen W [  76|[ 160: 169]      4.23 sec, wall time      1.62 sec
    CPU time for gen W [  77|[   0:  32]      9.66 sec, wall time      5.73 sec
    CPU time for gen W [  78|[  32:  64]      9.18 sec, wall time      5.26 sec
    CPU time for gen W [  79|[  64:  96]      9.20 sec, wall time      5.27 sec
    CPU time for gen W [  80|[  96: 128]      8.89 sec, wall time      5.04 sec
    CPU time for gen W [  81|[ 128: 160]      8.51 sec, wall time      4.85 sec
    CPU time for gen W [  82|[ 160: 192]      8.27 sec, wall time      4.64 sec
    CPU time for gen W [  83|[ 192: 224]      8.40 sec, wall time      4.65 sec
    CPU time for gen W [  84|[ 224: 225]      5.10 sec, wall time      0.27 sec
    CPU time for gen W [  85|[   0:  32]     11.40 sec, wall time      4.70 sec
    CPU time for gen W [  86|[  32:  64]      8.58 sec, wall time      4.70 sec
    CPU time for gen W [  87|[  64:  96]      8.37 sec, wall time      4.70 sec
    CPU time for gen W [  88|[  96: 128]      8.30 sec, wall time      4.64 sec
    CPU time for gen W [  89|[ 128: 160]      8.51 sec, wall time      4.75 sec
    CPU time for gen W [  90|[ 160: 192]      8.59 sec, wall time      4.78 sec
    CPU time for gen W [  91|[ 192: 221]      7.91 sec, wall time      4.35 sec
    CPU time for gen W [  92|[   0:  32]      9.30 sec, wall time      5.45 sec
    CPU time for gen W [  93|[  32:  64]      9.07 sec, wall time      4.88 sec
    CPU time for gen W [  94|[  64:  96]      8.33 sec, wall time      4.82 sec
    CPU time for gen W [  95|[  96: 128]      8.68 sec, wall time      4.90 sec
    CPU time for gen W [  96|[ 128: 160]      8.70 sec, wall time      4.85 sec
    CPU time for gen W [  97|[ 160: 192]      8.94 sec, wall time      5.08 sec
    CPU time for gen W [  98|[ 192: 224]      8.77 sec, wall time      4.90 sec
    CPU time for gen W [  99|[ 224: 225]      5.68 sec, wall time      0.30 sec
    CPU time for gen W [ 100|[   0:  32]     11.80 sec, wall time      4.94 sec
    CPU time for gen W [ 101|[  32:  64]      8.82 sec, wall time      4.93 sec
    CPU time for gen W [ 102|[  64:  96]      9.08 sec, wall time      5.13 sec
    CPU time for gen W [ 103|[  96: 128]      8.99 sec, wall time      5.11 sec
    CPU time for gen W [ 104|[ 128: 160]      9.02 sec, wall time      5.12 sec
    CPU time for gen W [ 105|[ 160: 192]      9.02 sec, wall time      5.14 sec
    CPU time for gen W [ 106|[ 192: 224]      9.10 sec, wall time      5.14 sec
    CPU time for gen W [ 107|[ 224: 225]      5.26 sec, wall time      0.29 sec
     build_V_W_local wall time:   489.046448 CPU time:   896.464092
Number of interpolation points = 24864, effective CISDF =  35.32
    CPU time for ISDF build   1391.26 sec, wall time    514.28 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-20/46836071/isdf.chk
