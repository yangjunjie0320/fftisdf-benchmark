OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46836073/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-30/46836073/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  30.00
       get_partition wall time:    11.299178 CPU time:    11.209496
len of partition[   0] =  22632
len of partition[   1] =  22632
len of partition[   2] =  22632
len of partition[   3] =  22632
len of partition[   4] =  22441
len of partition[   5] =  22521
len of partition[   6] =  22438
len of partition[   7] =  22352
len of partition[   8] =  21688
len of partition[   9] =  21626
len of partition[  10] =  21626
len of partition[  11] =  21564
len of partition[  12] =  25929
len of partition[  13] =  25736
len of partition[  14] =  25788
len of partition[  15] =  25788
len of partition[  16] =  22632
len of partition[  17] =  22632
len of partition[  18] =  22632
len of partition[  19] =  22632
len of partition[  20] =  22441
len of partition[  21] =  22521
len of partition[  22] =  22438
len of partition[  23] =  22352
len of partition[  24] =  21688
len of partition[  25] =  21626
len of partition[  26] =  21626
len of partition[  27] =  21564
len of partition[  28] =  25929
len of partition[  29] =  25736
len of partition[  30] =  25788
len of partition[  31] =  25788
len of partition[  32] =  22632
len of partition[  33] =  22632
len of partition[  34] =  22632
len of partition[  35] =  22632
len of partition[  36] =  22441
len of partition[  37] =  22521
len of partition[  38] =  22438
len of partition[  39] =  22352
len of partition[  40] =  21688
len of partition[  41] =  21626
len of partition[  42] =  21626
len of partition[  43] =  21564
len of partition[  44] =  25929
len of partition[  45] =  25736
len of partition[  46] =  25788
len of partition[  47] =  25788
len of partition[  48] =  22632
len of partition[  49] =  22632
len of partition[  50] =  22632
len of partition[  51] =  22632
len of partition[  52] =  22441
len of partition[  53] =  22521
len of partition[  54] =  22438
len of partition[  55] =  22352
len of partition[  56] =  21688
len of partition[  57] =  21626
len of partition[  58] =  21626
len of partition[  59] =  21564
len of partition[  60] =  25929
len of partition[  61] =  25736
len of partition[  62] =  25788
len of partition[  63] =  25788
len of partition[  64] =  22632
len of partition[  65] =  22632
len of partition[  66] =  22632
len of partition[  67] =  22632
len of partition[  68] =  22441
len of partition[  69] =  22521
len of partition[  70] =  22438
len of partition[  71] =  22352
len of partition[  72] =  21688
len of partition[  73] =  21626
len of partition[  74] =  21626
len of partition[  75] =  21564
len of partition[  76] =  25929
len of partition[  77] =  25736
len of partition[  78] =  25788
len of partition[  79] =  25788
len of partition[  80] =  22632
len of partition[  81] =  22632
len of partition[  82] =  22632
len of partition[  83] =  22632
len of partition[  84] =  22441
len of partition[  85] =  22521
len of partition[  86] =  22438
len of partition[  87] =  22352
len of partition[  88] =  21688
len of partition[  89] =  21626
len of partition[  90] =  21626
len of partition[  91] =  21564
len of partition[  92] =  25929
len of partition[  93] =  25736
len of partition[  94] =  25788
len of partition[  95] =  25788
len of partition[  96] =  22632
len of partition[  97] =  22632
len of partition[  98] =  22632
len of partition[  99] =  22632
len of partition[ 100] =  22441
len of partition[ 101] =  22521
len of partition[ 102] =  22438
len of partition[ 103] =  22352
len of partition[ 104] =  21688
len of partition[ 105] =  21626
len of partition[ 106] =  21626
len of partition[ 107] =  21564
len of partition[ 108] =  25929
len of partition[ 109] =  25736
len of partition[ 110] =  25788
len of partition[ 111] =  25788
len of partition[ 112] =  22632
len of partition[ 113] =  22632
len of partition[ 114] =  22632
len of partition[ 115] =  22632
len of partition[ 116] =  22441
len of partition[ 117] =  22521
len of partition[ 118] =  22438
len of partition[ 119] =  22352
len of partition[ 120] =  21688
len of partition[ 121] =  21626
len of partition[ 122] =  21626
len of partition[ 123] =  21564
len of partition[ 124] =  25929
len of partition[ 125] =  25736
len of partition[ 126] =  25788
len of partition[ 127] =  25788
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     6.623004 CPU time:   201.906384
In _build_buffer: ISDF Local size of buffer = 783.739 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  237
select_IP_local_atm: npt_found =  240
select_IP_local_atm: npt_found =  231
select_IP_local_atm: npt_found =  238
select_IP_local_atm: npt_found =  208
select_IP_local_atm: npt_found =  203
select_IP_local_atm: npt_found =  202
select_IP_local_atm: npt_found =  194
select_IP_local_atm: npt_found =  221
select_IP_local_atm: npt_found =  222
select_IP_local_atm: npt_found =  218
select_IP_local_atm: npt_found =  214
select_IP_local_atm: npt_found =  289
select_IP_local_atm: npt_found =  275
select_IP_local_atm: npt_found =  288
select_IP_local_atm: npt_found =  288
select_IP_local_step1 wall time:   116.016108 CPU time:  3290.585208
 build_aoRg_possible wall time:     0.049969 CPU time:     1.211919
select_IP_local_step2 wall time:     0.000273 CPU time:     0.000345
select_IP_local_step3 wall time:     0.001767 CPU time:     0.005710
Memory usage for aoR  :   1867.238 MB
Memory usage for aoRg :     19.161 MB
            build_IP wall time:   116.068117 CPU time:  3291.803182
build_aux_basis_local wall time:     3.641910 CPU time:   104.275313
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]   1660.00 sec, wall time     58.78 sec
    CPU time for gen W [   2|[  32:  64]     84.02 sec, wall time      6.79 sec
    CPU time for gen W [   3|[  64:  96]     43.88 sec, wall time      5.37 sec
    CPU time for gen W [   4|[  96: 128]     93.69 sec, wall time      6.82 sec
    CPU time for gen W [   5|[ 128: 160]    183.16 sec, wall time      9.76 sec
    CPU time for gen W [   6|[ 160: 192]     54.81 sec, wall time      5.20 sec
    CPU time for gen W [   7|[ 192: 224]     40.84 sec, wall time      5.23 sec
    CPU time for gen W [   8|[ 224: 237]     17.10 sec, wall time      2.07 sec
    CPU time for gen W [   9|[   0:  32]     80.80 sec, wall time      5.91 sec
    CPU time for gen W [  10|[  32:  64]     34.22 sec, wall time      4.40 sec
    CPU time for gen W [  11|[  64:  96]     99.15 sec, wall time      7.68 sec
    CPU time for gen W [  12|[  96: 128]     25.39 sec, wall time      3.86 sec
    CPU time for gen W [  13|[ 128: 160]     29.86 sec, wall time      4.03 sec
    CPU time for gen W [  14|[ 160: 192]    369.92 sec, wall time     15.46 sec
    CPU time for gen W [  15|[ 192: 224]     34.40 sec, wall time      4.61 sec
    CPU time for gen W [  16|[ 224: 240]   1477.39 sec, wall time     51.49 sec
    CPU time for gen W [  17|[   0:  32]   2002.78 sec, wall time     72.41 sec
    CPU time for gen W [  18|[  32:  64]   1520.18 sec, wall time     56.25 sec
    CPU time for gen W [  19|[  64:  96]   1020.12 sec, wall time     36.59 sec
    CPU time for gen W [  20|[  96: 128]    397.47 sec, wall time     16.69 sec
    CPU time for gen W [  21|[ 128: 160]     35.49 sec, wall time      4.35 sec
    CPU time for gen W [  22|[ 160: 192]    818.75 sec, wall time     31.25 sec
    CPU time for gen W [  23|[ 192: 224]   2056.95 sec, wall time     76.01 sec
    CPU time for gen W [  24|[ 224: 231]   1680.83 sec, wall time     59.99 sec
    CPU time for gen W [  25|[   0:  32]   2046.41 sec, wall time     77.03 sec
    CPU time for gen W [  26|[  32:  64]   2052.27 sec, wall time     80.31 sec
    CPU time for gen W [  27|[  64:  96]   1905.29 sec, wall time     74.40 sec
    CPU time for gen W [  28|[  96: 128]   1575.17 sec, wall time     60.29 sec
    CPU time for gen W [  29|[ 128: 160]   1695.95 sec, wall time     62.45 sec
    CPU time for gen W [  30|[ 160: 192]   1876.03 sec, wall time     68.32 sec
    CPU time for gen W [  31|[ 192: 224]   1873.41 sec, wall time     69.96 sec
    CPU time for gen W [  32|[ 224: 238]   2189.96 sec, wall time     81.85 sec
    CPU time for gen W [  33|[   0:  32]   2176.80 sec, wall time     85.09 sec
    CPU time for gen W [  34|[  32:  64]   1948.84 sec, wall time     77.49 sec
    CPU time for gen W [  35|[  64:  96]   1455.07 sec, wall time     54.64 sec
    CPU time for gen W [  36|[  96: 128]    397.51 sec, wall time     18.05 sec
    CPU time for gen W [  37|[ 128: 160]     32.55 sec, wall time      4.34 sec
    CPU time for gen W [  38|[ 160: 192]     30.71 sec, wall time      4.31 sec
    CPU time for gen W [  39|[ 192: 208]    137.43 sec, wall time      6.25 sec
    CPU time for gen W [  40|[   0:  32]   2133.13 sec, wall time     80.48 sec
    CPU time for gen W [  41|[  32:  64]   1930.04 sec, wall time     72.68 sec
    CPU time for gen W [  42|[  64:  96]   2189.97 sec, wall time     82.11 sec
    CPU time for gen W [  43|[  96: 128]   1826.73 sec, wall time     69.67 sec
    CPU time for gen W [  44|[ 128: 160]   1817.64 sec, wall time     67.99 sec
    CPU time for gen W [  45|[ 160: 192]   1706.69 sec, wall time     62.98 sec
    CPU time for gen W [  46|[ 192: 203]   1467.63 sec, wall time     54.54 sec
    CPU time for gen W [  47|[   0:  32]   1066.74 sec, wall time     41.38 sec
    CPU time for gen W [  48|[  32:  64]     30.59 sec, wall time      4.11 sec
    CPU time for gen W [  49|[  64:  96]    557.08 sec, wall time     22.63 sec
    CPU time for gen W [  50|[  96: 128]   1984.45 sec, wall time     74.13 sec
    CPU time for gen W [  51|[ 128: 160]   1068.01 sec, wall time     40.99 sec
    CPU time for gen W [  52|[ 160: 192]     29.81 sec, wall time      4.15 sec
    CPU time for gen W [  53|[ 192: 202]    433.15 sec, wall time     16.27 sec
    CPU time for gen W [  54|[   0:  32]    868.45 sec, wall time     35.64 sec
    CPU time for gen W [  55|[  32:  64]     43.91 sec, wall time      4.74 sec
    CPU time for gen W [  56|[  64:  96]   1875.18 sec, wall time     70.11 sec
    CPU time for gen W [  57|[  96: 128]   1683.48 sec, wall time     62.74 sec
    CPU time for gen W [  58|[ 128: 160]    103.23 sec, wall time      8.84 sec
    CPU time for gen W [  59|[ 160: 192]     43.09 sec, wall time      4.78 sec
    CPU time for gen W [  60|[ 192: 194]     10.63 sec, wall time      0.47 sec
    CPU time for gen W [  61|[   0:  32]    835.57 sec, wall time     32.63 sec
    CPU time for gen W [  62|[  32:  64]     32.23 sec, wall time      5.30 sec
    CPU time for gen W [  63|[  64:  96]     32.03 sec, wall time      5.63 sec
    CPU time for gen W [  64|[  96: 128]     34.49 sec, wall time      5.50 sec
    CPU time for gen W [  65|[ 128: 160]    111.19 sec, wall time      9.28 sec
    CPU time for gen W [  66|[ 160: 192]     85.38 sec, wall time      6.53 sec
    CPU time for gen W [  67|[ 192: 221]    980.30 sec, wall time     40.88 sec
    CPU time for gen W [  68|[   0:  32]     46.46 sec, wall time      6.05 sec
    CPU time for gen W [  69|[  32:  64]    307.12 sec, wall time     14.78 sec
    CPU time for gen W [  70|[  64:  96]    256.93 sec, wall time     12.24 sec
    CPU time for gen W [  71|[  96: 128]     39.94 sec, wall time      5.54 sec
    CPU time for gen W [  72|[ 128: 160]     37.76 sec, wall time      4.36 sec
    CPU time for gen W [  73|[ 160: 192]     36.82 sec, wall time      4.38 sec
    CPU time for gen W [  74|[ 192: 222]     78.84 sec, wall time      6.58 sec
    CPU time for gen W [  75|[   0:  32]   1179.50 sec, wall time     46.08 sec
    CPU time for gen W [  76|[  32:  64]    102.84 sec, wall time      7.79 sec
    CPU time for gen W [  77|[  64:  96]     40.07 sec, wall time      5.25 sec
    CPU time for gen W [  78|[  96: 128]    413.93 sec, wall time     20.37 sec
    CPU time for gen W [  79|[ 128: 160]     53.12 sec, wall time      3.09 sec
    CPU time for gen W [  80|[ 160: 192]     74.90 sec, wall time      6.06 sec
    CPU time for gen W [  81|[ 192: 218]     57.50 sec, wall time      5.54 sec
    CPU time for gen W [  82|[   0:  32]    401.19 sec, wall time     18.76 sec
    CPU time for gen W [  83|[  32:  64]     81.41 sec, wall time      7.11 sec
    CPU time for gen W [  84|[  64:  96]     56.86 sec, wall time      7.19 sec
    CPU time for gen W [  85|[  96: 128]     79.02 sec, wall time      6.38 sec
    CPU time for gen W [  86|[ 128: 160]     33.03 sec, wall time      4.18 sec
    CPU time for gen W [  87|[ 160: 192]     37.48 sec, wall time      4.66 sec
    CPU time for gen W [  88|[ 192: 214]     51.07 sec, wall time      4.63 sec
    CPU time for gen W [  89|[   0:  32]     92.44 sec, wall time      6.75 sec
    CPU time for gen W [  90|[  32:  64]    106.61 sec, wall time      6.96 sec
    CPU time for gen W [  91|[  64:  96]     44.12 sec, wall time      7.02 sec
    CPU time for gen W [  92|[  96: 128]     48.16 sec, wall time      6.11 sec
    CPU time for gen W [  93|[ 128: 160]     65.87 sec, wall time      6.36 sec
    CPU time for gen W [  94|[ 160: 192]     90.18 sec, wall time      6.11 sec
    CPU time for gen W [  95|[ 192: 224]    299.23 sec, wall time     14.09 sec
    CPU time for gen W [  96|[ 224: 256]     50.67 sec, wall time      6.16 sec
    CPU time for gen W [  97|[ 256: 288]     36.17 sec, wall time      4.75 sec
    CPU time for gen W [  98|[ 288: 289]     12.13 sec, wall time      0.39 sec
    CPU time for gen W [  99|[   0:  32]   1871.17 sec, wall time     68.73 sec
    CPU time for gen W [ 100|[  32:  64]   1739.66 sec, wall time     64.97 sec
    CPU time for gen W [ 101|[  64:  96]   1861.98 sec, wall time     66.53 sec
    CPU time for gen W [ 102|[  96: 128]   1654.71 sec, wall time     64.21 sec
    CPU time for gen W [ 103|[ 128: 160]     37.85 sec, wall time      6.05 sec
    CPU time for gen W [ 104|[ 160: 192]   1286.79 sec, wall time     47.67 sec
    CPU time for gen W [ 105|[ 192: 224]   1442.03 sec, wall time     53.13 sec
    CPU time for gen W [ 106|[ 224: 256]   1397.94 sec, wall time     54.51 sec
    CPU time for gen W [ 107|[ 256: 275]   1795.32 sec, wall time     66.48 sec
    CPU time for gen W [ 108|[   0:  32]    883.92 sec, wall time     36.55 sec
    CPU time for gen W [ 109|[  32:  64]     46.21 sec, wall time      5.58 sec
    CPU time for gen W [ 110|[  64:  96]     97.14 sec, wall time      7.46 sec
    CPU time for gen W [ 111|[  96: 128]    555.90 sec, wall time     23.74 sec
    CPU time for gen W [ 112|[ 128: 160]     52.73 sec, wall time      5.89 sec
    CPU time for gen W [ 113|[ 160: 192]     70.43 sec, wall time      6.49 sec
    CPU time for gen W [ 114|[ 192: 224]   1024.06 sec, wall time     39.16 sec
    CPU time for gen W [ 115|[ 224: 256]     34.06 sec, wall time      4.33 sec
    CPU time for gen W [ 116|[ 256: 288]     26.24 sec, wall time      4.03 sec
    CPU time for gen W [ 117|[   0:  32]     36.80 sec, wall time      4.69 sec
    CPU time for gen W [ 118|[  32:  64]    163.62 sec, wall time      9.61 sec
    CPU time for gen W [ 119|[  64:  96]     34.28 sec, wall time      5.50 sec
    CPU time for gen W [ 120|[  96: 128]     30.71 sec, wall time      4.48 sec
    CPU time for gen W [ 121|[ 128: 160]     32.47 sec, wall time      5.91 sec
    CPU time for gen W [ 122|[ 160: 192]    149.16 sec, wall time      9.53 sec
    CPU time for gen W [ 123|[ 192: 224]     95.49 sec, wall time      7.98 sec
    CPU time for gen W [ 124|[ 224: 256]     28.67 sec, wall time      4.13 sec
    CPU time for gen W [ 125|[ 256: 288]     27.17 sec, wall time      3.97 sec
     build_V_W_local wall time:  3310.015410 CPU time: 81023.715913
Number of interpolation points = 30144, effective CISDF =  42.82
    CPU time for ISDF build  84643.05 sec, wall time   3448.99 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-30/46836073/isdf.chk
