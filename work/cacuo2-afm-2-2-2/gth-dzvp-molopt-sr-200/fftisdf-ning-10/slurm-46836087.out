OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-10/46836087/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-10/46836087/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  10.00
       get_partition wall time:     7.112151 CPU time:     7.099408
len of partition[   0] =  22632
len of partition[   1] =  22632
len of partition[   2] =  22632
len of partition[   3] =  22632
len of partition[   4] =  22441
len of partition[   5] =  22521
len of partition[   6] =  22438
len of partition[   7] =  22352
len of partition[   8] =  21688
len of partition[   9] =  21626
len of partition[  10] =  21626
len of partition[  11] =  21564
len of partition[  12] =  25929
len of partition[  13] =  25736
len of partition[  14] =  25788
len of partition[  15] =  25788
len of partition[  16] =  22632
len of partition[  17] =  22632
len of partition[  18] =  22632
len of partition[  19] =  22632
len of partition[  20] =  22441
len of partition[  21] =  22521
len of partition[  22] =  22438
len of partition[  23] =  22352
len of partition[  24] =  21688
len of partition[  25] =  21626
len of partition[  26] =  21626
len of partition[  27] =  21564
len of partition[  28] =  25929
len of partition[  29] =  25736
len of partition[  30] =  25788
len of partition[  31] =  25788
len of partition[  32] =  22632
len of partition[  33] =  22632
len of partition[  34] =  22632
len of partition[  35] =  22632
len of partition[  36] =  22441
len of partition[  37] =  22521
len of partition[  38] =  22438
len of partition[  39] =  22352
len of partition[  40] =  21688
len of partition[  41] =  21626
len of partition[  42] =  21626
len of partition[  43] =  21564
len of partition[  44] =  25929
len of partition[  45] =  25736
len of partition[  46] =  25788
len of partition[  47] =  25788
len of partition[  48] =  22632
len of partition[  49] =  22632
len of partition[  50] =  22632
len of partition[  51] =  22632
len of partition[  52] =  22441
len of partition[  53] =  22521
len of partition[  54] =  22438
len of partition[  55] =  22352
len of partition[  56] =  21688
len of partition[  57] =  21626
len of partition[  58] =  21626
len of partition[  59] =  21564
len of partition[  60] =  25929
len of partition[  61] =  25736
len of partition[  62] =  25788
len of partition[  63] =  25788
len of partition[  64] =  22632
len of partition[  65] =  22632
len of partition[  66] =  22632
len of partition[  67] =  22632
len of partition[  68] =  22441
len of partition[  69] =  22521
len of partition[  70] =  22438
len of partition[  71] =  22352
len of partition[  72] =  21688
len of partition[  73] =  21626
len of partition[  74] =  21626
len of partition[  75] =  21564
len of partition[  76] =  25929
len of partition[  77] =  25736
len of partition[  78] =  25788
len of partition[  79] =  25788
len of partition[  80] =  22632
len of partition[  81] =  22632
len of partition[  82] =  22632
len of partition[  83] =  22632
len of partition[  84] =  22441
len of partition[  85] =  22521
len of partition[  86] =  22438
len of partition[  87] =  22352
len of partition[  88] =  21688
len of partition[  89] =  21626
len of partition[  90] =  21626
len of partition[  91] =  21564
len of partition[  92] =  25929
len of partition[  93] =  25736
len of partition[  94] =  25788
len of partition[  95] =  25788
len of partition[  96] =  22632
len of partition[  97] =  22632
len of partition[  98] =  22632
len of partition[  99] =  22632
len of partition[ 100] =  22441
len of partition[ 101] =  22521
len of partition[ 102] =  22438
len of partition[ 103] =  22352
len of partition[ 104] =  21688
len of partition[ 105] =  21626
len of partition[ 106] =  21626
len of partition[ 107] =  21564
len of partition[ 108] =  25929
len of partition[ 109] =  25736
len of partition[ 110] =  25788
len of partition[ 111] =  25788
len of partition[ 112] =  22632
len of partition[ 113] =  22632
len of partition[ 114] =  22632
len of partition[ 115] =  22632
len of partition[ 116] =  22441
len of partition[ 117] =  22521
len of partition[ 118] =  22438
len of partition[ 119] =  22352
len of partition[ 120] =  21688
len of partition[ 121] =  21626
len of partition[ 122] =  21626
len of partition[ 123] =  21564
len of partition[ 124] =  25929
len of partition[ 125] =  25736
len of partition[ 126] =  25788
len of partition[ 127] =  25788
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:    14.508587 CPU time:   334.922835
In _build_buffer: ISDF Local size of buffer = 939.764 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  398
select_IP_local_atm: npt_found =  400
select_IP_local_atm: npt_found =  400
select_IP_local_atm: npt_found =  398
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_atm: npt_found =  256
select_IP_local_step1 wall time:     3.902199 CPU time:   124.147761
 build_aoRg_possible wall time:     0.134302 CPU time:     2.494728
select_IP_local_step2 wall time:     0.000222 CPU time:     0.000253
select_IP_local_step3 wall time:     0.001247 CPU time:     0.001244
Memory usage for aoR  :   5521.006 MB
Memory usage for aoRg :     69.363 MB
            build_IP wall time:     4.037970 CPU time:   126.643986
build_aux_basis_local wall time:     5.844641 CPU time:   108.320748
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]     17.15 sec, wall time      4.98 sec
    CPU time for gen W [   2|[  32:  64]      9.93 sec, wall time      4.49 sec
    CPU time for gen W [   3|[  64:  96]     11.88 sec, wall time      4.65 sec
    CPU time for gen W [   4|[  96: 128]     11.91 sec, wall time      4.67 sec
    CPU time for gen W [   5|[ 128: 160]     11.86 sec, wall time      4.65 sec
    CPU time for gen W [   6|[ 160: 192]     11.87 sec, wall time      4.65 sec
    CPU time for gen W [   7|[ 192: 224]     11.84 sec, wall time      4.65 sec
    CPU time for gen W [   8|[ 224: 256]     11.88 sec, wall time      4.66 sec
    CPU time for gen W [   9|[ 256: 288]     11.87 sec, wall time      4.66 sec
    CPU time for gen W [  10|[ 288: 320]     11.98 sec, wall time      4.67 sec
    CPU time for gen W [  11|[ 320: 352]     13.81 sec, wall time      4.78 sec
    CPU time for gen W [  12|[ 352: 384]     10.02 sec, wall time      4.54 sec
    CPU time for gen W [  13|[ 384: 398]      7.09 sec, wall time      2.10 sec
    CPU time for gen W [  14|[   0:  32]     12.57 sec, wall time      5.43 sec
    CPU time for gen W [  15|[  32:  64]     13.92 sec, wall time      4.88 sec
    CPU time for gen W [  16|[  64:  96]      9.88 sec, wall time      4.42 sec
    CPU time for gen W [  17|[  96: 128]     11.89 sec, wall time      4.66 sec
    CPU time for gen W [  18|[ 128: 160]     12.02 sec, wall time      4.66 sec
    CPU time for gen W [  19|[ 160: 192]     12.96 sec, wall time      4.71 sec
    CPU time for gen W [  20|[ 192: 224]     10.79 sec, wall time      4.59 sec
    CPU time for gen W [  21|[ 224: 256]     11.94 sec, wall time      4.65 sec
    CPU time for gen W [  22|[ 256: 288]     12.01 sec, wall time      4.65 sec
    CPU time for gen W [  23|[ 288: 320]     11.83 sec, wall time      4.65 sec
    CPU time for gen W [  24|[ 320: 352]     11.92 sec, wall time      4.65 sec
    CPU time for gen W [  25|[ 352: 384]     11.85 sec, wall time      4.65 sec
    CPU time for gen W [  26|[ 384: 400]      8.39 sec, wall time      2.43 sec
    CPU time for gen W [  27|[   0:  32]     11.80 sec, wall time      5.15 sec
    CPU time for gen W [  28|[  32:  64]     11.69 sec, wall time      4.60 sec
    CPU time for gen W [  29|[  64:  96]     11.61 sec, wall time      4.61 sec
    CPU time for gen W [  30|[  96: 128]     11.87 sec, wall time      4.62 sec
    CPU time for gen W [  31|[ 128: 160]     11.77 sec, wall time      4.61 sec
    CPU time for gen W [  32|[ 160: 192]     11.76 sec, wall time      4.61 sec
    CPU time for gen W [  33|[ 192: 224]     11.64 sec, wall time      4.61 sec
    CPU time for gen W [  34|[ 224: 256]     11.76 sec, wall time      4.70 sec
    CPU time for gen W [  35|[ 256: 288]     11.72 sec, wall time      4.60 sec
    CPU time for gen W [  36|[ 288: 320]     11.85 sec, wall time      4.61 sec
    CPU time for gen W [  37|[ 320: 352]     11.72 sec, wall time      4.65 sec
    CPU time for gen W [  38|[ 352: 384]     11.68 sec, wall time      4.60 sec
    CPU time for gen W [  39|[ 384: 400]      7.70 sec, wall time      2.37 sec
    CPU time for gen W [  40|[   0:  32]     12.66 sec, wall time      5.24 sec
    CPU time for gen W [  41|[  32:  64]     11.86 sec, wall time      4.65 sec
    CPU time for gen W [  42|[  64:  96]     11.90 sec, wall time      4.66 sec
    CPU time for gen W [  43|[  96: 128]     12.05 sec, wall time      4.66 sec
    CPU time for gen W [  44|[ 128: 160]     11.87 sec, wall time      4.65 sec
    CPU time for gen W [  45|[ 160: 192]     11.81 sec, wall time      4.64 sec
    CPU time for gen W [  46|[ 192: 224]     11.89 sec, wall time      4.66 sec
    CPU time for gen W [  47|[ 224: 256]     11.97 sec, wall time      4.65 sec
    CPU time for gen W [  48|[ 256: 288]     11.96 sec, wall time      4.65 sec
    CPU time for gen W [  49|[ 288: 320]     11.86 sec, wall time      4.64 sec
    CPU time for gen W [  50|[ 320: 352]     11.90 sec, wall time      4.65 sec
    CPU time for gen W [  51|[ 352: 384]     11.86 sec, wall time      4.66 sec
    CPU time for gen W [  52|[ 384: 398]      7.08 sec, wall time      2.09 sec
    CPU time for gen W [  53|[   0:  32]     12.50 sec, wall time      5.16 sec
    CPU time for gen W [  54|[  32:  64]     11.74 sec, wall time      4.62 sec
    CPU time for gen W [  55|[  64:  96]     11.75 sec, wall time      4.64 sec
    CPU time for gen W [  56|[  96: 128]     11.84 sec, wall time      4.63 sec
    CPU time for gen W [  57|[ 128: 160]     11.89 sec, wall time      4.64 sec
    CPU time for gen W [  58|[ 160: 192]     11.78 sec, wall time      4.63 sec
    CPU time for gen W [  59|[ 192: 224]     11.77 sec, wall time      4.64 sec
    CPU time for gen W [  60|[ 224: 256]     13.52 sec, wall time      4.83 sec
    CPU time for gen W [  61|[   0:  32]     10.82 sec, wall time      5.21 sec
    CPU time for gen W [  62|[  32:  64]     13.87 sec, wall time      4.83 sec
    CPU time for gen W [  63|[  64:  96]      9.88 sec, wall time      4.47 sec
    CPU time for gen W [  64|[  96: 128]     12.08 sec, wall time      4.66 sec
    CPU time for gen W [  65|[ 128: 160]     11.86 sec, wall time      4.64 sec
    CPU time for gen W [  66|[ 160: 192]     11.88 sec, wall time      4.66 sec
    CPU time for gen W [  67|[ 192: 224]     11.96 sec, wall time      4.65 sec
    CPU time for gen W [  68|[ 224: 256]     12.03 sec, wall time      4.66 sec
    CPU time for gen W [  69|[   0:  32]     12.15 sec, wall time      5.14 sec
    CPU time for gen W [  70|[  32:  64]     11.87 sec, wall time      4.62 sec
    CPU time for gen W [  71|[  64:  96]     11.70 sec, wall time      4.61 sec
    CPU time for gen W [  72|[  96: 128]     11.72 sec, wall time      4.62 sec
    CPU time for gen W [  73|[ 128: 160]     11.72 sec, wall time      4.61 sec
    CPU time for gen W [  74|[ 160: 192]     11.80 sec, wall time      4.61 sec
    CPU time for gen W [  75|[ 192: 224]     13.21 sec, wall time      4.70 sec
    CPU time for gen W [  76|[ 224: 256]     10.19 sec, wall time      4.52 sec
    CPU time for gen W [  77|[   0:  32]     12.62 sec, wall time      5.24 sec
    CPU time for gen W [  78|[  32:  64]     11.87 sec, wall time      4.65 sec
    CPU time for gen W [  79|[  64:  96]     11.88 sec, wall time      4.66 sec
    CPU time for gen W [  80|[  96: 128]     12.03 sec, wall time      4.66 sec
    CPU time for gen W [  81|[ 128: 160]     11.88 sec, wall time      4.65 sec
    CPU time for gen W [  82|[ 160: 192]     11.92 sec, wall time      4.66 sec
    CPU time for gen W [  83|[ 192: 224]     11.86 sec, wall time      4.65 sec
    CPU time for gen W [  84|[ 224: 256]     12.06 sec, wall time      4.75 sec
    CPU time for gen W [  85|[   0:  32]     12.24 sec, wall time      5.18 sec
    CPU time for gen W [  86|[  32:  64]     11.71 sec, wall time      4.62 sec
    CPU time for gen W [  87|[  64:  96]     11.84 sec, wall time      4.62 sec
    CPU time for gen W [  88|[  96: 128]     11.71 sec, wall time      4.62 sec
    CPU time for gen W [  89|[ 128: 160]     13.63 sec, wall time      4.75 sec
    CPU time for gen W [  90|[ 160: 192]     10.35 sec, wall time      4.49 sec
    CPU time for gen W [  91|[ 192: 224]     11.28 sec, wall time      4.58 sec
    CPU time for gen W [  92|[ 224: 256]     11.70 sec, wall time      4.62 sec
    CPU time for gen W [  93|[   0:  32]     12.65 sec, wall time      5.23 sec
    CPU time for gen W [  94|[  32:  64]     11.87 sec, wall time      4.65 sec
    CPU time for gen W [  95|[  64:  96]     11.92 sec, wall time      4.66 sec
    CPU time for gen W [  96|[  96: 128]     12.01 sec, wall time      4.66 sec
    CPU time for gen W [  97|[ 128: 160]     11.91 sec, wall time      4.65 sec
    CPU time for gen W [  98|[ 160: 192]     11.89 sec, wall time      4.66 sec
    CPU time for gen W [  99|[ 192: 224]     11.95 sec, wall time      4.65 sec
    CPU time for gen W [ 100|[ 224: 256]     11.99 sec, wall time      4.65 sec
    CPU time for gen W [ 101|[   0:  32]     11.91 sec, wall time      4.73 sec
    CPU time for gen W [ 102|[  32:  64]     12.08 sec, wall time      4.66 sec
    CPU time for gen W [ 103|[  64:  96]     11.95 sec, wall time      4.65 sec
    CPU time for gen W [ 104|[  96: 128]     11.99 sec, wall time      4.65 sec
    CPU time for gen W [ 105|[ 128: 160]     11.85 sec, wall time      4.66 sec
    CPU time for gen W [ 106|[ 160: 192]     12.04 sec, wall time      4.65 sec
    CPU time for gen W [ 107|[ 192: 224]     11.84 sec, wall time      4.64 sec
    CPU time for gen W [ 108|[ 224: 256]     11.87 sec, wall time      4.66 sec
    CPU time for gen W [ 109|[   0:  32]     11.99 sec, wall time      4.74 sec
    CPU time for gen W [ 110|[  32:  64]     11.93 sec, wall time      4.65 sec
    CPU time for gen W [ 111|[  64:  96]     11.82 sec, wall time      4.64 sec
    CPU time for gen W [ 112|[  96: 128]     11.89 sec, wall time      4.66 sec
    CPU time for gen W [ 113|[ 128: 160]     12.04 sec, wall time      4.66 sec
    CPU time for gen W [ 114|[ 160: 192]     11.89 sec, wall time      4.65 sec
    CPU time for gen W [ 115|[ 192: 224]     11.87 sec, wall time      4.66 sec
    CPU time for gen W [ 116|[ 224: 256]     11.93 sec, wall time      4.65 sec
    CPU time for gen W [ 117|[   0:  32]     12.10 sec, wall time      4.75 sec
    CPU time for gen W [ 118|[  32:  64]     13.88 sec, wall time      4.85 sec
    CPU time for gen W [ 119|[  64:  96]      9.89 sec, wall time      4.46 sec
    CPU time for gen W [ 120|[  96: 128]     11.94 sec, wall time      4.65 sec
    CPU time for gen W [ 121|[ 128: 160]     11.95 sec, wall time      4.66 sec
    CPU time for gen W [ 122|[ 160: 192]     11.90 sec, wall time      4.67 sec
    CPU time for gen W [ 123|[ 192: 224]     11.93 sec, wall time      4.65 sec
    CPU time for gen W [ 124|[ 224: 256]     12.02 sec, wall time      4.66 sec
    CPU time for gen W [ 125|[   0:  32]     11.92 sec, wall time      4.74 sec
    CPU time for gen W [ 126|[  32:  64]     12.09 sec, wall time      4.66 sec
    CPU time for gen W [ 127|[  64:  96]     12.01 sec, wall time      4.66 sec
    CPU time for gen W [ 128|[  96: 128]     12.01 sec, wall time      4.66 sec
    CPU time for gen W [ 129|[ 128: 160]     11.84 sec, wall time      4.66 sec
    CPU time for gen W [ 130|[ 160: 192]     12.04 sec, wall time      4.66 sec
    CPU time for gen W [ 131|[ 192: 224]     11.90 sec, wall time      4.65 sec
    CPU time for gen W [ 132|[ 224: 256]     11.90 sec, wall time      4.66 sec
    CPU time for gen W [ 133|[   0:  32]     12.29 sec, wall time      5.10 sec
    CPU time for gen W [ 134|[  32:  64]     11.77 sec, wall time      4.61 sec
    CPU time for gen W [ 135|[  64:  96]     11.62 sec, wall time      4.60 sec
    CPU time for gen W [ 136|[  96: 128]     11.74 sec, wall time      4.62 sec
    CPU time for gen W [ 137|[ 128: 160]     11.81 sec, wall time      4.61 sec
    CPU time for gen W [ 138|[ 160: 192]     11.70 sec, wall time      4.61 sec
    CPU time for gen W [ 139|[ 192: 224]     11.68 sec, wall time      4.61 sec
    CPU time for gen W [ 140|[ 224: 256]     11.71 sec, wall time      4.62 sec
    CPU time for gen W [ 141|[   0:  32]     12.55 sec, wall time      5.22 sec
    CPU time for gen W [ 142|[  32:  64]     11.88 sec, wall time      4.65 sec
    CPU time for gen W [ 143|[  64:  96]     11.82 sec, wall time      4.64 sec
    CPU time for gen W [ 144|[  96: 128]     12.12 sec, wall time      4.67 sec
    CPU time for gen W [ 145|[ 128: 160]     11.84 sec, wall time      4.64 sec
    CPU time for gen W [ 146|[ 160: 192]     11.92 sec, wall time      4.65 sec
    CPU time for gen W [ 147|[ 192: 224]     11.90 sec, wall time      4.65 sec
    CPU time for gen W [ 148|[ 224: 256]     11.86 sec, wall time      4.66 sec
     build_V_W_local wall time:   684.764279 CPU time:  1750.059953
Number of interpolation points = 37344, effective CISDF =  17.95
    CPU time for ISDF build   2334.89 sec, wall time    717.55 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-10/46836087/isdf.chk
