OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46836089/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-20/46836089/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local_k.py
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

c0 =  20.00
       get_partition wall time:     7.222689 CPU time:     7.210963
len of partition[   0] =  22632
len of partition[   1] =  22632
len of partition[   2] =  22632
len of partition[   3] =  22632
len of partition[   4] =  22441
len of partition[   5] =  22521
len of partition[   6] =  22438
len of partition[   7] =  22352
len of partition[   8] =  21688
len of partition[   9] =  21626
len of partition[  10] =  21626
len of partition[  11] =  21564
len of partition[  12] =  25929
len of partition[  13] =  25736
len of partition[  14] =  25788
len of partition[  15] =  25788
len of partition[  16] =  22632
len of partition[  17] =  22632
len of partition[  18] =  22632
len of partition[  19] =  22632
len of partition[  20] =  22441
len of partition[  21] =  22521
len of partition[  22] =  22438
len of partition[  23] =  22352
len of partition[  24] =  21688
len of partition[  25] =  21626
len of partition[  26] =  21626
len of partition[  27] =  21564
len of partition[  28] =  25929
len of partition[  29] =  25736
len of partition[  30] =  25788
len of partition[  31] =  25788
len of partition[  32] =  22632
len of partition[  33] =  22632
len of partition[  34] =  22632
len of partition[  35] =  22632
len of partition[  36] =  22441
len of partition[  37] =  22521
len of partition[  38] =  22438
len of partition[  39] =  22352
len of partition[  40] =  21688
len of partition[  41] =  21626
len of partition[  42] =  21626
len of partition[  43] =  21564
len of partition[  44] =  25929
len of partition[  45] =  25736
len of partition[  46] =  25788
len of partition[  47] =  25788
len of partition[  48] =  22632
len of partition[  49] =  22632
len of partition[  50] =  22632
len of partition[  51] =  22632
len of partition[  52] =  22441
len of partition[  53] =  22521
len of partition[  54] =  22438
len of partition[  55] =  22352
len of partition[  56] =  21688
len of partition[  57] =  21626
len of partition[  58] =  21626
len of partition[  59] =  21564
len of partition[  60] =  25929
len of partition[  61] =  25736
len of partition[  62] =  25788
len of partition[  63] =  25788
len of partition[  64] =  22632
len of partition[  65] =  22632
len of partition[  66] =  22632
len of partition[  67] =  22632
len of partition[  68] =  22441
len of partition[  69] =  22521
len of partition[  70] =  22438
len of partition[  71] =  22352
len of partition[  72] =  21688
len of partition[  73] =  21626
len of partition[  74] =  21626
len of partition[  75] =  21564
len of partition[  76] =  25929
len of partition[  77] =  25736
len of partition[  78] =  25788
len of partition[  79] =  25788
len of partition[  80] =  22632
len of partition[  81] =  22632
len of partition[  82] =  22632
len of partition[  83] =  22632
len of partition[  84] =  22441
len of partition[  85] =  22521
len of partition[  86] =  22438
len of partition[  87] =  22352
len of partition[  88] =  21688
len of partition[  89] =  21626
len of partition[  90] =  21626
len of partition[  91] =  21564
len of partition[  92] =  25929
len of partition[  93] =  25736
len of partition[  94] =  25788
len of partition[  95] =  25788
len of partition[  96] =  22632
len of partition[  97] =  22632
len of partition[  98] =  22632
len of partition[  99] =  22632
len of partition[ 100] =  22441
len of partition[ 101] =  22521
len of partition[ 102] =  22438
len of partition[ 103] =  22352
len of partition[ 104] =  21688
len of partition[ 105] =  21626
len of partition[ 106] =  21626
len of partition[ 107] =  21564
len of partition[ 108] =  25929
len of partition[ 109] =  25736
len of partition[ 110] =  25788
len of partition[ 111] =  25788
len of partition[ 112] =  22632
len of partition[ 113] =  22632
len of partition[ 114] =  22632
len of partition[ 115] =  22632
len of partition[ 116] =  22441
len of partition[ 117] =  22521
len of partition[ 118] =  22438
len of partition[ 119] =  22352
len of partition[ 120] =  21688
len of partition[ 121] =  21626
len of partition[ 122] =  21626
len of partition[ 123] =  21564
len of partition[ 124] =  25929
len of partition[ 125] =  25736
len of partition[ 126] =  25788
len of partition[ 127] =  25788
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:    14.593026 CPU time:   339.768378
In _build_buffer: ISDF Local size of buffer = 976.530 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  561
select_IP_local_atm: npt_found =  568
select_IP_local_atm: npt_found =  559
select_IP_local_atm: npt_found =  580
select_IP_local_atm: npt_found =  434
select_IP_local_atm: npt_found =  425
select_IP_local_atm: npt_found =  424
select_IP_local_atm: npt_found =  432
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_atm: npt_found =  441
select_IP_local_step1 wall time:     7.477135 CPU time:   236.607844
 build_aoRg_possible wall time:     0.203306 CPU time:     2.305506
select_IP_local_step2 wall time:     0.000148 CPU time:     0.000168
select_IP_local_step3 wall time:     0.001895 CPU time:     0.001886
Memory usage for aoR  :   5521.006 MB
Memory usage for aoRg :    111.817 MB
            build_IP wall time:     7.682484 CPU time:   238.915403
build_aux_basis_local wall time:     6.879886 CPU time:   137.088825
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
    CPU time for gen W [   1|[   0:  32]     27.43 sec, wall time      5.19 sec
    CPU time for gen W [   2|[  32:  64]     20.27 sec, wall time      4.55 sec
    CPU time for gen W [   3|[  64:  96]     21.12 sec, wall time      4.77 sec
    CPU time for gen W [   4|[  96: 128]     22.55 sec, wall time      4.83 sec
    CPU time for gen W [   5|[ 128: 160]     21.98 sec, wall time      4.79 sec
    CPU time for gen W [   6|[ 160: 192]     22.36 sec, wall time      4.80 sec
    CPU time for gen W [   7|[ 192: 224]     22.38 sec, wall time      4.81 sec
    CPU time for gen W [   8|[ 224: 256]     22.20 sec, wall time      4.80 sec
    CPU time for gen W [   9|[ 256: 288]     22.24 sec, wall time      4.81 sec
    CPU time for gen W [  10|[ 288: 320]     22.42 sec, wall time      4.85 sec
    CPU time for gen W [  11|[ 320: 352]     22.64 sec, wall time      4.81 sec
    CPU time for gen W [  12|[ 352: 384]     22.45 sec, wall time      4.81 sec
    CPU time for gen W [  13|[ 384: 416]     22.14 sec, wall time      4.82 sec
    CPU time for gen W [  14|[ 416: 448]     22.55 sec, wall time      4.81 sec
    CPU time for gen W [  15|[ 448: 480]     22.69 sec, wall time      4.82 sec
    CPU time for gen W [  16|[ 480: 512]     22.24 sec, wall time      4.81 sec
    CPU time for gen W [  17|[ 512: 544]     22.23 sec, wall time      4.81 sec
    CPU time for gen W [  18|[ 544: 561]     16.29 sec, wall time      2.66 sec
    CPU time for gen W [  19|[   0:  32]     23.54 sec, wall time      5.77 sec
    CPU time for gen W [  20|[  32:  64]     25.34 sec, wall time      4.91 sec
    CPU time for gen W [  21|[  64:  96]     19.40 sec, wall time      4.70 sec
    CPU time for gen W [  22|[  96: 128]     22.57 sec, wall time      4.83 sec
    CPU time for gen W [  23|[ 128: 160]     22.44 sec, wall time      4.80 sec
    CPU time for gen W [  24|[ 160: 192]     22.28 sec, wall time      4.81 sec
    CPU time for gen W [  25|[ 192: 224]     22.32 sec, wall time      4.83 sec
    CPU time for gen W [  26|[ 224: 256]     22.56 sec, wall time      4.81 sec
    CPU time for gen W [  27|[ 256: 288]     22.48 sec, wall time      4.82 sec
    CPU time for gen W [  28|[ 288: 320]     22.08 sec, wall time      4.80 sec
    CPU time for gen W [  29|[ 320: 352]     22.23 sec, wall time      4.82 sec
    CPU time for gen W [  30|[ 352: 384]     22.74 sec, wall time      4.82 sec
    CPU time for gen W [  31|[ 384: 416]     22.54 sec, wall time      4.81 sec
    CPU time for gen W [  32|[ 416: 448]     22.27 sec, wall time      4.80 sec
    CPU time for gen W [  33|[ 448: 480]     22.10 sec, wall time      4.84 sec
    CPU time for gen W [  34|[ 480: 512]     22.53 sec, wall time      4.80 sec
    CPU time for gen W [  35|[ 512: 544]     22.50 sec, wall time      4.81 sec
    CPU time for gen W [  36|[ 544: 568]     19.31 sec, wall time      3.66 sec
    CPU time for gen W [  37|[   0:  32]     22.17 sec, wall time      4.79 sec
    CPU time for gen W [  38|[  32:  64]     22.27 sec, wall time      4.82 sec
    CPU time for gen W [  39|[  64:  96]     22.87 sec, wall time      4.94 sec
    CPU time for gen W [  40|[  96: 128]     22.25 sec, wall time      4.71 sec
    CPU time for gen W [  41|[ 128: 160]     22.05 sec, wall time      4.70 sec
    CPU time for gen W [  42|[ 160: 192]     22.32 sec, wall time      4.74 sec
    CPU time for gen W [  43|[ 192: 224]     22.57 sec, wall time      4.72 sec
    CPU time for gen W [  44|[ 224: 256]     22.13 sec, wall time      4.71 sec
    CPU time for gen W [  45|[ 256: 288]     22.13 sec, wall time      4.72 sec
    CPU time for gen W [  46|[ 288: 320]     22.11 sec, wall time      4.72 sec
    CPU time for gen W [  47|[ 320: 352]     23.58 sec, wall time      4.75 sec
    CPU time for gen W [  48|[ 352: 384]     22.50 sec, wall time      4.72 sec
    CPU time for gen W [  49|[ 384: 416]     22.07 sec, wall time      4.71 sec
    CPU time for gen W [  50|[ 416: 448]     22.07 sec, wall time      4.70 sec
    CPU time for gen W [  51|[ 448: 480]     22.19 sec, wall time      4.73 sec
    CPU time for gen W [  52|[ 480: 512]     25.87 sec, wall time      4.90 sec
    CPU time for gen W [  53|[ 512: 544]     22.40 sec, wall time      4.68 sec
    CPU time for gen W [  54|[ 544: 559]     11.57 sec, wall time      2.14 sec
    CPU time for gen W [  55|[   0:  32]     22.39 sec, wall time      4.79 sec
    CPU time for gen W [  56|[  32:  64]     22.24 sec, wall time      4.80 sec
    CPU time for gen W [  57|[  64:  96]     22.47 sec, wall time      4.81 sec
    CPU time for gen W [  58|[  96: 128]     22.46 sec, wall time      4.80 sec
    CPU time for gen W [  59|[ 128: 160]     22.31 sec, wall time      4.80 sec
    CPU time for gen W [  60|[ 160: 192]     22.42 sec, wall time      4.83 sec
    CPU time for gen W [  61|[ 192: 224]     22.44 sec, wall time      4.80 sec
    CPU time for gen W [  62|[ 224: 256]     22.39 sec, wall time      4.81 sec
    CPU time for gen W [  63|[ 256: 288]     22.25 sec, wall time      4.79 sec
    CPU time for gen W [  64|[ 288: 320]     22.74 sec, wall time      4.83 sec
    CPU time for gen W [  65|[ 320: 352]     22.50 sec, wall time      4.80 sec
    CPU time for gen W [  66|[ 352: 384]     22.47 sec, wall time      4.81 sec
    CPU time for gen W [  67|[ 384: 416]     25.83 sec, wall time      4.91 sec
    CPU time for gen W [  68|[ 416: 448]     22.17 sec, wall time      4.80 sec
    CPU time for gen W [  69|[ 448: 480]     22.20 sec, wall time      4.81 sec
    CPU time for gen W [  70|[ 480: 512]     22.38 sec, wall time      4.80 sec
    CPU time for gen W [  71|[ 512: 544]     22.54 sec, wall time      4.80 sec
    CPU time for gen W [  72|[ 544: 576]     22.16 sec, wall time      4.80 sec
    CPU time for gen W [  73|[ 576: 580]      9.78 sec, wall time      0.75 sec
    CPU time for gen W [  74|[   0:  32]     23.78 sec, wall time      4.83 sec
    CPU time for gen W [  75|[  32:  64]     22.43 sec, wall time      4.82 sec
    CPU time for gen W [  76|[  64:  96]     22.55 sec, wall time      4.80 sec
    CPU time for gen W [  77|[  96: 128]     22.10 sec, wall time      4.80 sec
    CPU time for gen W [  78|[ 128: 160]     22.23 sec, wall time      4.79 sec
    CPU time for gen W [  79|[ 160: 192]     22.52 sec, wall time      4.83 sec
    CPU time for gen W [  80|[ 192: 224]     22.35 sec, wall time      4.79 sec
    CPU time for gen W [  81|[ 224: 256]     22.34 sec, wall time      4.82 sec
    CPU time for gen W [  82|[ 256: 288]     22.31 sec, wall time      4.81 sec
    CPU time for gen W [  83|[ 288: 320]     22.10 sec, wall time      4.82 sec
    CPU time for gen W [  84|[ 320: 352]     22.57 sec, wall time      4.80 sec
    CPU time for gen W [  85|[ 352: 384]     22.39 sec, wall time      4.80 sec
    CPU time for gen W [  86|[ 384: 416]     22.18 sec, wall time      4.79 sec
    CPU time for gen W [  87|[ 416: 434]     16.75 sec, wall time      2.79 sec
    CPU time for gen W [  88|[   0:  32]     22.56 sec, wall time      4.82 sec
    CPU time for gen W [  89|[  32:  64]     22.76 sec, wall time      4.81 sec
    CPU time for gen W [  90|[  64:  96]     22.23 sec, wall time      4.80 sec
    CPU time for gen W [  91|[  96: 128]     22.23 sec, wall time      4.82 sec
    CPU time for gen W [  92|[ 128: 160]     22.63 sec, wall time      4.81 sec
    CPU time for gen W [  93|[ 160: 192]     22.17 sec, wall time      4.80 sec
    CPU time for gen W [  94|[ 192: 224]     22.23 sec, wall time      4.80 sec
    CPU time for gen W [  95|[ 224: 256]     22.10 sec, wall time      4.81 sec
    CPU time for gen W [  96|[ 256: 288]     22.53 sec, wall time      4.81 sec
    CPU time for gen W [  97|[ 288: 320]     22.46 sec, wall time      4.81 sec
    CPU time for gen W [  98|[ 320: 352]     22.16 sec, wall time      4.79 sec
    CPU time for gen W [  99|[ 352: 384]     22.14 sec, wall time      4.81 sec
    CPU time for gen W [ 100|[ 384: 416]     22.56 sec, wall time      4.80 sec
    CPU time for gen W [ 101|[ 416: 425]     13.36 sec, wall time      1.52 sec
    CPU time for gen W [ 102|[   0:  32]     22.84 sec, wall time      4.81 sec
    CPU time for gen W [ 103|[  32:  64]     22.04 sec, wall time      4.80 sec
    CPU time for gen W [ 104|[  64:  96]     22.36 sec, wall time      4.81 sec
    CPU time for gen W [ 105|[  96: 128]     22.60 sec, wall time      4.81 sec
    CPU time for gen W [ 106|[ 128: 160]     22.27 sec, wall time      4.80 sec
    CPU time for gen W [ 107|[ 160: 192]     22.12 sec, wall time      4.83 sec
    CPU time for gen W [ 108|[ 192: 224]     22.62 sec, wall time      4.81 sec
    CPU time for gen W [ 109|[ 224: 256]     22.80 sec, wall time      5.11 sec
    CPU time for gen W [ 110|[ 256: 288]     22.35 sec, wall time      4.79 sec
    CPU time for gen W [ 111|[ 288: 320]     22.07 sec, wall time      4.79 sec
    CPU time for gen W [ 112|[ 320: 352]     22.19 sec, wall time      4.81 sec
    CPU time for gen W [ 113|[ 352: 384]     22.52 sec, wall time      4.81 sec
    CPU time for gen W [ 114|[ 384: 416]     22.98 sec, wall time      4.81 sec
    CPU time for gen W [ 115|[ 416: 424]     12.32 sec, wall time      1.35 sec
    CPU time for gen W [ 116|[   0:  32]     22.50 sec, wall time      4.79 sec
    CPU time for gen W [ 117|[  32:  64]     22.09 sec, wall time      4.81 sec
    CPU time for gen W [ 118|[  64:  96]     22.60 sec, wall time      4.80 sec
    CPU time for gen W [ 119|[  96: 128]     22.32 sec, wall time      4.80 sec
    CPU time for gen W [ 120|[ 128: 160]     22.13 sec, wall time      4.79 sec
    CPU time for gen W [ 121|[ 160: 192]     22.72 sec, wall time      4.83 sec
    CPU time for gen W [ 122|[ 192: 224]     23.07 sec, wall time      4.82 sec
    CPU time for gen W [ 123|[ 224: 256]     22.16 sec, wall time      4.79 sec
    CPU time for gen W [ 124|[ 256: 288]     22.09 sec, wall time      4.79 sec
    CPU time for gen W [ 125|[ 288: 320]     47.78 sec, wall time      5.64 sec
    CPU time for gen W [ 126|[ 320: 352]     23.06 sec, wall time      4.82 sec
    CPU time for gen W [ 127|[ 352: 384]     22.29 sec, wall time      4.80 sec
    CPU time for gen W [ 128|[ 384: 416]     21.95 sec, wall time      4.78 sec
    CPU time for gen W [ 129|[ 416: 432]     15.22 sec, wall time      2.49 sec
    CPU time for gen W [ 130|[   0:  32]     22.72 sec, wall time      4.81 sec
    CPU time for gen W [ 131|[  32:  64]     22.44 sec, wall time      4.80 sec
    CPU time for gen W [ 132|[  64:  96]     22.13 sec, wall time      4.79 sec
    CPU time for gen W [ 133|[  96: 128]     22.03 sec, wall time      4.80 sec
    CPU time for gen W [ 134|[ 128: 160]     22.37 sec, wall time      4.82 sec
    CPU time for gen W [ 135|[ 160: 192]     22.41 sec, wall time      4.80 sec
    CPU time for gen W [ 136|[ 192: 224]     22.15 sec, wall time      4.79 sec
    CPU time for gen W [ 137|[ 224: 256]     22.41 sec, wall time      4.82 sec
    CPU time for gen W [ 138|[ 256: 288]     22.45 sec, wall time      4.80 sec
    CPU time for gen W [ 139|[ 288: 320]     22.40 sec, wall time      4.80 sec
    CPU time for gen W [ 140|[ 320: 352]     22.00 sec, wall time      4.78 sec
    CPU time for gen W [ 141|[ 352: 384]     22.15 sec, wall time      4.81 sec
    CPU time for gen W [ 142|[ 384: 416]     22.53 sec, wall time      4.80 sec
    CPU time for gen W [ 143|[ 416: 441]     20.07 sec, wall time      3.81 sec
    CPU time for gen W [ 144|[   0:  32]     22.35 sec, wall time      4.79 sec
    CPU time for gen W [ 145|[  32:  64]     32.84 sec, wall time      5.15 sec
    CPU time for gen W [ 146|[  64:  96]     22.41 sec, wall time      4.82 sec
    CPU time for gen W [ 147|[  96: 128]     22.50 sec, wall time      4.80 sec
    CPU time for gen W [ 148|[ 128: 160]     22.04 sec, wall time      4.79 sec
    CPU time for gen W [ 149|[ 160: 192]     22.06 sec, wall time      4.79 sec
    CPU time for gen W [ 150|[ 192: 224]     22.09 sec, wall time      4.81 sec
    CPU time for gen W [ 151|[ 224: 256]     22.37 sec, wall time      4.80 sec
    CPU time for gen W [ 152|[ 256: 288]     22.42 sec, wall time      4.80 sec
    CPU time for gen W [ 153|[ 288: 320]     22.10 sec, wall time      4.79 sec
    CPU time for gen W [ 154|[ 320: 352]     22.00 sec, wall time      4.79 sec
    CPU time for gen W [ 155|[ 352: 384]     22.16 sec, wall time      4.81 sec
    CPU time for gen W [ 156|[ 384: 416]     22.49 sec, wall time      4.80 sec
    CPU time for gen W [ 157|[ 416: 441]     19.93 sec, wall time      3.81 sec
    CPU time for gen W [ 158|[   0:  32]     22.10 sec, wall time      4.69 sec
    CPU time for gen W [ 159|[  32:  64]     21.98 sec, wall time      4.71 sec
    CPU time for gen W [ 160|[  64:  96]     22.54 sec, wall time      4.70 sec
    CPU time for gen W [ 161|[  96: 128]     22.19 sec, wall time      4.70 sec
    CPU time for gen W [ 162|[ 128: 160]     21.92 sec, wall time      4.69 sec
    CPU time for gen W [ 163|[ 160: 192]     22.09 sec, wall time      4.71 sec
    CPU time for gen W [ 164|[ 192: 224]     23.35 sec, wall time      4.74 sec
    CPU time for gen W [ 165|[ 224: 256]     22.21 sec, wall time      4.74 sec
    CPU time for gen W [ 166|[ 256: 288]     42.57 sec, wall time      5.39 sec
    CPU time for gen W [ 167|[ 288: 320]     22.32 sec, wall time      4.72 sec
    CPU time for gen W [ 168|[ 320: 352]    143.97 sec, wall time      8.69 sec
    CPU time for gen W [ 169|[ 352: 384]     22.31 sec, wall time      4.77 sec
    CPU time for gen W [ 170|[ 384: 416]     22.75 sec, wall time      4.78 sec
    CPU time for gen W [ 171|[ 416: 441]     19.83 sec, wall time      3.78 sec
    CPU time for gen W [ 172|[   0:  32]     22.43 sec, wall time      4.79 sec
    CPU time for gen W [ 173|[  32:  64]     22.13 sec, wall time      4.79 sec
    CPU time for gen W [ 174|[  64:  96]     22.27 sec, wall time      4.80 sec
    CPU time for gen W [ 175|[  96: 128]     22.64 sec, wall time      4.80 sec
    CPU time for gen W [ 176|[ 128: 160]     22.22 sec, wall time      4.79 sec
    CPU time for gen W [ 177|[ 160: 192]     22.20 sec, wall time      4.79 sec
    CPU time for gen W [ 178|[ 192: 224]     22.14 sec, wall time      4.78 sec
    CPU time for gen W [ 179|[ 224: 256]     22.65 sec, wall time      4.81 sec
    CPU time for gen W [ 180|[ 256: 288]     22.33 sec, wall time      4.80 sec
    CPU time for gen W [ 181|[ 288: 320]     22.09 sec, wall time      4.79 sec
    CPU time for gen W [ 182|[ 320: 352]     22.10 sec, wall time      4.78 sec
    CPU time for gen W [ 183|[ 352: 384]     22.53 sec, wall time      4.80 sec
    CPU time for gen W [ 184|[ 384: 416]     22.54 sec, wall time      4.80 sec
    CPU time for gen W [ 185|[ 416: 441]     20.01 sec, wall time      3.80 sec
    CPU time for gen W [ 186|[   0:  32]     22.11 sec, wall time      4.70 sec
    CPU time for gen W [ 187|[  32:  64]     22.66 sec, wall time      4.72 sec
    CPU time for gen W [ 188|[  64:  96]     46.59 sec, wall time      5.50 sec
    CPU time for gen W [ 189|[  96: 128]     22.39 sec, wall time      4.71 sec
    CPU time for gen W [ 190|[ 128: 160]     22.35 sec, wall time      4.71 sec
    CPU time for gen W [ 191|[ 160: 192]     22.08 sec, wall time      4.70 sec
    CPU time for gen W [ 192|[ 192: 224]     22.16 sec, wall time      4.70 sec
    CPU time for gen W [ 193|[ 224: 256]     22.44 sec, wall time      4.71 sec
    CPU time for gen W [ 194|[ 256: 288]     22.23 sec, wall time      4.71 sec
    CPU time for gen W [ 195|[ 288: 320]     23.97 sec, wall time      4.80 sec
    CPU time for gen W [ 196|[ 320: 352]     21.97 sec, wall time      4.69 sec
    CPU time for gen W [ 197|[ 352: 384]     22.43 sec, wall time      4.71 sec
    CPU time for gen W [ 198|[ 384: 416]     22.35 sec, wall time      4.71 sec
    CPU time for gen W [ 199|[ 416: 441]     20.49 sec, wall time      3.75 sec
    CPU time for gen W [ 200|[   0:  32]     22.04 sec, wall time      4.69 sec
    CPU time for gen W [ 201|[  32:  64]     22.71 sec, wall time      4.72 sec
    CPU time for gen W [ 202|[  64:  96]     22.22 sec, wall time      4.71 sec
    CPU time for gen W [ 203|[  96: 128]     22.03 sec, wall time      4.70 sec
    CPU time for gen W [ 204|[ 128: 160]     22.54 sec, wall time      4.72 sec
    CPU time for gen W [ 205|[ 160: 192]     22.11 sec, wall time      4.71 sec
    CPU time for gen W [ 206|[ 192: 224]     22.01 sec, wall time      4.70 sec
    CPU time for gen W [ 207|[ 224: 256]     22.12 sec, wall time      4.71 sec
    CPU time for gen W [ 208|[ 256: 288]     23.62 sec, wall time      4.75 sec
    CPU time for gen W [ 209|[ 288: 320]     22.24 sec, wall time      4.71 sec
    CPU time for gen W [ 210|[ 320: 352]     22.02 sec, wall time      4.70 sec
    CPU time for gen W [ 211|[ 352: 384]     22.08 sec, wall time      4.71 sec
    CPU time for gen W [ 212|[ 384: 416]     22.19 sec, wall time      4.71 sec
    CPU time for gen W [ 213|[ 416: 441]     20.25 sec, wall time      3.75 sec
    CPU time for gen W [ 214|[   0:  32]     22.32 sec, wall time      4.70 sec
    CPU time for gen W [ 215|[  32:  64]     21.99 sec, wall time      4.70 sec
    CPU time for gen W [ 216|[  64:  96]     22.19 sec, wall time      4.70 sec
    CPU time for gen W [ 217|[  96: 128]     22.57 sec, wall time      4.71 sec
    CPU time for gen W [ 218|[ 128: 160]     22.16 sec, wall time      4.70 sec
    CPU time for gen W [ 219|[ 160: 192]     22.04 sec, wall time      4.70 sec
    CPU time for gen W [ 220|[ 192: 224]     22.04 sec, wall time      4.70 sec
    CPU time for gen W [ 221|[ 224: 256]     22.44 sec, wall time      4.71 sec
    CPU time for gen W [ 222|[ 256: 288]     22.43 sec, wall time      4.71 sec
    CPU time for gen W [ 223|[ 288: 320]     21.98 sec, wall time      4.70 sec
    CPU time for gen W [ 224|[ 320: 352]     22.03 sec, wall time      4.70 sec
    CPU time for gen W [ 225|[ 352: 384]     22.02 sec, wall time      4.70 sec
    CPU time for gen W [ 226|[ 384: 416]     22.34 sec, wall time      4.71 sec
    CPU time for gen W [ 227|[ 416: 441]     20.15 sec, wall time      3.74 sec
    CPU time for gen W [ 228|[   0:  32]     22.36 sec, wall time      4.71 sec
    CPU time for gen W [ 229|[  32:  64]     22.06 sec, wall time      4.70 sec
    CPU time for gen W [ 230|[  64:  96]     22.01 sec, wall time      4.70 sec
    CPU time for gen W [ 231|[  96: 128]     22.33 sec, wall time      4.70 sec
    CPU time for gen W [ 232|[ 128: 160]     22.35 sec, wall time      4.71 sec
    CPU time for gen W [ 233|[ 160: 192]     22.10 sec, wall time      4.70 sec
    CPU time for gen W [ 234|[ 192: 224]     22.08 sec, wall time      4.70 sec
    CPU time for gen W [ 235|[ 224: 256]     21.99 sec, wall time      4.70 sec
    CPU time for gen W [ 236|[ 256: 288]     22.39 sec, wall time      4.71 sec
    CPU time for gen W [ 237|[ 288: 320]     22.41 sec, wall time      4.71 sec
    CPU time for gen W [ 238|[ 320: 352]     22.02 sec, wall time      4.70 sec
    CPU time for gen W [ 239|[ 352: 384]     22.33 sec, wall time      4.71 sec
    CPU time for gen W [ 240|[ 384: 416]     22.54 sec, wall time      4.71 sec
    CPU time for gen W [ 241|[ 416: 441]     19.94 sec, wall time      3.74 sec
     build_V_W_local wall time:  1129.686794 CPU time:  5516.259099
Number of interpolation points = 60088, effective CISDF =  28.89
    CPU time for ISDF build   6246.65 sec, wall time   1167.41 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute spin because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-20/46836089/isdf.chk
