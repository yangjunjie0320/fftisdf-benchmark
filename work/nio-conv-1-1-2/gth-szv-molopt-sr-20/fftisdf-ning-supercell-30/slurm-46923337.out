OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 245760
TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-supercell-30/46923337/
PYSCF_TMPDIR = /central/scratch/yangjunjie//fftisdf-ning-supercell-30/46923337/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

LOADING ISDF BACKEND
NUM_THREADS   : 32
USE_NUMPY     : 0
USE_SCIPY     : 1
USE_TORCH     : 0
USE_TORCH_GPU : 0
#INFO: **** input file is /central/home/junjiey/work/fftisdf-benchmark/work/nio-conv-1-1-2/gth-szv-molopt-sr-20/fftisdf-ning-supercell-30/main.py ****
import os, sys
import numpy, scipy
import pyscf

TMPDIR = os.getenv("TMPDIR", None)
DATA_PATH = os.getenv("DATA_PATH", None)
PYSCF_MAX_MEMORY = os.getenv("PYSCF_MAX_MEMORY", 4000)
PYSCF_MAX_MEMORY = int(PYSCF_MAX_MEMORY)

try:
    from pyscf.lib import generate_pickle_methods
    getstate, setstate = generate_pickle_methods(
        excludes=(
            '_isdf_to_save', 
            '_isdf', 
            'buffer_fft',
            'buffer_cpu', 
            'buffer_gpu', 
            'buffer',
            'cell', 
            'prim_cell',
            '_swapfile',
        )
    )   
except ImportError:
    import sys 
    sys.stderr.write("pyscf.lib.generate_pickle_methods is not available, ISDF will not support pickle\n")
    def raise_error(*args, **kwargs):
        raise NotImplementedError("ISDF does not support pickle")
    getstate = setstate = raise_error

from pyscf.isdf import isdf_local
class ISDF_Local(isdf_local.ISDF_Local):
    __getstate__ = getstate
    __setstate__ = setstate

class ISDF(object):
    cell = None
    group = None

    kpts = None
    kmesh = None
    c0 = None
    verbose = 10

    _isdf = None
    _isdf_to_save = None
    
    def __init__(self, cell=None, kpts=None):
        assert kpts is None
        self.cell = cell
        self.kpts = kpts

    def build(self):
        cell = self.cell.copy(deep=True)

        group = self.group
        assert group is not None

        direct = False
        c0 = self.c0
        rela_qr = 1e-4
        aoR_cutoff = 1e-12
        build_V_K_bunchsize = 256
        with_robust_fitting = False

        from pyscf.lib import logger
        from pyscf.lib.logger import perf_counter
        from pyscf.lib.logger import process_clock
        t0 = (process_clock(), perf_counter())
        log = logger.new_logger(cell, 10)
        log.info("ISDF module: %s" % isdf_local.__file__)

        isdf_obj = ISDF_Local(
            cell, limited_memory=True, direct=direct,
            with_robust_fitting=with_robust_fitting,
            build_V_K_bunchsize=build_V_K_bunchsize,
        )

        isdf_obj.verbose = 10
        log.info("c0 = %6.2f" % c0)

        isdf_obj.build(c=c0, rela_cutoff=rela_qr, group=group)

        nip = isdf_obj.naux
        log.info(
            "Number of interpolation points = %d, effective CISDF = %6.2f",
            nip, nip / isdf_obj.nao
        )
        log.timer("ISDF build", *t0)

        import pickle
        with open(self._isdf, "wb") as f:
            pickle.dump(isdf_obj, f)
            log.debug("finished saving to %s", self._isdf)

        isdf_obj._isdf = self._isdf
        isdf_obj._isdf_to_save = self._isdf
        return isdf_obj

def main(args):
    from utils import cell_from_poscar
    path = os.path.join(DATA_PATH, args.cell)
    assert os.path.exists(path), "Cell file not found: %s" % path

    c = cell_from_poscar(path)
    c.basis = args.basis
    c.pseudo = args.pseudo
    c.verbose = 0
    c.unit = 'aa'
    # c.exp_to_discard = 0.1
    # c.exp_to_discard = 0.0
    c.max_memory = PYSCF_MAX_MEMORY
    c.ke_cutoff = args.ke_cutoff
    c.build(dump_input=False)

    kmesh = [int(x) for x in args.kmesh.split("-")]
    kmesh = numpy.array(kmesh)
    kpts = c.get_kpts(kmesh)

    pcell = c.copy(deep=True)

    natm = len(pcell.atom)
    atm = []
    for ia in range(natm):
        s = pcell.atom_symbol(ia)
        x = pcell.atom_coord(ia, unit='A')
        atm.append([s, x])

    from pyscf.lib.parameters import BOHR
    lvx = pcell.lattice_vectors() * BOHR

    from pyscf.isdf.isdf_tools_cell import build_supercell_with_partition
    scell, group = build_supercell_with_partition(
        atm, lvx, spin=0, charge=0, mesh=None, Ls=kmesh,
        partition=None, basis=args.basis,
        pseudo=args.pseudo, ke_cutoff=args.ke_cutoff,
        max_memory=PYSCF_MAX_MEMORY, 
        precision=1e-12, 
        use_particle_mesh_ewald=True,
        verbose=4,
    )

    from utils import get_jk_time
    df_obj = ISDF(scell)
    df_obj.group = group
    df_obj.c0 = args.c0
    df_obj.verbose = 10
    df_obj.kmesh = kmesh
    df_obj._isdf = os.path.join(TMPDIR, "isdf.chk")

    from utils import get_jk_time
    kmesh = None
    get_jk_time(scell, kmesh=kmesh, df_obj=df_obj, tmp=df_obj._isdf)

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("--cell", type=str, default="diamond-prim.vasp")
    parser.add_argument("--kmesh", type=str, default="2-2-2")
    parser.add_argument("--c0", type=float, default=20.0)
    parser.add_argument("--ke_cutoff", type=float, default=40)
    parser.add_argument("--basis", type=str, default="gth-dzvp-molopt-sr")
    parser.add_argument("--pseudo", type=str, default="gth-pade")

    args = parser.parse_args()
    main(args)
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-35-35.cm.cluster', release='5.14.0-362.24.1.el9_3.x86_64', version='#1 SMP PREEMPT_DYNAMIC Thu Feb 15 07:18:13 EST 2024', machine='x86_64')  Threads 32
Python 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:38:13) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.1  h5py 3.12.1
Date: Wed Jan 22 22:03:31 2025
PySCF version 2.7.0
PySCF path  /home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf

[ENV] PYSCF_TMPDIR /central/scratch/yangjunjie//fftisdf-ning-supercell-30/46923337/
[ENV] PYSCF_MAX_MEMORY 245760
[ENV] PYSCF_EXT_PATH /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 16
[INPUT] num. electrons = 192
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstorm
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ni     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Ni    -0.000000000000   2.093168793709   2.093168793709 AA   -0.000000000000   3.955515752597   3.955515752597 Bohr   0.0
[INPUT]  3 Ni     2.093168793709   0.000000000000   2.093168793709 AA    3.955515752597   0.000000000000   3.955515752597 Bohr   0.0
[INPUT]  4 Ni     2.093168793709   2.093168793709   0.000000000000 AA    3.955515752597   3.955515752597   0.000000000000 Bohr   0.0
[INPUT]  5 O      2.093168793709   0.000000000000   0.000000000000 AA    3.955515752597   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  6 O      2.093168793709   2.093168793709   2.093168793709 AA    3.955515752597   3.955515752597   3.955515752597 Bohr   0.0
[INPUT]  7 O      0.000000000000   0.000000000000   2.093168793709 AA    0.000000000000   0.000000000000   3.955515752597 Bohr   0.0
[INPUT]  8 O     -0.000000000000   2.093168793709   0.000000000000 AA   -0.000000000000   3.955515752597   0.000000000000 Bohr   0.0
[INPUT]  9 Ni     0.000000000000   0.000000000000   4.186337587419 AA    0.000000000000   0.000000000000   7.911031505194 Bohr   0.0
[INPUT] 10 Ni    -0.000000000000   2.093168793709   6.279506381128 AA   -0.000000000000   3.955515752597  11.866547257791 Bohr   0.0
[INPUT] 11 Ni     2.093168793709   0.000000000000   6.279506381128 AA    3.955515752597   0.000000000000  11.866547257791 Bohr   0.0
[INPUT] 12 Ni     2.093168793709   2.093168793709   4.186337587419 AA    3.955515752597   3.955515752597   7.911031505194 Bohr   0.0
[INPUT] 13 O      2.093168793709   0.000000000000   4.186337587419 AA    3.955515752597   0.000000000000   7.911031505194 Bohr   0.0
[INPUT] 14 O      2.093168793709   2.093168793709   6.279506381128 AA    3.955515752597   3.955515752597  11.866547257791 Bohr   0.0
[INPUT] 15 O      0.000000000000   0.000000000000   6.279506381128 AA    0.000000000000   0.000000000000  11.866547257791 Bohr   0.0
[INPUT] 16 O     -0.000000000000   2.093168793709   4.186337587419 AA   -0.000000000000   3.955515752597   7.911031505194 Bohr   0.0

nuclear repulsion = -953.57104828973
number of shells = 40
number of NR pGTOs = 592
number of NR cGTOs = 112
basis = gth-szv-molopt-sr
ecp = {}
CPU time:         4.47
lattice vectors  a1 [7.911031505, 0.000000000, 0.000000000]
                 a2 [-0.000000000, 7.911031505, 0.000000000]
                 a3 [0.000000000, 0.000000000, 15.822063010]
dimension = 3
low_dim_ft_type = None
Cell volume = 990.215
rcut = 27.07473488328033 (nimgs = [4 4 2])
lattice sum = 431 cells
precision = 1e-12
pseudo = gth-pade
ke_cutoff = 20.0
    = [17 17 33] mesh (9537 PWs)
Initial guess from minao.
ISDF module: /home/junjiey/packages/pyscf-forge/pyscf-forge-yangjunjie-non-orth/pyscf/isdf/isdf_local.py
ISDF: mol.ke_cutoff = 20.000000
ISDF: mol.natm      = 16
ISDF: mol.nao       = 112
c0 =  30.00
       get_partition wall time:     0.087501 CPU time:     2.774011
len of partition[   0] =    729
len of partition[   1] =    576
len of partition[   2] =    576
len of partition[   3] =    576
len of partition[   4] =    648
len of partition[   5] =    512
len of partition[   6] =    648
len of partition[   7] =    648
len of partition[   8] =    648
len of partition[   9] =    576
len of partition[  10] =    576
len of partition[  11] =    512
len of partition[  12] =    576
len of partition[  13] =    512
len of partition[  14] =    648
len of partition[  15] =    576
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.

             get_aoR wall time:     0.273749 CPU time:     8.329516
In _build_buffer: ISDF Local size of buffer = 18.627 MB
 ---------- In pyscf.isdf.isdf_local.select_IP_local_atm ----------
select_IP_local_atm: atm_begin =    0, atm_end =   16
select_IP_local_atm: npt_found =  213
select_IP_local_atm: npt_found =  181
select_IP_local_atm: npt_found =  179
select_IP_local_atm: npt_found =  195
select_IP_local_atm: npt_found =  208
select_IP_local_atm: npt_found =  183
select_IP_local_atm: npt_found =  195
select_IP_local_atm: npt_found =  202
select_IP_local_atm: npt_found =  188
select_IP_local_atm: npt_found =  173
select_IP_local_atm: npt_found =  179
select_IP_local_atm: npt_found =  173
select_IP_local_atm: npt_found =  195
select_IP_local_atm: npt_found =  181
select_IP_local_atm: npt_found =  204
select_IP_local_atm: npt_found =  197
select_IP_local_step1 wall time:     0.988399 CPU time:    30.587815
 build_aoRg_possible wall time:     0.003775 CPU time:     0.096402
select_IP_local_step2 wall time:     0.000089 CPU time:     0.000097
select_IP_local_step3 wall time:     0.001393 CPU time:     0.063051
Memory usage for aoR  :      8.163 MB
Memory usage for aoRg :      2.616 MB
            build_IP wall time:     0.993655 CPU time:    30.747365
build_aux_basis_local wall time:     0.056466 CPU time:     1.781351
 ---------- In pyscf.isdf.isdf_local.build_V_W_local ----------
Memory usage for V:      0.000 MB
Memory usage for W:     70.786 MB
     build_V_W_local wall time:     1.737801 CPU time:    54.639236
Number of interpolation points = 3046, effective CISDF =  27.20
    CPU time for ISDF build     99.78 sec, wall time      3.20 sec
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute a because it is not JSON-serializable
  warnings.warn(msg)
/home/junjiey/anaconda3/envs/fftisdf/lib/python3.12/site-packages/pyscf/gto/mole.py:1294: UserWarning: Function mol.dumps drops attribute _mesh because it is not JSON-serializable
  warnings.warn(msg)
finished saving to /central/scratch/yangjunjie//fftisdf-ning-supercell-30/46923337/isdf.chk
      isdf_local_eri wall time:     6.853755 CPU time:   202.725877
