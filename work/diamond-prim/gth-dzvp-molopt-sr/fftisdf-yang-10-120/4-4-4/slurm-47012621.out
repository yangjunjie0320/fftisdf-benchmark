OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-dzvp-molopt-sr/fftisdf-yang-10-120/4-4-4//47012621/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-dzvp-molopt-sr/fftisdf-yang-10-120/4-4-4//47012621/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [25 25 25] (15625 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  c0 tol kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (120 / [25 25 25]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 0.68 Eh.
Recommended ke_cutoff/mesh are 679.828 / [57 57 57].

kmesh = [4 4 4]
Input parent grid mesh = [7, 7, 7], ke_cutoff =  28.02
Final parent grid size = [9 7 9]

Selecting interpolation points
nkpts = 64, nao = 26, c0 =  10.00
Parent grid mesh = [9 7 9], grid size = 567

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    258.09 sec, wall time      4.05 sec
Pivoted Cholesky rank = 567, nip = 260, estimated error = 7.49e-02
Number of interpolation points = 260, effective CISDF =  10.00
    CPU time for building left-hand side     13.05 sec, wall time      0.26 sec

kpt = 64, ngrid = 15625, nao = 26
ngrid = 15625, blksize = 184431, nip = 260
required disk space = 4 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-dzvp-molopt-sr/fftisdf-yang-10-120/4-4-4/47012621/c7pszpxc
blksize = 184431, memory for aoR_loop = 49102 MB
finished aoR_loop[       0:   15625]
    CPU time for building right-hand side     94.29 sec, wall time      5.21 sec
w[  0], rank =  260 /  260
    CPU time for w[  0]     15.54 sec, wall time      0.30 sec
w[  1], rank =  260 /  260
    CPU time for w[  1]     12.16 sec, wall time      0.19 sec
w[  2], rank =  260 /  260
    CPU time for w[  2]     13.01 sec, wall time      0.20 sec
w[  3], rank =  260 /  260
    CPU time for w[  3]     13.00 sec, wall time      0.20 sec
w[  4], rank =  260 /  260
    CPU time for w[  4]     41.89 sec, wall time      0.67 sec
w[  5], rank =  260 /  260
    CPU time for w[  5]     15.80 sec, wall time      0.25 sec
w[  6], rank =  260 /  260
    CPU time for w[  6]     15.30 sec, wall time      0.24 sec
w[  7], rank =  260 /  260
    CPU time for w[  7]     15.31 sec, wall time      0.24 sec
w[  8], rank =  260 /  260
    CPU time for w[  8]     15.30 sec, wall time      0.24 sec
w[  9], rank =  260 /  260
    CPU time for w[  9]     15.31 sec, wall time      0.24 sec
w[ 10], rank =  260 /  260
    CPU time for w[ 10]     46.58 sec, wall time      0.75 sec
w[ 11], rank =  260 /  260
    CPU time for w[ 11]     13.71 sec, wall time      0.22 sec
w[ 12], rank =  260 /  260
    CPU time for w[ 12]     13.78 sec, wall time      0.22 sec
w[ 13], rank =  260 /  260
    CPU time for w[ 13]     14.92 sec, wall time      0.23 sec
w[ 14], rank =  260 /  260
    CPU time for w[ 14]     16.91 sec, wall time      0.27 sec
w[ 15], rank =  260 /  260
    CPU time for w[ 15]     15.42 sec, wall time      0.24 sec
w[ 16], rank =  260 /  260
    CPU time for w[ 16]     14.92 sec, wall time      0.23 sec
w[ 17], rank =  260 /  260
    CPU time for w[ 17]     15.16 sec, wall time      0.24 sec
w[ 18], rank =  260 /  260
    CPU time for w[ 18]     15.04 sec, wall time      0.24 sec
w[ 19], rank =  260 /  260
    CPU time for w[ 19]     15.04 sec, wall time      0.24 sec
w[ 20], rank =  260 /  260
    CPU time for w[ 20]     15.04 sec, wall time      0.24 sec
w[ 21], rank =  260 /  260
    CPU time for w[ 21]     14.97 sec, wall time      0.23 sec
w[ 22], rank =  260 /  260
    CPU time for w[ 22]     15.10 sec, wall time      0.24 sec
w[ 23], rank =  260 /  260
    CPU time for w[ 23]     15.16 sec, wall time      0.24 sec
w[ 24], rank =  260 /  260
    CPU time for w[ 24]     15.23 sec, wall time      0.24 sec
w[ 25], rank =  260 /  260
    CPU time for w[ 25]     15.10 sec, wall time      0.24 sec
w[ 26], rank =  260 /  260
    CPU time for w[ 26]     15.23 sec, wall time      0.24 sec
w[ 27], rank =  260 /  260
    CPU time for w[ 27]     15.23 sec, wall time      0.24 sec
w[ 28], rank =  260 /  260
    CPU time for w[ 28]     15.67 sec, wall time      0.25 sec
w[ 29], rank =  260 /  260
    CPU time for w[ 29]     48.31 sec, wall time      0.77 sec
w[ 30], rank =  260 /  260
    CPU time for w[ 30]     15.73 sec, wall time      0.25 sec
w[ 31], rank =  260 /  260
    CPU time for w[ 31]     15.43 sec, wall time      0.24 sec
w[ 32], rank =  260 /  260
    CPU time for w[ 32]     15.37 sec, wall time      0.24 sec
w[ 33], rank =  260 /  260
    CPU time for w[ 33]     19.93 sec, wall time      0.33 sec
w[ 34], rank =  260 /  260
    CPU time for w[ 34]     14.09 sec, wall time      0.22 sec
w[ 35], rank =  260 /  260
    CPU time for w[ 35]     14.41 sec, wall time      0.23 sec
w[ 36], rank =  260 /  260
    CPU time for w[ 36]     14.44 sec, wall time      0.23 sec
w[ 37], rank =  260 /  260
    CPU time for w[ 37]     14.38 sec, wall time      0.23 sec
w[ 38], rank =  260 /  260
    CPU time for w[ 38]     15.24 sec, wall time      0.24 sec
w[ 39], rank =  260 /  260
    CPU time for w[ 39]     15.12 sec, wall time      0.24 sec
w[ 40], rank =  260 /  260
    CPU time for w[ 40]     15.24 sec, wall time      0.24 sec
w[ 41], rank =  260 /  260
    CPU time for w[ 41]     15.12 sec, wall time      0.24 sec
w[ 42], rank =  260 /  260
    CPU time for w[ 42]     15.25 sec, wall time      0.24 sec
w[ 43], rank =  260 /  260
    CPU time for w[ 43]     15.06 sec, wall time      0.24 sec
w[ 44], rank =  260 /  260
    CPU time for w[ 44]     15.35 sec, wall time      0.24 sec
w[ 45], rank =  260 /  260
    CPU time for w[ 45]     14.67 sec, wall time      0.23 sec
w[ 46], rank =  260 /  260
    CPU time for w[ 46]     15.62 sec, wall time      0.24 sec
w[ 47], rank =  260 /  260
    CPU time for w[ 47]     15.56 sec, wall time      0.24 sec
w[ 48], rank =  260 /  260
    CPU time for w[ 48]     15.56 sec, wall time      0.24 sec
w[ 49], rank =  260 /  260
    CPU time for w[ 49]     15.37 sec, wall time      0.24 sec
w[ 50], rank =  260 /  260
    CPU time for w[ 50]     15.56 sec, wall time      0.24 sec
w[ 51], rank =  260 /  260
    CPU time for w[ 51]     15.37 sec, wall time      0.24 sec
w[ 52], rank =  260 /  260
    CPU time for w[ 52]     15.37 sec, wall time      0.24 sec
w[ 53], rank =  260 /  260
    CPU time for w[ 53]     14.86 sec, wall time      0.23 sec
w[ 54], rank =  260 /  260
    CPU time for w[ 54]     15.08 sec, wall time      0.24 sec
w[ 55], rank =  260 /  260
    CPU time for w[ 55]     15.31 sec, wall time      0.24 sec
w[ 56], rank =  260 /  260
    CPU time for w[ 56]     15.38 sec, wall time      0.24 sec
w[ 57], rank =  260 /  260
    CPU time for w[ 57]     15.37 sec, wall time      0.24 sec
w[ 58], rank =  260 /  260
    CPU time for w[ 58]     15.44 sec, wall time      0.24 sec
w[ 59], rank =  260 /  260
    CPU time for w[ 59]     15.31 sec, wall time      0.24 sec
w[ 60], rank =  260 /  260
    CPU time for w[ 60]     15.44 sec, wall time      0.24 sec
w[ 61], rank =  260 /  260
    CPU time for w[ 61]     15.11 sec, wall time      0.24 sec
w[ 62], rank =  260 /  260
    CPU time for w[ 62]     15.05 sec, wall time      0.24 sec
w[ 63], rank =  260 /  260
    CPU time for w[ 63]     14.86 sec, wall time      0.23 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-prim/gth-dzvp-molopt-sr/fftisdf-yang-10-120/4-4-4//47012621/tmp.chk
    CPU time for building ISDF   1436.83 sec, wall time     26.47 sec
