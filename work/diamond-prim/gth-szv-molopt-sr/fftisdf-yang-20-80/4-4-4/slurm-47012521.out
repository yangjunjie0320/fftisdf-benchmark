OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012521/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012521/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [21 21 21] (9261 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  tol c0 kmesh  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (80 / [21 21 21]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 2.1 Eh.
Recommended ke_cutoff/mesh are 635.334 / [55 55 55].

kmesh = [4 4 4]
Input parent grid mesh = [6, 6, 6], ke_cutoff =  12.45
Final parent grid size = [7 5 7]

Selecting interpolation points
nkpts = 64, nao = 8, c0 =  20.00
Parent grid mesh = [7 5 7], grid size = 245

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    109.92 sec, wall time      1.72 sec
Pivoted Cholesky rank = 245, nip = 160, estimated error = 1.21e-02
Number of interpolation points = 160, effective CISDF =  20.00
    CPU time for building left-hand side     13.41 sec, wall time      0.21 sec

kpt = 64, ngrid = 9261, nao = 8
ngrid = 9261, blksize = 299720, nip = 160
required disk space = 1 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4/47012521/gbmkpoc0
blksize = 299720, memory for aoR_loop = 49106 MB
finished aoR_loop[       0:    9261]
    CPU time for building right-hand side     62.33 sec, wall time      2.22 sec
w[  0], rank =  160 /  160
    CPU time for w[  0]     13.52 sec, wall time      0.22 sec
w[  1], rank =  160 /  160
    CPU time for w[  1]      5.03 sec, wall time      0.08 sec
w[  2], rank =  160 /  160
    CPU time for w[  2]      5.35 sec, wall time      0.08 sec
w[  3], rank =  160 /  160
    CPU time for w[  3]      5.35 sec, wall time      0.08 sec
w[  4], rank =  160 /  160
    CPU time for w[  4]      5.36 sec, wall time      0.08 sec
w[  5], rank =  160 /  160
    CPU time for w[  5]      5.30 sec, wall time      0.08 sec
w[  6], rank =  160 /  160
    CPU time for w[  6]      5.36 sec, wall time      0.08 sec
w[  7], rank =  160 /  160
    CPU time for w[  7]      5.23 sec, wall time      0.08 sec
w[  8], rank =  160 /  160
    CPU time for w[  8]     13.96 sec, wall time      0.23 sec
w[  9], rank =  160 /  160
    CPU time for w[  9]      4.65 sec, wall time      0.07 sec
w[ 10], rank =  160 /  160
    CPU time for w[ 10]      5.03 sec, wall time      0.08 sec
w[ 11], rank =  160 /  160
    CPU time for w[ 11]      5.49 sec, wall time      0.09 sec
w[ 12], rank =  160 /  160
    CPU time for w[ 12]      5.74 sec, wall time      0.09 sec
w[ 13], rank =  160 /  160
    CPU time for w[ 13]      5.80 sec, wall time      0.09 sec
w[ 14], rank =  160 /  160
    CPU time for w[ 14]      5.74 sec, wall time      0.09 sec
w[ 15], rank =  160 /  160
    CPU time for w[ 15]      5.74 sec, wall time      0.09 sec
w[ 16], rank =  160 /  160
    CPU time for w[ 16]      5.74 sec, wall time      0.09 sec
w[ 17], rank =  160 /  160
    CPU time for w[ 17]      5.55 sec, wall time      0.09 sec
w[ 18], rank =  160 /  160
    CPU time for w[ 18]      5.74 sec, wall time      0.09 sec
w[ 19], rank =  160 /  160
    CPU time for w[ 19]      5.62 sec, wall time      0.09 sec
w[ 20], rank =  160 /  160
    CPU time for w[ 20]      5.81 sec, wall time      0.09 sec
w[ 21], rank =  160 /  160
    CPU time for w[ 21]      5.64 sec, wall time      0.09 sec
w[ 22], rank =  160 /  160
    CPU time for w[ 22]      5.64 sec, wall time      0.09 sec
w[ 23], rank =  160 /  160
    CPU time for w[ 23]      5.62 sec, wall time      0.09 sec
w[ 24], rank =  160 /  160
    CPU time for w[ 24]      5.74 sec, wall time      0.09 sec
w[ 25], rank =  160 /  160
    CPU time for w[ 25]      5.74 sec, wall time      0.09 sec
w[ 26], rank =  160 /  160
    CPU time for w[ 26]      5.68 sec, wall time      0.09 sec
w[ 27], rank =  160 /  160
    CPU time for w[ 27]      5.68 sec, wall time      0.09 sec
w[ 28], rank =  160 /  160
    CPU time for w[ 28]      5.81 sec, wall time      0.09 sec
w[ 29], rank =  160 /  160
    CPU time for w[ 29]      7.19 sec, wall time      0.11 sec
w[ 30], rank =  160 /  160
    CPU time for w[ 30]      4.97 sec, wall time      0.08 sec
w[ 31], rank =  160 /  160
    CPU time for w[ 31]      8.18 sec, wall time      0.13 sec
w[ 32], rank =  160 /  160
    CPU time for w[ 32]      5.36 sec, wall time      0.08 sec
w[ 33], rank =  160 /  160
    CPU time for w[ 33]      5.36 sec, wall time      0.08 sec
w[ 34], rank =  160 /  160
    CPU time for w[ 34]      5.36 sec, wall time      0.08 sec
w[ 35], rank =  160 /  160
    CPU time for w[ 35]      5.55 sec, wall time      0.09 sec
w[ 36], rank =  160 /  160
    CPU time for w[ 36]      5.49 sec, wall time      0.09 sec
w[ 37], rank =  160 /  160
    CPU time for w[ 37]      5.42 sec, wall time      0.09 sec
w[ 38], rank =  160 /  160
    CPU time for w[ 38]      5.48 sec, wall time      0.09 sec
w[ 39], rank =  160 /  160
    CPU time for w[ 39]      5.55 sec, wall time      0.09 sec
w[ 40], rank =  160 /  160
    CPU time for w[ 40]      5.49 sec, wall time      0.09 sec
w[ 41], rank =  160 /  160
    CPU time for w[ 41]      5.49 sec, wall time      0.09 sec
w[ 42], rank =  160 /  160
    CPU time for w[ 42]      5.36 sec, wall time      0.08 sec
w[ 43], rank =  160 /  160
    CPU time for w[ 43]      5.61 sec, wall time      0.09 sec
w[ 44], rank =  160 /  160
    CPU time for w[ 44]     13.36 sec, wall time      0.21 sec
w[ 45], rank =  160 /  160
    CPU time for w[ 45]      5.48 sec, wall time      0.09 sec
w[ 46], rank =  160 /  160
    CPU time for w[ 46]      5.10 sec, wall time      0.08 sec
w[ 47], rank =  160 /  160
    CPU time for w[ 47]      5.23 sec, wall time      0.08 sec
w[ 48], rank =  160 /  160
    CPU time for w[ 48]      5.23 sec, wall time      0.08 sec
w[ 49], rank =  160 /  160
    CPU time for w[ 49]      5.85 sec, wall time      0.09 sec
w[ 50], rank =  160 /  160
    CPU time for w[ 50]      5.48 sec, wall time      0.09 sec
w[ 51], rank =  160 /  160
    CPU time for w[ 51]      6.40 sec, wall time      0.10 sec
w[ 52], rank =  160 /  160
    CPU time for w[ 52]      6.36 sec, wall time      0.10 sec
w[ 53], rank =  160 /  160
    CPU time for w[ 53]      6.25 sec, wall time      0.10 sec
w[ 54], rank =  160 /  160
    CPU time for w[ 54]      6.32 sec, wall time      0.10 sec
w[ 55], rank =  160 /  160
    CPU time for w[ 55]      6.56 sec, wall time      0.10 sec
w[ 56], rank =  160 /  160
    CPU time for w[ 56]      6.13 sec, wall time      0.10 sec
w[ 57], rank =  160 /  160
    CPU time for w[ 57]      6.64 sec, wall time      0.10 sec
w[ 58], rank =  160 /  160
    CPU time for w[ 58]      6.76 sec, wall time      0.11 sec
w[ 59], rank =  160 /  160
    CPU time for w[ 59]      6.70 sec, wall time      0.10 sec
w[ 60], rank =  160 /  160
    CPU time for w[ 60]      6.83 sec, wall time      0.11 sec
w[ 61], rank =  160 /  160
    CPU time for w[ 61]      6.25 sec, wall time      0.10 sec
w[ 62], rank =  160 /  160
    CPU time for w[ 62]      6.70 sec, wall time      0.10 sec
w[ 63], rank =  160 /  160
    CPU time for w[ 63]      6.38 sec, wall time      0.10 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-20-80/4-4-4//47012521/tmp.chk
    CPU time for building ISDF    583.31 sec, wall time     10.42 sec
