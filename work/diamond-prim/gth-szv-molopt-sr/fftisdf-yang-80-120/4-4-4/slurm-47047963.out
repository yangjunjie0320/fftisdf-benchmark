OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-80-120/4-4-4//47047963/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-80-120/4-4-4//47047963/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [25 25 25] (15625 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  kmesh tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (120 / [25 25 25]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 0.43 Eh.
Recommended ke_cutoff/mesh are 635.334 / [55 55 55].

kmesh = [4 4 4]
Input parent grid mesh = [9, 9, 9], ke_cutoff =  49.82
Final parent grid size = [11  9 11]

Selecting interpolation points
nkpts = 64, nao = 8, c0 =  80.00
Parent grid mesh = [11  9 11], grid size = 1089

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    291.53 sec, wall time      4.58 sec
Pivoted Cholesky rank = 1089, nip = 640, estimated error = 9.92e-05
Number of interpolation points = 640, effective CISDF =  80.00
    CPU time for building left-hand side     33.66 sec, wall time      0.53 sec

kpt = 64, ngrid = 15625, nao = 8
ngrid = 15625, blksize = 74864, nip = 640
required disk space = 10 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-80-120/4-4-4/47047963/m0tai6qf
blksize = 74864, memory for aoR_loop = 49062 MB
finished aoR_loop[       0:   15625]
    CPU time for building right-hand side    108.19 sec, wall time     10.46 sec
w[  0], rank =   36 /  640
    CPU time for w[  0]     27.93 sec, wall time      0.59 sec
w[  1], rank =   36 /  640
    CPU time for w[  1]    452.82 sec, wall time      7.25 sec
w[  2], rank =   36 /  640
    CPU time for w[  2]     28.54 sec, wall time      0.49 sec
w[  3], rank =   36 /  640
    CPU time for w[  3]     30.11 sec, wall time      0.53 sec
w[  4], rank =   36 /  640
    CPU time for w[  4]     29.09 sec, wall time      0.54 sec
w[  5], rank =   36 /  640
    CPU time for w[  5]     29.12 sec, wall time      0.54 sec
w[  6], rank =   36 /  640
    CPU time for w[  6]     28.98 sec, wall time      0.50 sec
w[  7], rank =   36 /  640
    CPU time for w[  7]     28.66 sec, wall time      0.50 sec
w[  8], rank =   36 /  640
    CPU time for w[  8]    141.96 sec, wall time      2.34 sec
w[  9], rank =   36 /  640
    CPU time for w[  9]     55.31 sec, wall time      0.96 sec
w[ 10], rank =   36 /  640
    CPU time for w[ 10]    263.70 sec, wall time      4.43 sec
w[ 11], rank =   36 /  640
    CPU time for w[ 11]     28.35 sec, wall time      0.49 sec
w[ 12], rank =   36 /  640
    CPU time for w[ 12]    271.71 sec, wall time      4.48 sec
w[ 13], rank =   36 /  640
    CPU time for w[ 13]     28.78 sec, wall time      0.50 sec
w[ 14], rank =   36 /  640
    CPU time for w[ 14]    265.04 sec, wall time      4.57 sec
w[ 15], rank =   36 /  640
    CPU time for w[ 15]     28.70 sec, wall time      0.50 sec
w[ 16], rank =   36 /  640
    CPU time for w[ 16]     94.24 sec, wall time      1.59 sec
w[ 17], rank =   36 /  640
    CPU time for w[ 17]     29.29 sec, wall time      0.56 sec
w[ 18], rank =   36 /  640
    CPU time for w[ 18]     67.46 sec, wall time      1.13 sec
w[ 19], rank =   36 /  640
    CPU time for w[ 19]     29.21 sec, wall time      0.50 sec
w[ 20], rank =   36 /  640
    CPU time for w[ 20]     29.09 sec, wall time      0.55 sec
w[ 21], rank =   36 /  640
    CPU time for w[ 21]     28.77 sec, wall time      0.50 sec
w[ 22], rank =   36 /  640
    CPU time for w[ 22]     30.04 sec, wall time      0.57 sec
w[ 23], rank =   36 /  640
    CPU time for w[ 23]     28.96 sec, wall time      0.50 sec
w[ 24], rank =   36 /  640
    CPU time for w[ 24]    152.86 sec, wall time      2.56 sec
w[ 25], rank =   36 /  640
    CPU time for w[ 25]     28.59 sec, wall time      0.48 sec
w[ 26], rank =   36 /  640
    CPU time for w[ 26]     28.73 sec, wall time      0.50 sec
w[ 27], rank =   36 /  640
    CPU time for w[ 27]     42.82 sec, wall time      0.73 sec
w[ 28], rank =   36 /  640
    CPU time for w[ 28]     28.34 sec, wall time      0.48 sec
w[ 29], rank =   36 /  640
    CPU time for w[ 29]     29.12 sec, wall time      0.51 sec
w[ 30], rank =   36 /  640
    CPU time for w[ 30]    193.45 sec, wall time      3.24 sec
w[ 31], rank =   36 /  640
    CPU time for w[ 31]     29.82 sec, wall time      0.51 sec
w[ 32], rank =   36 /  640
    CPU time for w[ 32]     44.64 sec, wall time      0.77 sec
w[ 33], rank =   36 /  640
    CPU time for w[ 33]    537.63 sec, wall time      8.75 sec
w[ 34], rank =   36 /  640
    CPU time for w[ 34]     28.87 sec, wall time      0.54 sec
w[ 35], rank =   36 /  640
    CPU time for w[ 35]     29.41 sec, wall time      0.52 sec
w[ 36], rank =   36 /  640
    CPU time for w[ 36]     29.33 sec, wall time      0.58 sec
w[ 37], rank =   36 /  640
    CPU time for w[ 37]     28.63 sec, wall time      0.50 sec
w[ 38], rank =   36 /  640
    CPU time for w[ 38]     29.14 sec, wall time      0.52 sec
w[ 39], rank =   36 /  640
    CPU time for w[ 39]    260.98 sec, wall time      4.23 sec
w[ 40], rank =   36 /  640
    CPU time for w[ 40]     28.80 sec, wall time      0.50 sec
w[ 41], rank =   36 /  640
    CPU time for w[ 41]     29.17 sec, wall time      0.53 sec
w[ 42], rank =   36 /  640
    CPU time for w[ 42]     28.60 sec, wall time      0.49 sec
w[ 43], rank =   36 /  640
    CPU time for w[ 43]     28.69 sec, wall time      0.50 sec
w[ 44], rank =   36 /  640
    CPU time for w[ 44]     29.33 sec, wall time      0.55 sec
w[ 45], rank =   36 /  640
    CPU time for w[ 45]     28.25 sec, wall time      0.48 sec
w[ 46], rank =   36 /  640
    CPU time for w[ 46]     29.93 sec, wall time      0.52 sec
w[ 47], rank =   36 /  640
    CPU time for w[ 47]     28.81 sec, wall time      0.49 sec
w[ 48], rank =   36 /  640
    CPU time for w[ 48]     28.95 sec, wall time      0.51 sec
w[ 49], rank =   36 /  640
    CPU time for w[ 49]     28.79 sec, wall time      0.49 sec
w[ 50], rank =   36 /  640
    CPU time for w[ 50]     29.16 sec, wall time      0.51 sec
w[ 51], rank =   36 /  640
    CPU time for w[ 51]     29.04 sec, wall time      0.50 sec
w[ 52], rank =   36 /  640
    CPU time for w[ 52]     29.31 sec, wall time      0.51 sec
w[ 53], rank =   36 /  640
    CPU time for w[ 53]     29.34 sec, wall time      0.55 sec
w[ 54], rank =   36 /  640
    CPU time for w[ 54]     29.00 sec, wall time      0.51 sec
w[ 55], rank =   36 /  640
    CPU time for w[ 55]     28.95 sec, wall time      0.54 sec
w[ 56], rank =   36 /  640
    CPU time for w[ 56]     29.45 sec, wall time      0.50 sec
w[ 57], rank =   36 /  640
    CPU time for w[ 57]     40.62 sec, wall time      0.75 sec
w[ 58], rank =   36 /  640
    CPU time for w[ 58]     29.08 sec, wall time      0.50 sec
w[ 59], rank =   36 /  640
    CPU time for w[ 59]     29.24 sec, wall time      0.51 sec
w[ 60], rank =   36 /  640
    CPU time for w[ 60]     29.36 sec, wall time      0.52 sec
w[ 61], rank =   36 /  640
    CPU time for w[ 61]     29.16 sec, wall time      0.50 sec
w[ 62], rank =   36 /  640
    CPU time for w[ 62]     29.89 sec, wall time      0.54 sec
w[ 63], rank =   36 /  640
    CPU time for w[ 63]     28.99 sec, wall time      0.51 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-80-120/4-4-4//47047963/tmp.chk
    CPU time for building ISDF   4751.02 sec, wall time     88.95 sec
