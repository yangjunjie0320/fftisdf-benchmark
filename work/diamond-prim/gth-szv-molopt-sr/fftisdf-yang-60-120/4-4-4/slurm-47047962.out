OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-60-120/4-4-4//47047962/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-60-120/4-4-4//47047962/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [25 25 25] (15625 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (120 / [25 25 25]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 0.43 Eh.
Recommended ke_cutoff/mesh are 635.334 / [55 55 55].

kmesh = [4 4 4]
Input parent grid mesh = [8, 8, 8], ke_cutoff =  28.02
Final parent grid size = [9 7 9]

Selecting interpolation points
nkpts = 64, nao = 8, c0 =  60.00
Parent grid mesh = [9 7 9], grid size = 567

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    275.48 sec, wall time      4.33 sec
Pivoted Cholesky rank = 567, nip = 480, estimated error = 2.11e-04
Number of interpolation points = 480, effective CISDF =  60.00
    CPU time for building left-hand side     23.60 sec, wall time      0.39 sec

kpt = 64, ngrid = 15625, nao = 8
ngrid = 15625, blksize = 99885, nip = 480
required disk space = 7 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-60-120/4-4-4/47047962/fsxber24
blksize = 99885, memory for aoR_loop = 49095 MB
finished aoR_loop[       0:   15625]
    CPU time for building right-hand side     90.58 sec, wall time      8.01 sec
w[  0], rank =   43 /  480
    CPU time for w[  0]     20.44 sec, wall time      0.43 sec
w[  1], rank =   43 /  480
    CPU time for w[  1]     22.54 sec, wall time      0.42 sec
w[  2], rank =   44 /  480
    CPU time for w[  2]     21.78 sec, wall time      0.37 sec
w[  3], rank =   43 /  480
    CPU time for w[  3]     22.40 sec, wall time      0.38 sec
w[  4], rank =   43 /  480
    CPU time for w[  4]     27.69 sec, wall time      0.50 sec
w[  5], rank =   43 /  480
    CPU time for w[  5]     22.65 sec, wall time      0.40 sec
w[  6], rank =   43 /  480
    CPU time for w[  6]     21.55 sec, wall time      0.36 sec
w[  7], rank =   44 /  480
    CPU time for w[  7]     22.34 sec, wall time      0.38 sec
w[  8], rank =   44 /  480
    CPU time for w[  8]     22.56 sec, wall time      0.38 sec
w[  9], rank =   44 /  480
    CPU time for w[  9]     22.19 sec, wall time      0.39 sec
w[ 10], rank =   43 /  480
    CPU time for w[ 10]     22.71 sec, wall time      0.40 sec
w[ 11], rank =   44 /  480
    CPU time for w[ 11]     22.52 sec, wall time      0.41 sec
w[ 12], rank =   43 /  480
    CPU time for w[ 12]     22.64 sec, wall time      0.41 sec
w[ 13], rank =   44 /  480
    CPU time for w[ 13]     76.44 sec, wall time      1.32 sec
w[ 14], rank =   43 /  480
    CPU time for w[ 14]     21.85 sec, wall time      0.37 sec
w[ 15], rank =   43 /  480
    CPU time for w[ 15]     22.64 sec, wall time      0.41 sec
w[ 16], rank =   43 /  480
    CPU time for w[ 16]     23.02 sec, wall time      0.40 sec
w[ 17], rank =   43 /  480
    CPU time for w[ 17]     22.23 sec, wall time      0.39 sec
w[ 18], rank =   43 /  480
    CPU time for w[ 18]     22.90 sec, wall time      0.46 sec
w[ 19], rank =   43 /  480
    CPU time for w[ 19]     22.59 sec, wall time      0.40 sec
w[ 20], rank =   43 /  480
    CPU time for w[ 20]    283.67 sec, wall time      4.62 sec
w[ 21], rank =   43 /  480
    CPU time for w[ 21]     21.57 sec, wall time      0.38 sec
w[ 22], rank =   43 /  480
    CPU time for w[ 22]     22.26 sec, wall time      0.39 sec
w[ 23], rank =   43 /  480
    CPU time for w[ 23]     21.41 sec, wall time      0.36 sec
w[ 24], rank =   43 /  480
    CPU time for w[ 24]     22.09 sec, wall time      0.38 sec
w[ 25], rank =   43 /  480
    CPU time for w[ 25]     21.84 sec, wall time      0.37 sec
w[ 26], rank =   44 /  480
    CPU time for w[ 26]     20.96 sec, wall time      0.36 sec
w[ 27], rank =   44 /  480
    CPU time for w[ 27]     22.32 sec, wall time      0.42 sec
w[ 28], rank =   44 /  480
    CPU time for w[ 28]    178.74 sec, wall time      2.94 sec
w[ 29], rank =   44 /  480
    CPU time for w[ 29]     21.71 sec, wall time      0.40 sec
w[ 30], rank =   44 /  480
    CPU time for w[ 30]     22.02 sec, wall time      0.41 sec
w[ 31], rank =   43 /  480
    CPU time for w[ 31]     22.26 sec, wall time      0.40 sec
w[ 32], rank =   44 /  480
    CPU time for w[ 32]     21.64 sec, wall time      0.38 sec
w[ 33], rank =   43 /  480
    CPU time for w[ 33]    484.59 sec, wall time      8.14 sec
w[ 34], rank =   43 /  480
    CPU time for w[ 34]     21.67 sec, wall time      0.38 sec
w[ 35], rank =   43 /  480
    CPU time for w[ 35]     22.33 sec, wall time      0.43 sec
w[ 36], rank =   43 /  480
    CPU time for w[ 36]     31.30 sec, wall time      0.61 sec
w[ 37], rank =   43 /  480
    CPU time for w[ 37]     25.02 sec, wall time      0.42 sec
w[ 38], rank =   43 /  480
    CPU time for w[ 38]     20.59 sec, wall time      0.37 sec
w[ 39], rank =   44 /  480
    CPU time for w[ 39]     22.57 sec, wall time      0.44 sec
w[ 40], rank =   43 /  480
    CPU time for w[ 40]     27.51 sec, wall time      0.49 sec
w[ 41], rank =   44 /  480
    CPU time for w[ 41]     22.45 sec, wall time      0.39 sec
w[ 42], rank =   43 /  480
    CPU time for w[ 42]     23.19 sec, wall time      0.43 sec
w[ 43], rank =   44 /  480
    CPU time for w[ 43]     21.78 sec, wall time      0.38 sec
w[ 44], rank =   43 /  480
    CPU time for w[ 44]     22.08 sec, wall time      0.39 sec
w[ 45], rank =   44 /  480
    CPU time for w[ 45]     21.78 sec, wall time      0.37 sec
w[ 46], rank =   43 /  480
    CPU time for w[ 46]     22.15 sec, wall time      0.40 sec
w[ 47], rank =   43 /  480
    CPU time for w[ 47]     69.20 sec, wall time      1.18 sec
w[ 48], rank =   43 /  480
    CPU time for w[ 48]     22.04 sec, wall time      0.39 sec
w[ 49], rank =   43 /  480
    CPU time for w[ 49]    313.48 sec, wall time      5.13 sec
w[ 50], rank =   43 /  480
    CPU time for w[ 50]     20.66 sec, wall time      0.34 sec
w[ 51], rank =   43 /  480
    CPU time for w[ 51]     21.34 sec, wall time      0.37 sec
w[ 52], rank =   44 /  480
    CPU time for w[ 52]     22.09 sec, wall time      0.38 sec
w[ 53], rank =   43 /  480
    CPU time for w[ 53]     51.87 sec, wall time      0.92 sec
w[ 54], rank =   44 /  480
    CPU time for w[ 54]     23.20 sec, wall time      0.45 sec
w[ 55], rank =   44 /  480
    CPU time for w[ 55]    136.03 sec, wall time      2.26 sec
w[ 56], rank =   43 /  480
    CPU time for w[ 56]     22.61 sec, wall time      0.42 sec
w[ 57], rank =   44 /  480
    CPU time for w[ 57]     22.70 sec, wall time      0.47 sec
w[ 58], rank =   44 /  480
    CPU time for w[ 58]     22.22 sec, wall time      0.38 sec
w[ 59], rank =   43 /  480
    CPU time for w[ 59]     22.97 sec, wall time      0.45 sec
w[ 60], rank =   43 /  480
    CPU time for w[ 60]     23.07 sec, wall time      0.41 sec
w[ 61], rank =   43 /  480
    CPU time for w[ 61]     21.70 sec, wall time      0.44 sec
w[ 62], rank =   43 /  480
    CPU time for w[ 62]     21.60 sec, wall time      0.37 sec
w[ 63], rank =   43 /  480
    CPU time for w[ 63]     48.97 sec, wall time      0.89 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-prim/gth-szv-molopt-sr/fftisdf-yang-60-120/4-4-4//47047962/tmp.chk
    CPU time for building ISDF   3285.22 sec, wall time     62.81 sec
