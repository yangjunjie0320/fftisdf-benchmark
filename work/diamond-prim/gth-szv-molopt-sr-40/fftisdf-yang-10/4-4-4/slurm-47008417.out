OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008417/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008417/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  tol kmesh c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 529.952 / [51 51 51].

kmesh = [4 4 4]
Input parent grid mesh = [5, 5, 5], ke_cutoff =  12.45
Final parent grid size = [7 5 7]

Selecting interpolation points
nkpts = 64, nao = 8, c0 =  10.00
Parent grid mesh = [7 5 7], grid size = 245

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    102.90 sec, wall time      1.61 sec
Pivoted Cholesky rank = 245, nip = 80, estimated error = 7.48e-02
Number of interpolation points = 80, effective CISDF =  10.00
    CPU time for building left-hand side      6.04 sec, wall time      0.10 sec

kpt = 64, ngrid = 3375, nao = 8
ngrid = 3375, blksize = 599621, nip = 80
required disk space = 0 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4/47008417/9gelufbr
blksize = 599621, memory for aoR_loop = 49120 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side     41.53 sec, wall time      0.73 sec
w[  0], rank =   80 /   80
    CPU time for w[  0]     12.93 sec, wall time      0.21 sec
w[  1], rank =   80 /   80
    CPU time for w[  1]      1.19 sec, wall time      0.02 sec
w[  2], rank =   80 /   80
    CPU time for w[  2]      1.15 sec, wall time      0.02 sec
w[  3], rank =   80 /   80
    CPU time for w[  3]      1.15 sec, wall time      0.02 sec
w[  4], rank =   80 /   80
    CPU time for w[  4]      1.08 sec, wall time      0.02 sec
w[  5], rank =   80 /   80
    CPU time for w[  5]      1.15 sec, wall time      0.02 sec
w[  6], rank =   80 /   80
    CPU time for w[  6]      1.15 sec, wall time      0.02 sec
w[  7], rank =   80 /   80
    CPU time for w[  7]      1.08 sec, wall time      0.02 sec
w[  8], rank =   80 /   80
    CPU time for w[  8]      1.15 sec, wall time      0.02 sec
w[  9], rank =   80 /   80
    CPU time for w[  9]      1.15 sec, wall time      0.02 sec
w[ 10], rank =   80 /   80
    CPU time for w[ 10]      1.08 sec, wall time      0.02 sec
w[ 11], rank =   80 /   80
    CPU time for w[ 11]      1.15 sec, wall time      0.02 sec
w[ 12], rank =   80 /   80
    CPU time for w[ 12]      1.20 sec, wall time      0.02 sec
w[ 13], rank =   80 /   80
    CPU time for w[ 13]      1.15 sec, wall time      0.02 sec
w[ 14], rank =   80 /   80
    CPU time for w[ 14]      1.15 sec, wall time      0.02 sec
w[ 15], rank =   80 /   80
    CPU time for w[ 15]      1.15 sec, wall time      0.02 sec
w[ 16], rank =   80 /   80
    CPU time for w[ 16]      1.15 sec, wall time      0.02 sec
w[ 17], rank =   80 /   80
    CPU time for w[ 17]      1.15 sec, wall time      0.02 sec
w[ 18], rank =   80 /   80
    CPU time for w[ 18]      1.09 sec, wall time      0.02 sec
w[ 19], rank =   80 /   80
    CPU time for w[ 19]      1.15 sec, wall time      0.02 sec
w[ 20], rank =   80 /   80
    CPU time for w[ 20]      1.15 sec, wall time      0.02 sec
w[ 21], rank =   80 /   80
    CPU time for w[ 21]      5.10 sec, wall time      0.08 sec
w[ 22], rank =   80 /   80
    CPU time for w[ 22]      1.98 sec, wall time      0.03 sec
w[ 23], rank =   80 /   80
    CPU time for w[ 23]      1.21 sec, wall time      0.02 sec
w[ 24], rank =   80 /   80
    CPU time for w[ 24]      1.15 sec, wall time      0.02 sec
w[ 25], rank =   80 /   80
    CPU time for w[ 25]      1.08 sec, wall time      0.02 sec
w[ 26], rank =   80 /   80
    CPU time for w[ 26]      1.15 sec, wall time      0.02 sec
w[ 27], rank =   80 /   80
    CPU time for w[ 27]      1.21 sec, wall time      0.02 sec
w[ 28], rank =   80 /   80
    CPU time for w[ 28]      1.09 sec, wall time      0.02 sec
w[ 29], rank =   80 /   80
    CPU time for w[ 29]      1.15 sec, wall time      0.02 sec
w[ 30], rank =   80 /   80
    CPU time for w[ 30]      1.15 sec, wall time      0.02 sec
w[ 31], rank =   80 /   80
    CPU time for w[ 31]      1.15 sec, wall time      0.02 sec
w[ 32], rank =   80 /   80
    CPU time for w[ 32]      1.15 sec, wall time      0.02 sec
w[ 33], rank =   80 /   80
    CPU time for w[ 33]      1.28 sec, wall time      0.02 sec
w[ 34], rank =   80 /   80
    CPU time for w[ 34]      1.15 sec, wall time      0.02 sec
w[ 35], rank =   80 /   80
    CPU time for w[ 35]      1.15 sec, wall time      0.02 sec
w[ 36], rank =   80 /   80
    CPU time for w[ 36]      1.15 sec, wall time      0.02 sec
w[ 37], rank =   80 /   80
    CPU time for w[ 37]      1.09 sec, wall time      0.02 sec
w[ 38], rank =   80 /   80
    CPU time for w[ 38]      1.15 sec, wall time      0.02 sec
w[ 39], rank =   80 /   80
    CPU time for w[ 39]      1.15 sec, wall time      0.02 sec
w[ 40], rank =   80 /   80
    CPU time for w[ 40]      1.09 sec, wall time      0.02 sec
w[ 41], rank =   80 /   80
    CPU time for w[ 41]      1.15 sec, wall time      0.02 sec
w[ 42], rank =   80 /   80
    CPU time for w[ 42]      1.09 sec, wall time      0.02 sec
w[ 43], rank =   80 /   80
    CPU time for w[ 43]      1.15 sec, wall time      0.02 sec
w[ 44], rank =   80 /   80
    CPU time for w[ 44]      1.09 sec, wall time      0.02 sec
w[ 45], rank =   80 /   80
    CPU time for w[ 45]      1.15 sec, wall time      0.02 sec
w[ 46], rank =   80 /   80
    CPU time for w[ 46]      1.09 sec, wall time      0.02 sec
w[ 47], rank =   80 /   80
    CPU time for w[ 47]      1.15 sec, wall time      0.02 sec
w[ 48], rank =   80 /   80
    CPU time for w[ 48]      1.09 sec, wall time      0.02 sec
w[ 49], rank =   80 /   80
    CPU time for w[ 49]      1.15 sec, wall time      0.02 sec
w[ 50], rank =   80 /   80
    CPU time for w[ 50]      1.15 sec, wall time      0.02 sec
w[ 51], rank =   80 /   80
    CPU time for w[ 51]      1.09 sec, wall time      0.02 sec
w[ 52], rank =   80 /   80
    CPU time for w[ 52]      1.15 sec, wall time      0.02 sec
w[ 53], rank =   80 /   80
    CPU time for w[ 53]      1.09 sec, wall time      0.02 sec
w[ 54], rank =   80 /   80
    CPU time for w[ 54]      1.15 sec, wall time      0.02 sec
w[ 55], rank =   80 /   80
    CPU time for w[ 55]      1.15 sec, wall time      0.02 sec
w[ 56], rank =   80 /   80
    CPU time for w[ 56]      1.09 sec, wall time      0.02 sec
w[ 57], rank =   80 /   80
    CPU time for w[ 57]      1.15 sec, wall time      0.02 sec
w[ 58], rank =   80 /   80
    CPU time for w[ 58]      1.09 sec, wall time      0.02 sec
w[ 59], rank =   80 /   80
    CPU time for w[ 59]      1.15 sec, wall time      0.02 sec
w[ 60], rank =   80 /   80
    CPU time for w[ 60]      1.09 sec, wall time      0.02 sec
w[ 61], rank =   80 /   80
    CPU time for w[ 61]      1.15 sec, wall time      0.02 sec
w[ 62], rank =   80 /   80
    CPU time for w[ 62]      1.15 sec, wall time      0.02 sec
w[ 63], rank =   80 /   80
    CPU time for w[ 63]      1.09 sec, wall time      0.02 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008417/tmp.chk
    CPU time for building ISDF    242.06 sec, wall time      3.88 sec
