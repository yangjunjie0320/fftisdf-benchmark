OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-20/4-4-4//47008418/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-20/4-4-4//47008418/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  kmesh c0 tol  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 529.952 / [51 51 51].

kmesh = [4 4 4]
Input parent grid mesh = [6, 6, 6], ke_cutoff =  12.45
Final parent grid size = [7 5 7]

Selecting interpolation points
nkpts = 64, nao = 8, c0 =  20.00
Parent grid mesh = [7 5 7], grid size = 245

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points     91.62 sec, wall time      1.44 sec
Pivoted Cholesky rank = 245, nip = 160, estimated error = 1.21e-02
Number of interpolation points = 160, effective CISDF =  20.00
    CPU time for building left-hand side     13.18 sec, wall time      0.23 sec

kpt = 64, ngrid = 3375, nao = 8
ngrid = 3375, blksize = 299809, nip = 160
required disk space = 0 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-20/4-4-4/47008418/regzxcul
blksize = 299809, memory for aoR_loop = 49120 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side     49.31 sec, wall time      0.96 sec
w[  0], rank =  159 /  160
    CPU time for w[  0]     14.07 sec, wall time      0.23 sec
w[  1], rank =  159 /  160
    CPU time for w[  1]      2.80 sec, wall time      0.04 sec
w[  2], rank =  159 /  160
    CPU time for w[  2]      3.05 sec, wall time      0.05 sec
w[  3], rank =  159 /  160
    CPU time for w[  3]      2.87 sec, wall time      0.04 sec
w[  4], rank =  159 /  160
    CPU time for w[  4]      2.61 sec, wall time      0.04 sec
w[  5], rank =  159 /  160
    CPU time for w[  5]      2.74 sec, wall time      0.04 sec
w[  6], rank =  159 /  160
    CPU time for w[  6]      2.68 sec, wall time      0.04 sec
w[  7], rank =  159 /  160
    CPU time for w[  7]      2.74 sec, wall time      0.04 sec
w[  8], rank =  159 /  160
    CPU time for w[  8]      2.81 sec, wall time      0.04 sec
w[  9], rank =  159 /  160
    CPU time for w[  9]      2.75 sec, wall time      0.04 sec
w[ 10], rank =  159 /  160
    CPU time for w[ 10]      2.62 sec, wall time      0.04 sec
w[ 11], rank =  159 /  160
    CPU time for w[ 11]      2.81 sec, wall time      0.04 sec
w[ 12], rank =  159 /  160
    CPU time for w[ 12]      2.68 sec, wall time      0.04 sec
w[ 13], rank =  159 /  160
    CPU time for w[ 13]      2.74 sec, wall time      0.04 sec
w[ 14], rank =  159 /  160
    CPU time for w[ 14]      2.81 sec, wall time      0.04 sec
w[ 15], rank =  159 /  160
    CPU time for w[ 15]      2.74 sec, wall time      0.04 sec
w[ 16], rank =  159 /  160
    CPU time for w[ 16]      2.87 sec, wall time      0.04 sec
w[ 17], rank =  159 /  160
    CPU time for w[ 17]      2.74 sec, wall time      0.04 sec
w[ 18], rank =  159 /  160
    CPU time for w[ 18]      2.62 sec, wall time      0.04 sec
w[ 19], rank =  159 /  160
    CPU time for w[ 19]      2.75 sec, wall time      0.04 sec
w[ 20], rank =  159 /  160
    CPU time for w[ 20]      2.81 sec, wall time      0.04 sec
w[ 21], rank =  159 /  160
    CPU time for w[ 21]      2.74 sec, wall time      0.04 sec
w[ 22], rank =  159 /  160
    CPU time for w[ 22]      4.00 sec, wall time      0.06 sec
w[ 23], rank =  159 /  160
    CPU time for w[ 23]      2.80 sec, wall time      0.04 sec
w[ 24], rank =  159 /  160
    CPU time for w[ 24]      2.93 sec, wall time      0.05 sec
w[ 25], rank =  159 /  160
    CPU time for w[ 25]      2.62 sec, wall time      0.04 sec
w[ 26], rank =  159 /  160
    CPU time for w[ 26]      2.49 sec, wall time      0.04 sec
w[ 27], rank =  159 /  160
    CPU time for w[ 27]      2.74 sec, wall time      0.04 sec
w[ 28], rank =  159 /  160
    CPU time for w[ 28]      2.55 sec, wall time      0.04 sec
w[ 29], rank =  159 /  160
    CPU time for w[ 29]      2.81 sec, wall time      0.04 sec
w[ 30], rank =  159 /  160
    CPU time for w[ 30]      2.49 sec, wall time      0.04 sec
w[ 31], rank =  159 /  160
    CPU time for w[ 31]      2.74 sec, wall time      0.04 sec
w[ 32], rank =  159 /  160
    CPU time for w[ 32]      2.74 sec, wall time      0.04 sec
w[ 33], rank =  159 /  160
    CPU time for w[ 33]      2.74 sec, wall time      0.04 sec
w[ 34], rank =  159 /  160
    CPU time for w[ 34]      2.49 sec, wall time      0.04 sec
w[ 35], rank =  159 /  160
    CPU time for w[ 35]      2.74 sec, wall time      0.04 sec
w[ 36], rank =  159 /  160
    CPU time for w[ 36]      2.55 sec, wall time      0.04 sec
w[ 37], rank =  159 /  160
    CPU time for w[ 37]      2.74 sec, wall time      0.04 sec
w[ 38], rank =  159 /  160
    CPU time for w[ 38]      2.74 sec, wall time      0.04 sec
w[ 39], rank =  159 /  160
    CPU time for w[ 39]      2.74 sec, wall time      0.04 sec
w[ 40], rank =  159 /  160
    CPU time for w[ 40]      2.55 sec, wall time      0.04 sec
w[ 41], rank =  159 /  160
    CPU time for w[ 41]      2.74 sec, wall time      0.04 sec
w[ 42], rank =  159 /  160
    CPU time for w[ 42]      2.49 sec, wall time      0.04 sec
w[ 43], rank =  159 /  160
    CPU time for w[ 43]      2.74 sec, wall time      0.04 sec
w[ 44], rank =  159 /  160
    CPU time for w[ 44]      2.74 sec, wall time      0.04 sec
w[ 45], rank =  159 /  160
    CPU time for w[ 45]      2.74 sec, wall time      0.04 sec
w[ 46], rank =  159 /  160
    CPU time for w[ 46]      2.49 sec, wall time      0.04 sec
w[ 47], rank =  159 /  160
    CPU time for w[ 47]      2.74 sec, wall time      0.04 sec
w[ 48], rank =  159 /  160
    CPU time for w[ 48]      2.55 sec, wall time      0.04 sec
w[ 49], rank =  159 /  160
    CPU time for w[ 49]      2.68 sec, wall time      0.04 sec
w[ 50], rank =  159 /  160
    CPU time for w[ 50]      2.68 sec, wall time      0.04 sec
w[ 51], rank =  159 /  160
    CPU time for w[ 51]      2.81 sec, wall time      0.04 sec
w[ 52], rank =  159 /  160
    CPU time for w[ 52]      2.49 sec, wall time      0.04 sec
w[ 53], rank =  159 /  160
    CPU time for w[ 53]      2.74 sec, wall time      0.04 sec
w[ 54], rank =  159 /  160
    CPU time for w[ 54]      2.55 sec, wall time      0.04 sec
w[ 55], rank =  159 /  160
    CPU time for w[ 55]      2.74 sec, wall time      0.04 sec
w[ 56], rank =  159 /  160
    CPU time for w[ 56]      2.68 sec, wall time      0.04 sec
w[ 57], rank =  159 /  160
    CPU time for w[ 57]      2.74 sec, wall time      0.04 sec
w[ 58], rank =  159 /  160
    CPU time for w[ 58]      2.55 sec, wall time      0.04 sec
w[ 59], rank =  159 /  160
    CPU time for w[ 59]      2.81 sec, wall time      0.04 sec
w[ 60], rank =  159 /  160
    CPU time for w[ 60]      2.55 sec, wall time      0.04 sec
w[ 61], rank =  159 /  160
    CPU time for w[ 61]      2.74 sec, wall time      0.04 sec
w[ 62], rank =  159 /  160
    CPU time for w[ 62]      2.68 sec, wall time      0.04 sec
w[ 63], rank =  159 /  160
    CPU time for w[ 63]      2.81 sec, wall time      0.04 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/diamond-prim/gth-szv-molopt-sr-40/fftisdf-yang-20/4-4-4//47008418/tmp.chk
    CPU time for building ISDF    344.59 sec, wall time      5.63 sec
