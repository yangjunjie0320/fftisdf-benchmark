OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/dzvp/fftisdf-25-40/4-4-4//47180032/
PYSCF_TMPDIR = /central/scratch/yangjunjie//work/diamond-prim/dzvp/fftisdf-25-40/4-4-4//47180032/
rm: invalid option -- 'p'
Try 'rm --help' for more information.

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.8.0
1.13.1
1.26.4


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [15 15 15] (3375 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.90605072e-01 -1.34778159e-01  3.30137712e-01]
 [-3.81210144e-01 -2.69556319e-01  6.60275424e-01]
 [-5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  4.04334478e-01  0.00000000e+00]
 [-1.90605072e-01  2.69556319e-01  3.30137712e-01]
 [-3.81210144e-01  1.34778159e-01  6.60275424e-01]
 [-5.71815216e-01 -2.77555756e-17  9.90413137e-01]
 [ 0.00000000e+00  8.08668956e-01  0.00000000e+00]
 [-1.90605072e-01  6.73890797e-01  3.30137712e-01]
 [-3.81210144e-01  5.39112637e-01  6.60275424e-01]
 [-5.71815216e-01  4.04334478e-01  9.90413137e-01]
 [ 0.00000000e+00  1.21300343e+00  0.00000000e+00]
 [-1.90605072e-01  1.07822527e+00  3.30137712e-01]
 [-3.81210144e-01  9.43447115e-01  6.60275424e-01]
 [-5.71815216e-01  8.08668956e-01  9.90413137e-01]
 [ 3.81210144e-01 -1.34778159e-01  0.00000000e+00]
 [ 1.90605072e-01 -2.69556319e-01  3.30137712e-01]
 [ 5.55111512e-17 -4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01 -5.39112637e-01  9.90413137e-01]
 [ 3.81210144e-01  2.69556319e-01  0.00000000e+00]
 [ 1.90605072e-01  1.34778159e-01  3.30137712e-01]
 [ 5.55111512e-17  0.00000000e+00  6.60275424e-01]
 [-1.90605072e-01 -1.34778159e-01  9.90413137e-01]
 [ 3.81210144e-01  6.73890797e-01  0.00000000e+00]
 [ 1.90605072e-01  5.39112637e-01  3.30137712e-01]
 [ 5.55111512e-17  4.04334478e-01  6.60275424e-01]
 [-1.90605072e-01  2.69556319e-01  9.90413137e-01]
 [ 3.81210144e-01  1.07822527e+00  0.00000000e+00]
 [ 1.90605072e-01  9.43447115e-01  3.30137712e-01]
 [ 5.55111512e-17  8.08668956e-01  6.60275424e-01]
 [-1.90605072e-01  6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01 -2.69556319e-01  0.00000000e+00]
 [ 5.71815216e-01 -4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01 -5.39112637e-01  6.60275424e-01]
 [ 1.90605072e-01 -6.73890797e-01  9.90413137e-01]
 [ 7.62420288e-01  1.34778159e-01  0.00000000e+00]
 [ 5.71815216e-01  2.77555756e-17  3.30137712e-01]
 [ 3.81210144e-01 -1.34778159e-01  6.60275424e-01]
 [ 1.90605072e-01 -2.69556319e-01  9.90413137e-01]
 [ 7.62420288e-01  5.39112637e-01  0.00000000e+00]
 [ 5.71815216e-01  4.04334478e-01  3.30137712e-01]
 [ 3.81210144e-01  2.69556319e-01  6.60275424e-01]
 [ 1.90605072e-01  1.34778159e-01  9.90413137e-01]
 [ 7.62420288e-01  9.43447115e-01  0.00000000e+00]
 [ 5.71815216e-01  8.08668956e-01  3.30137712e-01]
 [ 3.81210144e-01  6.73890797e-01  6.60275424e-01]
 [ 1.90605072e-01  5.39112637e-01  9.90413137e-01]
 [ 1.14363043e+00 -4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01 -5.39112637e-01  3.30137712e-01]
 [ 7.62420288e-01 -6.73890797e-01  6.60275424e-01]
 [ 5.71815216e-01 -8.08668956e-01  9.90413137e-01]
 [ 1.14363043e+00  5.55111512e-17  0.00000000e+00]
 [ 9.53025361e-01 -1.34778159e-01  3.30137712e-01]
 [ 7.62420288e-01 -2.69556319e-01  6.60275424e-01]
 [ 5.71815216e-01 -4.04334478e-01  9.90413137e-01]
 [ 1.14363043e+00  4.04334478e-01  0.00000000e+00]
 [ 9.53025361e-01  2.69556319e-01  3.30137712e-01]
 [ 7.62420288e-01  1.34778159e-01  6.60275424e-01]
 [ 5.71815216e-01  2.77555756e-17  9.90413137e-01]
 [ 1.14363043e+00  8.08668956e-01  0.00000000e+00]
 [ 9.53025361e-01  6.73890797e-01  3.30137712e-01]
 [ 7.62420288e-01  5.39112637e-01  6.60275424e-01]
 [ 5.71815216e-01  4.04334478e-01  9.90413137e-01]]
Overwritten attributes  tol kmesh c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [15 15 15]) is not enough for FFTDF to get integral accuracy 1e-10.
Coulomb integral error is ~ 8.8 Eh.
Recommended ke_cutoff/mesh are 679.828 / [57 57 57].

kmesh = [4 4 4]
Input parent grid mesh = [9, 9, 9], ke_cutoff =  49.82
Final parent grid size = [11  9 11]

Selecting interpolation points
nkpts = 64, nao = 26, c0 =  25.00
Parent grid mesh = [11  9 11], grid size = 1089

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    179.16 sec, wall time      2.84 sec
Pivoted Cholesky rank = 1089, nip = 650, estimated error = 2.74e-03
Number of interpolation points = 650, effective CISDF =  25.00
    CPU time for building left-hand side     45.73 sec, wall time      0.72 sec

kpt = 64, ngrid = 3375, nao = 26
ngrid = 3375, blksize = 73727, nip = 650
required disk space = 2 GB
finished creating fswp: /central/scratch/yangjunjie/work/diamond-prim/dzvp/fftisdf-25-40/4-4-4/47180032/sdw3kqyr
blksize = 73727, memory for aoR_loop = 49072 MB
finished aoR_loop[       0:    3375]
    CPU time for building right-hand side    107.16 sec, wall time      3.42 sec
w[  0], rank =  214 /  650
    CPU time for w[  0]     22.20 sec, wall time      0.35 sec
w[  1], rank =  214 /  650
    CPU time for w[  1]     19.76 sec, wall time      0.31 sec
w[  2], rank =  214 /  650
    CPU time for w[  2]     20.86 sec, wall time      0.33 sec
w[  3], rank =  214 /  650
    CPU time for w[  3]     20.59 sec, wall time      0.32 sec
w[  4], rank =  214 /  650
    CPU time for w[  4]     21.50 sec, wall time      0.34 sec
w[  5], rank =  214 /  650
    CPU time for w[  5]     20.48 sec, wall time      0.32 sec
w[  6], rank =  214 /  650
    CPU time for w[  6]     21.44 sec, wall time      0.34 sec
w[  7], rank =  214 /  650
    CPU time for w[  7]     20.58 sec, wall time      0.32 sec
w[  8], rank =  214 /  650
    CPU time for w[  8]     20.84 sec, wall time      0.33 sec
w[  9], rank =  214 /  650
    CPU time for w[  9]     20.84 sec, wall time      0.33 sec
w[ 10], rank =  214 /  650
    CPU time for w[ 10]     21.78 sec, wall time      0.34 sec
w[ 11], rank =  214 /  650
    CPU time for w[ 11]     21.00 sec, wall time      0.33 sec
w[ 12], rank =  214 /  650
    CPU time for w[ 12]     20.40 sec, wall time      0.32 sec
w[ 13], rank =  214 /  650
    CPU time for w[ 13]     20.93 sec, wall time      0.33 sec
w[ 14], rank =  214 /  650
    CPU time for w[ 14]     21.05 sec, wall time      0.33 sec
w[ 15], rank =  214 /  650
    CPU time for w[ 15]     20.75 sec, wall time      0.33 sec
w[ 16], rank =  214 /  650
    CPU time for w[ 16]     21.02 sec, wall time      0.33 sec
w[ 17], rank =  214 /  650
    CPU time for w[ 17]     20.93 sec, wall time      0.33 sec
w[ 18], rank =  214 /  650
    CPU time for w[ 18]     20.80 sec, wall time      0.33 sec
w[ 19], rank =  214 /  650
    CPU time for w[ 19]     21.02 sec, wall time      0.33 sec
w[ 20], rank =  214 /  650
    CPU time for w[ 20]     21.05 sec, wall time      0.33 sec
w[ 21], rank =  214 /  650
    CPU time for w[ 21]     20.57 sec, wall time      0.32 sec
w[ 22], rank =  214 /  650
    CPU time for w[ 22]     20.98 sec, wall time      0.33 sec
w[ 23], rank =  214 /  650
    CPU time for w[ 23]     20.89 sec, wall time      0.33 sec
w[ 24], rank =  214 /  650
    CPU time for w[ 24]     20.82 sec, wall time      0.33 sec
w[ 25], rank =  214 /  650
    CPU time for w[ 25]     22.70 sec, wall time      0.36 sec
w[ 26], rank =  214 /  650
    CPU time for w[ 26]     21.15 sec, wall time      0.33 sec
w[ 27], rank =  214 /  650
    CPU time for w[ 27]     20.72 sec, wall time      0.32 sec
w[ 28], rank =  214 /  650
    CPU time for w[ 28]     21.00 sec, wall time      0.33 sec
w[ 29], rank =  214 /  650
    CPU time for w[ 29]     20.84 sec, wall time      0.33 sec
w[ 30], rank =  214 /  650
    CPU time for w[ 30]     20.80 sec, wall time      0.33 sec
w[ 31], rank =  214 /  650
    CPU time for w[ 31]     21.21 sec, wall time      0.33 sec
w[ 32], rank =  214 /  650
    CPU time for w[ 32]     21.29 sec, wall time      0.33 sec
w[ 33], rank =  214 /  650
    CPU time for w[ 33]     20.94 sec, wall time      0.33 sec
w[ 34], rank =  214 /  650
    CPU time for w[ 34]     21.18 sec, wall time      0.33 sec
w[ 35], rank =  214 /  650
    CPU time for w[ 35]     21.19 sec, wall time      0.33 sec
w[ 36], rank =  214 /  650
    CPU time for w[ 36]     21.00 sec, wall time      0.33 sec
w[ 37], rank =  214 /  650
    CPU time for w[ 37]     21.32 sec, wall time      0.33 sec
w[ 38], rank =  214 /  650
    CPU time for w[ 38]     21.47 sec, wall time      0.34 sec
w[ 39], rank =  214 /  650
    CPU time for w[ 39]     21.07 sec, wall time      0.33 sec
w[ 40], rank =  214 /  650
    CPU time for w[ 40]     24.46 sec, wall time      0.39 sec
w[ 41], rank =  214 /  650
    CPU time for w[ 41]     20.84 sec, wall time      0.33 sec
w[ 42], rank =  214 /  650
    CPU time for w[ 42]     20.62 sec, wall time      0.32 sec
w[ 43], rank =  214 /  650
    CPU time for w[ 43]     20.78 sec, wall time      0.33 sec
w[ 44], rank =  214 /  650
    CPU time for w[ 44]     20.94 sec, wall time      0.33 sec
w[ 45], rank =  214 /  650
    CPU time for w[ 45]     20.71 sec, wall time      0.32 sec
w[ 46], rank =  214 /  650
    CPU time for w[ 46]     20.89 sec, wall time      0.33 sec
w[ 47], rank =  214 /  650
    CPU time for w[ 47]     21.02 sec, wall time      0.33 sec
w[ 48], rank =  214 /  650
    CPU time for w[ 48]     20.82 sec, wall time      0.33 sec
w[ 49], rank =  214 /  650
    CPU time for w[ 49]     20.85 sec, wall time      0.33 sec
w[ 50], rank =  214 /  650
    CPU time for w[ 50]     21.01 sec, wall time      0.33 sec
w[ 51], rank =  214 /  650
    CPU time for w[ 51]     20.71 sec, wall time      0.32 sec
w[ 52], rank =  214 /  650
    CPU time for w[ 52]     20.94 sec, wall time      0.33 sec
w[ 53], rank =  214 /  650
    CPU time for w[ 53]     21.04 sec, wall time      0.33 sec
w[ 54], rank =  214 /  650
    CPU time for w[ 54]     20.92 sec, wall time      0.33 sec
w[ 55], rank =  214 /  650
    CPU time for w[ 55]     22.68 sec, wall time      0.36 sec
w[ 56], rank =  214 /  650
    CPU time for w[ 56]     20.89 sec, wall time      0.33 sec
w[ 57], rank =  214 /  650
    CPU time for w[ 57]     20.73 sec, wall time      0.33 sec
w[ 58], rank =  214 /  650
    CPU time for w[ 58]     20.93 sec, wall time      0.33 sec
w[ 59], rank =  214 /  650
    CPU time for w[ 59]     21.17 sec, wall time      0.33 sec
w[ 60], rank =  214 /  650
    CPU time for w[ 60]     20.96 sec, wall time      0.33 sec
w[ 61], rank =  214 /  650
    CPU time for w[ 61]     20.89 sec, wall time      0.33 sec
w[ 62], rank =  214 /  650
    CPU time for w[ 62]     21.07 sec, wall time      0.33 sec
w[ 63], rank =  214 /  650
    CPU time for w[ 63]     20.82 sec, wall time      0.33 sec
Saving FFTISDF results to /central/scratch/yangjunjie//work/diamond-prim/dzvp/fftisdf-25-40/4-4-4//47180032/tmp.chk
    CPU time for building ISDF   1694.01 sec, wall time     28.63 sec
Dumping vj and vk to vjk.chk
