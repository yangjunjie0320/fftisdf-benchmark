OMP_NUM_THREADS = 64
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 491520
TMPDIR = /central/scratch/yangjunjie///work/nio-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008489/
PYSCF_TMPDIR = /central/scratch/yangjunjie///work/nio-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008489/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.7.0
1.14.1
1.26.4
WARNING!
  Very diffused basis functions are found in the basis set. They may lead to severe
  linear dependence and numerical instability.  You can set  cell.exp_to_discard=0.1
  to remove the diffused Gaussians whose exponents are less than 0.1.



******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [17 17 17] (4913 PWs)
len(kpts) = 64
    kpts = [[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.62121641e-01 -1.14637399e-01  2.80803037e-01]
 [-3.24243283e-01 -2.29274798e-01  5.61606073e-01]
 [-4.86364924e-01 -3.43912196e-01  8.42409110e-01]
 [ 1.34152098e-09  3.43912129e-01  0.00000000e+00]
 [-1.62121640e-01  2.29274730e-01  2.80803037e-01]
 [-3.24243281e-01  1.14637331e-01  5.61606073e-01]
 [-4.86364922e-01 -6.72557783e-08  8.42409110e-01]
 [ 2.68304197e-09  6.87824258e-01  0.00000000e+00]
 [-1.62121639e-01  5.73186859e-01  2.80803037e-01]
 [-3.24243280e-01  4.58549461e-01  5.61606073e-01]
 [-4.86364921e-01  3.43912062e-01  8.42409110e-01]
 [ 4.02456295e-09  1.03173639e+00  0.00000000e+00]
 [-1.62121637e-01  9.17098988e-01  2.80803037e-01]
 [-3.24243278e-01  8.02461590e-01  5.61606073e-01]
 [-4.86364920e-01  6.87824191e-01  8.42409110e-01]
 [ 3.24243282e-01 -1.14637331e-01  0.00000000e+00]
 [ 1.62121641e-01 -2.29274729e-01  2.80803037e-01]
 [-2.46173915e-10 -3.43912128e-01  5.61606073e-01]
 [-1.62121642e-01 -4.58549527e-01  8.42409110e-01]
 [ 3.24243284e-01  2.29274798e-01  0.00000000e+00]
 [ 1.62121642e-01  1.14637400e-01  2.80803037e-01]
 [ 1.09534709e-09  7.74527886e-10  5.61606073e-01]
 [-1.62121640e-01 -1.14637398e-01  8.42409110e-01]
 [ 3.24243285e-01  5.73186927e-01  0.00000000e+00]
 [ 1.62121644e-01  4.58549529e-01  2.80803037e-01]
 [ 2.43686804e-09  3.43912130e-01  5.61606073e-01]
 [-1.62121639e-01  2.29274731e-01  8.42409110e-01]
 [ 3.24243286e-01  9.17099056e-01  0.00000000e+00]
 [ 1.62121645e-01  8.02461658e-01  2.80803037e-01]
 [ 3.77838905e-09  6.87824259e-01  5.61606073e-01]
 [-1.62121637e-01  5.73186860e-01  8.42409110e-01]
 [ 6.48486565e-01 -2.29274661e-01  0.00000000e+00]
 [ 4.86364923e-01 -3.43912060e-01  2.80803037e-01]
 [ 3.24243282e-01 -4.58549459e-01  5.61606073e-01]
 [ 1.62121641e-01 -5.73186858e-01  8.42409110e-01]
 [ 6.48486566e-01  1.14637468e-01  0.00000000e+00]
 [ 4.86364925e-01  6.88048341e-08  2.80803037e-01]
 [ 3.24243283e-01 -1.14637330e-01  5.61606073e-01]
 [ 1.62121642e-01 -2.29274729e-01  8.42409110e-01]
 [ 6.48486567e-01  4.58549597e-01  0.00000000e+00]
 [ 4.86364926e-01  3.43912198e-01  2.80803037e-01]
 [ 3.24243285e-01  2.29274799e-01  5.61606073e-01]
 [ 1.62121643e-01  1.14637400e-01  8.42409110e-01]
 [ 6.48486569e-01  8.02461726e-01  0.00000000e+00]
 [ 4.86364927e-01  6.87824327e-01  2.80803037e-01]
 [ 3.24243286e-01  5.73186928e-01  5.61606073e-01]
 [ 1.62121645e-01  4.58549529e-01  8.42409110e-01]
 [ 9.72729847e-01 -3.43911992e-01  0.00000000e+00]
 [ 8.10608206e-01 -4.58549391e-01  2.80803037e-01]
 [ 6.48486564e-01 -5.73186790e-01  5.61606073e-01]
 [ 4.86364923e-01 -6.87824188e-01  8.42409110e-01]
 [ 9.72729848e-01  1.36835140e-07  0.00000000e+00]
 [ 8.10608207e-01 -1.14637262e-01  2.80803037e-01]
 [ 6.48486566e-01 -2.29274661e-01  5.61606073e-01]
 [ 4.86364924e-01 -3.43912059e-01  8.42409110e-01]
 [ 9.72729849e-01  3.43912266e-01  0.00000000e+00]
 [ 8.10608208e-01  2.29274867e-01  2.80803037e-01]
 [ 6.48486567e-01  1.14637468e-01  5.61606073e-01]
 [ 4.86364926e-01  6.95793620e-08  8.42409110e-01]
 [ 9.72729851e-01  6.87824395e-01  0.00000000e+00]
 [ 8.10608210e-01  5.73186996e-01  2.80803037e-01]
 [ 6.48486568e-01  4.58549597e-01  5.61606073e-01]
 [ 4.86364927e-01  3.43912199e-01  8.42409110e-01]]
Overwritten attributes  kmesh tol c0  of <class 'fft_isdf.InterpolativeSeparableDensityFitting'>

WARN: ke_cutoff/mesh (40 / [17 17 17]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 1.2e+02 Eh.
Recommended ke_cutoff/mesh are 1166.24 / [87 87 87].

kmesh = [4 4 4]
Input parent grid mesh = [6, 6, 6], ke_cutoff =   9.01
Final parent grid size = [7 5 7]

Selecting interpolation points
nkpts = 64, nao = 14, c0 =  10.00
Parent grid mesh = [7 5 7], grid size = 245

WARN: The parent grid might be too coarse.

    CPU time for select interpolation points    119.57 sec, wall time      1.88 sec
Pivoted Cholesky rank = 245, nip = 140, estimated error = 3.52e-02
Number of interpolation points = 140, effective CISDF =  10.00
    CPU time for building left-hand side      1.95 sec, wall time      0.04 sec

kpt = 64, ngrid = 4913, nao = 14
ngrid = 4913, blksize = 342556, nip = 140
required disk space = 0 GB
finished creating fswp: /central/scratch/yangjunjie/work/nio-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4/47008489/pcfzf7r9
blksize = 342556, memory for aoR_loop = 49108 MB
finished aoR_loop[       0:    4913]
    CPU time for building right-hand side     56.56 sec, wall time      1.30 sec
w[  0], rank =  140 /  140
    CPU time for w[  0]     36.62 sec, wall time      0.59 sec
w[  1], rank =  140 /  140
    CPU time for w[  1]     41.49 sec, wall time      0.66 sec
w[  2], rank =  140 /  140
    CPU time for w[  2]     39.56 sec, wall time      0.63 sec
w[  3], rank =  140 /  140
    CPU time for w[  3]     69.52 sec, wall time      1.12 sec
w[  4], rank =  140 /  140
    CPU time for w[  4]     68.44 sec, wall time      1.09 sec
w[  5], rank =  140 /  140
    CPU time for w[  5]     38.13 sec, wall time      0.61 sec
w[  6], rank =  140 /  140
    CPU time for w[  6]     48.11 sec, wall time      0.77 sec
w[  7], rank =  140 /  140
    CPU time for w[  7]     40.47 sec, wall time      0.64 sec
w[  8], rank =  140 /  140
    CPU time for w[  8]     62.58 sec, wall time      1.00 sec
w[  9], rank =  140 /  140
    CPU time for w[  9]     40.40 sec, wall time      0.64 sec
w[ 10], rank =  140 /  140
    CPU time for w[ 10]     65.67 sec, wall time      1.05 sec
w[ 11], rank =  140 /  140
    CPU time for w[ 11]     69.84 sec, wall time      1.12 sec
w[ 12], rank =  140 /  140
    CPU time for w[ 12]     57.18 sec, wall time      0.92 sec
w[ 13], rank =  140 /  140
    CPU time for w[ 13]     46.13 sec, wall time      0.73 sec
w[ 14], rank =  140 /  140
    CPU time for w[ 14]     36.53 sec, wall time      0.58 sec
w[ 15], rank =  140 /  140
    CPU time for w[ 15]     34.63 sec, wall time      0.55 sec
w[ 16], rank =  140 /  140
    CPU time for w[ 16]     39.53 sec, wall time      0.63 sec
w[ 17], rank =  140 /  140
    CPU time for w[ 17]     45.92 sec, wall time      0.73 sec
w[ 18], rank =  140 /  140
    CPU time for w[ 18]     41.01 sec, wall time      0.65 sec
w[ 19], rank =  140 /  140
    CPU time for w[ 19]     40.46 sec, wall time      0.64 sec
w[ 20], rank =  140 /  140
    CPU time for w[ 20]     37.22 sec, wall time      0.59 sec
w[ 21], rank =  140 /  140
    CPU time for w[ 21]     39.00 sec, wall time      0.63 sec
w[ 22], rank =  140 /  140
    CPU time for w[ 22]     40.61 sec, wall time      0.65 sec
w[ 23], rank =  140 /  140
    CPU time for w[ 23]     45.76 sec, wall time      0.73 sec
w[ 24], rank =  140 /  140
    CPU time for w[ 24]     37.61 sec, wall time      0.60 sec
w[ 25], rank =  140 /  140
    CPU time for w[ 25]     78.06 sec, wall time      1.24 sec
w[ 26], rank =  140 /  140
    CPU time for w[ 26]     49.81 sec, wall time      0.80 sec
w[ 27], rank =  140 /  140
    CPU time for w[ 27]     64.99 sec, wall time      1.03 sec
w[ 28], rank =  140 /  140
    CPU time for w[ 28]     69.90 sec, wall time      1.12 sec
w[ 29], rank =  140 /  140
    CPU time for w[ 29]     65.57 sec, wall time      1.04 sec
w[ 30], rank =  140 /  140
    CPU time for w[ 30]     38.89 sec, wall time      0.62 sec
w[ 31], rank =  140 /  140
    CPU time for w[ 31]     69.95 sec, wall time      1.12 sec
w[ 32], rank =  140 /  140
    CPU time for w[ 32]     43.13 sec, wall time      0.68 sec
w[ 33], rank =  140 /  140
    CPU time for w[ 33]     36.02 sec, wall time      0.57 sec
w[ 34], rank =  140 /  140
    CPU time for w[ 34]     63.56 sec, wall time      1.02 sec
w[ 35], rank =  140 /  140
    CPU time for w[ 35]     37.02 sec, wall time      0.58 sec
w[ 36], rank =  140 /  140
    CPU time for w[ 36]     39.31 sec, wall time      0.62 sec
w[ 37], rank =  140 /  140
    CPU time for w[ 37]     33.34 sec, wall time      0.53 sec
w[ 38], rank =  140 /  140
    CPU time for w[ 38]     54.14 sec, wall time      0.85 sec
w[ 39], rank =  140 /  140
    CPU time for w[ 39]     67.68 sec, wall time      1.08 sec
w[ 40], rank =  140 /  140
    CPU time for w[ 40]     42.10 sec, wall time      0.67 sec
w[ 41], rank =  140 /  140
    CPU time for w[ 41]     34.09 sec, wall time      0.54 sec
w[ 42], rank =  140 /  140
    CPU time for w[ 42]     41.68 sec, wall time      0.66 sec
w[ 43], rank =  140 /  140
    CPU time for w[ 43]     63.43 sec, wall time      1.01 sec
w[ 44], rank =  140 /  140
    CPU time for w[ 44]     43.83 sec, wall time      0.71 sec
w[ 45], rank =  140 /  140
    CPU time for w[ 45]     43.56 sec, wall time      0.70 sec
w[ 46], rank =  140 /  140
    CPU time for w[ 46]     40.14 sec, wall time      0.64 sec
w[ 47], rank =  140 /  140
    CPU time for w[ 47]     36.38 sec, wall time      0.59 sec
w[ 48], rank =  140 /  140
    CPU time for w[ 48]     68.87 sec, wall time      1.11 sec
w[ 49], rank =  140 /  140
    CPU time for w[ 49]     37.26 sec, wall time      0.59 sec
w[ 50], rank =  140 /  140
    CPU time for w[ 50]     40.36 sec, wall time      0.64 sec
w[ 51], rank =  140 /  140
    CPU time for w[ 51]     62.07 sec, wall time      0.99 sec
w[ 52], rank =  140 /  140
    CPU time for w[ 52]     74.79 sec, wall time      1.19 sec
w[ 53], rank =  140 /  140
    CPU time for w[ 53]     54.46 sec, wall time      0.88 sec
w[ 54], rank =  140 /  140
    CPU time for w[ 54]     35.25 sec, wall time      0.56 sec
w[ 55], rank =  140 /  140
    CPU time for w[ 55]     59.91 sec, wall time      0.96 sec
w[ 56], rank =  140 /  140
    CPU time for w[ 56]     52.54 sec, wall time      0.83 sec
w[ 57], rank =  140 /  140
    CPU time for w[ 57]     35.78 sec, wall time      0.57 sec
w[ 58], rank =  140 /  140
    CPU time for w[ 58]     65.91 sec, wall time      1.06 sec
w[ 59], rank =  140 /  140
    CPU time for w[ 59]     39.57 sec, wall time      0.63 sec
w[ 60], rank =  140 /  140
    CPU time for w[ 60]     33.69 sec, wall time      0.53 sec
w[ 61], rank =  140 /  140
    CPU time for w[ 61]     37.65 sec, wall time      0.60 sec
w[ 62], rank =  140 /  140
    CPU time for w[ 62]     39.87 sec, wall time      0.65 sec
w[ 63], rank =  140 /  140
    CPU time for w[ 63]     73.24 sec, wall time      1.19 sec
Saving FFTISDF results to /central/scratch/yangjunjie///work/nio-prim/gth-szv-molopt-sr-40/fftisdf-yang-10/4-4-4//47008489/tmp.chk
    CPU time for building ISDF   3323.35 sec, wall time     53.41 sec
